{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/confirm-delete-modal/confirm-delete-modal.component.html","webpack:///./src/app/components/confirm-delete-modal/confirm-delete-modal.component.scss","webpack:///./src/app/components/confirm-delete-modal/confirm-delete-modal.component.ts","webpack:///./src/app/components/confirm-modal/confirm-modal.component.html","webpack:///./src/app/components/confirm-modal/confirm-modal.component.scss","webpack:///./src/app/components/confirm-modal/confirm-modal.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.scss","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/header_n/header_n.component.html","webpack:///./src/app/components/header_n/header_n.component.scss","webpack:///./src/app/components/header_n/header_n.component.ts","webpack:///./src/app/configuration.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/interceptors/error.interceptor.ts","webpack:///./src/app/interceptors/header.interceptor.ts","webpack:///./src/app/pages/auth/login/login.component.html","webpack:///./src/app/pages/auth/login/login.component.scss","webpack:///./src/app/pages/auth/login/login.component.ts","webpack:///./src/app/pages/beacon/beacon-edit/beacon-edit.component.html","webpack:///./src/app/pages/beacon/beacon-edit/beacon-edit.component.scss","webpack:///./src/app/pages/beacon/beacon-edit/beacon-edit.component.ts","webpack:///./src/app/pages/beacon/beacon-list/beacon-list.component.html","webpack:///./src/app/pages/beacon/beacon-list/beacon-list.component.scss","webpack:///./src/app/pages/beacon/beacon-list/beacon-list.component.ts","webpack:///./src/app/pages/beacon/beacon-register/beacon-register.component.html","webpack:///./src/app/pages/beacon/beacon-register/beacon-register.component.scss","webpack:///./src/app/pages/beacon/beacon-register/beacon-register.component.ts","webpack:///./src/app/pages/beacon/services/beacon.service.ts","webpack:///./src/app/pages/car/car-edit/car-edit.component.html","webpack:///./src/app/pages/car/car-edit/car-edit.component.scss","webpack:///./src/app/pages/car/car-edit/car-edit.component.ts","webpack:///./src/app/pages/car/car-list/car-list.component.html","webpack:///./src/app/pages/car/car-list/car-list.component.scss","webpack:///./src/app/pages/car/car-list/car-list.component.ts","webpack:///./src/app/pages/car/car-register/car-register.component.html","webpack:///./src/app/pages/car/car-register/car-register.component.scss","webpack:///./src/app/pages/car/car-register/car-register.component.ts","webpack:///./src/app/pages/car/services/car.service.ts","webpack:///./src/app/pages/dashboard/car-config-notification/car-config-notification.component.html","webpack:///./src/app/pages/dashboard/car-config-notification/car-config-notification.component.scss","webpack:///./src/app/pages/dashboard/car-config-notification/car-config-notification.component.ts","webpack:///./src/app/pages/dashboard/car-dashboard/car-dashboard.component.html","webpack:///./src/app/pages/dashboard/car-dashboard/car-dashboard.component.scss","webpack:///./src/app/pages/dashboard/car-dashboard/car-dashboard.component.ts","webpack:///./src/app/pages/dashboard/car-timeline/car-timeline.component.html","webpack:///./src/app/pages/dashboard/car-timeline/car-timeline.component.scss","webpack:///./src/app/pages/dashboard/car-timeline/car-timeline.component.ts","webpack:///./src/app/pages/dashboard/services/dashboard.service.ts","webpack:///./src/app/pages/data/data-export/data-export.component.html","webpack:///./src/app/pages/data/data-export/data-export.component.scss","webpack:///./src/app/pages/data/data-export/data-export.component.ts","webpack:///./src/app/pages/data/services/data.service.ts","webpack:///./src/app/pages/data/services/excel.service.ts","webpack:///./src/app/pages/dealer/dealer-config-notification/dealer-config-notification.component.html","webpack:///./src/app/pages/dealer/dealer-config-notification/dealer-config-notification.component.scss","webpack:///./src/app/pages/dealer/dealer-config-notification/dealer-config-notification.component.ts","webpack:///./src/app/pages/dealer/dealer-create/dealer-create.component.html","webpack:///./src/app/pages/dealer/dealer-create/dealer-create.component.scss","webpack:///./src/app/pages/dealer/dealer-create/dealer-create.component.ts","webpack:///./src/app/pages/dealer/dealer-edit/dealer-edit.component.html","webpack:///./src/app/pages/dealer/dealer-edit/dealer-edit.component.scss","webpack:///./src/app/pages/dealer/dealer-edit/dealer-edit.component.ts","webpack:///./src/app/pages/dealer/dealer-information/dealer-information.component.html","webpack:///./src/app/pages/dealer/dealer-information/dealer-information.component.scss","webpack:///./src/app/pages/dealer/dealer-information/dealer-information.component.ts","webpack:///./src/app/pages/dealer/dealer-list/dealer-list.component.html","webpack:///./src/app/pages/dealer/dealer-list/dealer-list.component.scss","webpack:///./src/app/pages/dealer/dealer-list/dealer-list.component.ts","webpack:///./src/app/pages/dealer/services/dealer.service.ts","webpack:///./src/app/pages/menu/menu/menu.component.html","webpack:///./src/app/pages/menu/menu/menu.component.scss","webpack:///./src/app/pages/menu/menu/menu.component.ts","webpack:///./src/app/pages/node/node-config/node-config.component.html","webpack:///./src/app/pages/node/node-config/node-config.component.scss","webpack:///./src/app/pages/node/node-config/node-config.component.ts","webpack:///./src/app/pages/node/node-edit/node-edit.component.html","webpack:///./src/app/pages/node/node-edit/node-edit.component.scss","webpack:///./src/app/pages/node/node-edit/node-edit.component.ts","webpack:///./src/app/pages/node/services/node.service.ts","webpack:///./src/app/pages/profile/profile-edit/profile-edit.component.html","webpack:///./src/app/pages/profile/profile-edit/profile-edit.component.scss","webpack:///./src/app/pages/profile/profile-edit/profile-edit.component.ts","webpack:///./src/app/pages/profile/profile-pwd/profile-pwd.component.html","webpack:///./src/app/pages/profile/profile-pwd/profile-pwd.component.scss","webpack:///./src/app/pages/profile/profile-pwd/profile-pwd.component.ts","webpack:///./src/app/pages/profile/services/profile.service.ts","webpack:///./src/app/pages/station/services/station.service.ts","webpack:///./src/app/pages/station/station-config/station-config.component.html","webpack:///./src/app/pages/station/station-config/station-config.component.scss","webpack:///./src/app/pages/station/station-config/station-config.component.ts","webpack:///./src/app/pages/station/station-edit/station-edit.component.html","webpack:///./src/app/pages/station/station-edit/station-edit.component.scss","webpack:///./src/app/pages/station/station-edit/station-edit.component.ts","webpack:///./src/app/pages/user/services/user.service.ts","webpack:///./src/app/pages/user/user-create/user-create.component.html","webpack:///./src/app/pages/user/user-create/user-create.component.scss","webpack:///./src/app/pages/user/user-create/user-create.component.ts","webpack:///./src/app/pages/user/user-edit/user-edit.component.html","webpack:///./src/app/pages/user/user-edit/user-edit.component.scss","webpack:///./src/app/pages/user/user-edit/user-edit.component.ts","webpack:///./src/app/pages/user/user-list/user-list.component.html","webpack:///./src/app/pages/user/user-list/user-list.component.scss","webpack:///./src/app/pages/user/user-list/user-list.component.ts","webpack:///./src/app/services/authen/authen.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { LoginComponent } from './pages/auth/login/login.component';\r\nimport { DealerListComponent } from './pages/dealer/dealer-list/dealer-list.component';\r\nimport { DealerEditComponent } from './pages/dealer/dealer-edit/dealer-edit.component';\r\nimport { DealerCreateComponent } from './pages/dealer/dealer-create/dealer-create.component';\r\nimport { DealerInformationComponent } from './pages/dealer/dealer-information/dealer-information.component';\r\nimport { DealerConfigNotificationComponent } from './pages/dealer/dealer-config-notification/dealer-config-notification.component';\r\nimport { UserListComponent } from './pages/user/user-list/user-list.component';\r\nimport { UserCreateComponent } from './pages/user/user-create/user-create.component';\r\nimport { UserEditComponent } from './pages/user/user-edit/user-edit.component';\r\nimport { CarDashboardComponent } from './pages/dashboard/car-dashboard/car-dashboard.component';\r\nimport { CarTimelineComponent } from './pages/dashboard/car-timeline/car-timeline.component';\r\nimport { CarConfigNotificationComponent } from './pages/dashboard/car-config-notification/car-config-notification.component';\r\nimport { MenuComponent } from './pages/menu/menu/menu.component';\r\nimport { DataExportComponent } from './pages/data/data-export/data-export.component';\r\nimport { BeaconListComponent } from './pages/beacon/beacon-list/beacon-list.component';\r\nimport { BeaconRegisterComponent } from './pages/beacon/beacon-register/beacon-register.component';\r\nimport { BeaconEditComponent } from './pages/beacon/beacon-edit/beacon-edit.component';\r\nimport { CarRegisterComponent } from './pages/car/car-register/car-register.component';\r\nimport { CarListComponent } from './pages/car/car-list/car-list.component';\r\nimport { CarEditComponent } from './pages/car/car-edit/car-edit.component';\r\nimport { ProfileEditComponent } from './pages/profile/profile-edit/profile-edit.component';\r\nimport { ProfilePwdComponent } from './pages/profile/profile-pwd/profile-pwd.component';\r\nimport { StationEditComponent } from './pages/station/station-edit/station-edit.component';\r\nimport { NodeEditComponent } from './pages/node/node-edit/node-edit.component';\r\nimport { StationConfigComponent } from './pages/station/station-config/station-config.component';\r\nimport { NodeConfigComponent } from './pages/node/node-config/node-config.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login', \r\n    pathMatch: 'full',\r\n  },{\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [AuthGuard]\r\n  },{\r\n    path: 'menu',\r\n    component: MenuComponent,\r\n    canActivate: [AuthGuard]\r\n  },{\r\n    path: 'dealer',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'list', component: DealerListComponent },\r\n      { path: 'create', component: DealerCreateComponent },\r\n      { path: 'edit/:dealerId', component: DealerEditComponent },\r\n      { path: 'information/:dealerId', component: DealerInformationComponent },\r\n      { \r\n        path: 'config', \r\n        children: [\r\n          { path: 'notification/:dealerId', component: DealerConfigNotificationComponent },\r\n          { path: 'beacon/:dealerId', component: BeaconListComponent },\r\n        ]\r\n      }\r\n    ]\r\n  },{\r\n    path: 'station',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'config/:dealerId', component: StationConfigComponent },\r\n      { path: 'edit/:dealerId/:stationId', component: StationEditComponent },\r\n    ]\r\n  },{\r\n    path: 'node',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'config/:dealerId', component: NodeConfigComponent },\r\n      { path: 'edit/:dealerId/:nodeId', component: NodeEditComponent },\r\n    ]\r\n  },{\r\n    path: 'user',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'list/:dealerId', component: UserListComponent },\r\n      { path: 'create/:dealerId', component: UserCreateComponent },\r\n      { path: 'edit/:dealerId/:userId', component: UserEditComponent },\r\n    ]\r\n  },{\r\n    path: 'dashboard',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'car/:dealerId', component: CarDashboardComponent },\r\n      { path: 'timeline/:dealerId/:carId', component: CarTimelineComponent },\r\n      { \r\n        path: 'config', \r\n        children: [\r\n          { path: 'notification/:dealerId', component: CarConfigNotificationComponent },\r\n        ]\r\n      }\r\n    ]\r\n  },{\r\n    path: 'data',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'export/:dealerId', component: DataExportComponent },\r\n    ]\r\n  },{\r\n    path: 'beacon',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'list/:dealerId', component: BeaconListComponent },\r\n      { path: 'register/:dealerId', component: BeaconRegisterComponent },\r\n      { path: 'edit/:dealerId/:beaconId', component: BeaconEditComponent },\r\n    ]\r\n  },{\r\n    path: 'car',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'list/:dealerId', component: CarListComponent },\r\n      { path: 'register/:dealerId', component: CarRegisterComponent },\r\n      { path: 'edit/:dealerId/:carId', component: CarEditComponent },\r\n    ]\r\n  },{\r\n    path: 'profile',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'edit', component: ProfileEditComponent },\r\n      { path: 'pwd', component: ProfilePwdComponent }\r\n      \r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n  en=true;\n  zh=false;\n  constructor(private translate: TranslateService) {\n    translate.addLangs(['en', 'zh']); \n    translate.setDefaultLang('en'); \n    let browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|zh/) ? browserLang : 'zh');\n  }\n  //切换语言\n  changeLang(lang) {\n\tthis.translate.use(lang);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from '../app/interceptors/error.interceptor';\nimport { HeaderInterceptor } from '../app/interceptors/header.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { AuthGuard } from './guard/auth.guard';\n\nimport { LoginComponent } from './pages/auth/login/login.component';\nimport { DealerListComponent } from './pages/dealer/dealer-list/dealer-list.component';\nimport { DealerEditComponent } from './pages/dealer/dealer-edit/dealer-edit.component';\nimport { DealerCreateComponent } from './pages/dealer/dealer-create/dealer-create.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { Header_nComponent } from './components/header_n/header_n.component';\nimport { DealerInformationComponent } from './pages/dealer/dealer-information/dealer-information.component';\nimport { DealerConfigNotificationComponent } from './pages/dealer/dealer-config-notification/dealer-config-notification.component';\nimport { UserListComponent } from './pages/user/user-list/user-list.component';\nimport { UserCreateComponent } from './pages/user/user-create/user-create.component';\nimport { UserEditComponent } from './pages/user/user-edit/user-edit.component';\nimport { CarDashboardComponent } from './pages/dashboard/car-dashboard/car-dashboard.component';\nimport { CarTimelineComponent } from './pages/dashboard/car-timeline/car-timeline.component';\nimport { CarConfigNotificationComponent } from './pages/dashboard/car-config-notification/car-config-notification.component';\nimport { MenuComponent } from './pages/menu/menu/menu.component';\nimport { DataExportComponent } from './pages/data/data-export/data-export.component';\nimport { BeaconListComponent } from './pages/beacon/beacon-list/beacon-list.component';\nimport { BeaconRegisterComponent } from './pages/beacon/beacon-register/beacon-register.component';\nimport { BeaconEditComponent } from './pages/beacon/beacon-edit/beacon-edit.component';\nimport { CarRegisterComponent } from './pages/car/car-register/car-register.component';\nimport { CarListComponent } from './pages/car/car-list/car-list.component';\nimport { CarEditComponent } from './pages/car/car-edit/car-edit.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { ConfirmModalComponent } from './components/confirm-modal/confirm-modal.component';\nimport { ConfirmDeleteModalComponent } from './components/confirm-delete-modal/confirm-delete-modal.component';\nimport { ProfileEditComponent } from './pages/profile/profile-edit/profile-edit.component';\nimport { ProfilePwdComponent } from './pages/profile/profile-pwd/profile-pwd.component';\nimport { StationEditComponent } from './pages/station/station-edit/station-edit.component';\nimport { NodeEditComponent } from './pages/node/node-edit/node-edit.component';\nimport { StationConfigComponent } from './pages/station/station-config/station-config.component';\nimport { NodeConfigComponent } from './pages/node/node-config/node-config.component';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DealerListComponent,\n    DealerEditComponent,\n    DealerCreateComponent,\n    HeaderComponent,\n    Header_nComponent,\n    DealerInformationComponent,\n    DealerConfigNotificationComponent,\n    UserListComponent,\n    UserCreateComponent,\n    UserEditComponent,\n    CarDashboardComponent,\n    CarTimelineComponent,\n    CarConfigNotificationComponent,\n    MenuComponent,\n    DataExportComponent,\n    BeaconListComponent,\n    BeaconRegisterComponent,\n    BeaconEditComponent,\n    CarRegisterComponent,\n    CarListComponent,\n    CarEditComponent,\n    FooterComponent,\n    ConfirmModalComponent,\n    ConfirmDeleteModalComponent,\n    ProfileEditComponent,\n    StationEditComponent,\n    NodeEditComponent,\n    StationConfigComponent,\n    NodeConfigComponent\n    ,\n    ProfilePwdComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HeaderInterceptor,\n      multi: true\n    } ,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div id=\\\"confirm-delete-modal\\\" uk-modal=\\\"bg-close:false; esc-close=false;\\\">\\n    <div class=\\\"uk-modal-dialog\\\">\\n        <div class=\\\"uk-modal-body\\\">\\n            <p>{{detail}}</p>\\n        </div>\\n        <div class=\\\"uk-modal-footer uk-text-right\\\">\\n          <button class=\\\"uk-button uk-button-primary uk-border-rounded\\\" type=\\\"button\\\" (click)=\\\"clickConfirm()\\\">{{confirm}}</button>\\n          <button class=\\\"uk-button uk-button-default uk-modal-close uk-margin-left uk-border-rounded\\\" type=\\\"button\\\" (click)=\\\"clickCancel()\\\">{{cancel}}</button>\\n        </div>\\n    </div>\\n  </div>\"","module.exports = \"\"","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\ndeclare var UIkit: any;\n@Component({\n  selector: 'app-confirm-delete-modal',\n  templateUrl: './confirm-delete-modal.component.html',\n  styleUrls: ['./confirm-delete-modal.component.scss']\n})\nexport class ConfirmDeleteModalComponent implements OnInit {\n  @Input() header: string = \"Confirm\";\n  @Input() detail: string = \"Are you confirm?\";\n  @Input() confirm: string = \"Confirm\";\n  @Input() cancel: string = \"Cancel\";\n  @Output() onClick = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  clickConfirm(){\n    this.onClick.emit(true);\n  }\n\n  clickCancel(){\n    this.onClick.emit(false);\n  }\n}\n","module.exports = \"<div attr.id=\\\"{{elementId}}\\\"  uk-modal=\\\"bg-close:false; esc-close=false;\\\">\\n  <div class=\\\"uk-modal-dialog\\\">\\n      <div class=\\\"uk-modal-body\\\">\\n          <p>{{detail}}</p>\\n      </div>\\n      <div class=\\\"uk-modal-footer uk-text-right\\\">\\n        <button class=\\\"uk-button uk-button-primary uk-border-rounded\\\" type=\\\"button\\\" (click)=\\\"clickConfirm()\\\" [translate]=\\\"confirm\\\"></button>\\n        <button class=\\\"uk-button uk-button-default uk-modal-close uk-margin-left uk-border-rounded\\\" type=\\\"button\\\" (click)=\\\"clickCancel()\\\" [translate]=\\\"cancel\\\"></button>\\n      </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\ndeclare var UIkit: any;\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent implements OnInit {\n  @Input() header: string = \"Confirm\";\n  @Input() detail: string = \"Are you confirm?\";\n  @Input() confirm: string = \"Confirm\";\n  @Input() cancel: string = \"Cancel\";\n  @Input() elementId: string = \"confirm-modal\";\n  @Output() onClick = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  clickConfirm(){\n    this.onClick.emit(true);\n  }\n\n  clickCancel(){\n    this.onClick.emit(false);\n  }\n}\n","module.exports = \"<!-- <nav class=\\\"uk-navbar-container uk-margin footer-bottom\\\" uk-navbar>\\r\\n  <div class=\\\"uk-navbar-left\\\">\\r\\n    xcvxcvvs\\r\\n  </div>\\r\\n  <div class=\\\"uk-navbar-right\\\">\\r\\n  </div>\\r\\n</nav> -->\\r\\n\\r\\n<!-- <div class=\\\"footer-bottom uk-margin-top\\\"></div> -->\\r\\n\\r\\n<!-- <div class=\\\"footer-padding \\\" ></div> -->\\r\\n \\r\\n<!-- <ul class=\\\"uk-subnav uk-subnav-divider uk-child-width-1-3 uk-text-center  uk-margin-remove  footer-bottom\\\" >\\r\\n  <li><a class=\\\"uk-text-emphasis\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"dashboard()\\\">{{'DashBoard'|translate}} {{'Management'|translate}}</a></li>\\r\\n  <li><a class=\\\"uk-text-emphasis\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"carManagement()\\\">{{'Car'|translate}} {{'Management'|translate}}</a></li>\\r\\n  <li><a class=\\\"uk-text-emphasis\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"profileManagement()\\\">{{'Profile'|translate}} {{'Management'|translate}}</a></li>\\r\\n</ul> -->\\r\\n\\r\\n<ul class=\\\"footer-bottom\\\" >\\r\\n    <li>\\r\\n      <a class=\\\"uk-text-emphasis\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"dashboard()\\\">\\r\\n         <i style=\\\" background-size:100% 100%; background-repeat: no-repeat; background-position: center center; \\\"  data-src=\\\"assets/images/dash.png\\\" uk-img ></i>\\r\\n        <span class=\\\"uk-text-small\\\">{{'dashboard'|translate}}</span>\\r\\n      </a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a class=\\\"uk-text-emphasis\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"carManagement()\\\">\\r\\n        <i style=\\\" background-size:100% 100%; background-repeat: no-repeat; background-position: center center; \\\" data-src=\\\"assets/images/car.png\\\" uk-img ></i>   \\r\\n        <span class=\\\"uk-text-small\\\">{{'car'|translate}}</span>\\r\\n    </a>\\r\\n  </li>\\r\\n    <li>\\r\\n      <a class=\\\"uk-text-emphasis\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"profileManagement()\\\">\\r\\n        <i style=\\\" background-size:100% 100%; background-repeat: no-repeat; background-position: center center; \\\" data-src=\\\"assets/images/proli.png\\\" uk-img ></i>  \\r\\n        <span class=\\\"uk-text-small\\\">{{'profile'|translate}}</span>\\r\\n      </a>\\r\\n    </li>\\r\\n</ul>\"","module.exports = \"/* new class */\\n.footer-bottom {\\n  bottom: 0;\\n  width: 100%;\\n  height: 62px;\\n  /* Height of the footer */\\n  background: #f8f8f8;\\n  position: fixed;\\n  display: flex;\\n  margin: 0;\\n  padding: 0;\\n  list-style: none; }\\n.footer-bottom > li {\\n  margin: 0;\\n  padding: 0;\\n  flex: 1;\\n  display: flex;\\n  justify-content: center;\\n  text-align: center !important;\\n  position: relative; }\\n.footer-bottom > li:not(:first-child) a::after {\\n  content: '';\\n  display: block;\\n  width: 1px;\\n  height: 20px;\\n  background: #3d3d3d;\\n  position: absolute;\\n  left: 0;\\n  top: 14px;\\n  z-index: 100; }\\n.footer-bottom > li a {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0 auto !important;\\n  position: relative;\\n  text-decoration: none !important; }\\n.footer-bottom > li a i {\\n  display: block;\\n  margin: 10px auto 0;\\n  width: 30px !important;\\n  height: 22px !important; }\\n@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {\\n  .footer-bottom {\\n    height: 96px; } }\\n\""," import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  //encapsulation: ViewEncapsulation.Native\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  dealerId = '';\n    \n  \n  role = {\n    admin: false,\n    supervisor: false,\n    technician: false,\n    analyst: false,\n  }\n\n  constructor(private router:Router, public translate: TranslateService) { }\n\n  ngOnInit() {\n    \n    this.dealerId = localStorage.getItem('dealerId');\n    let userType = localStorage.getItem('userType');\n    this.role[userType] = true;\n     \n  }\n\n   \n  userManagement(){\n    this.router.navigate(['user', 'list', this.dealerId]);\n  }\n\n  dashboard(){\n    this.router.navigate(['dashboard', 'car', this.dealerId]);\n  }\n\n \n\n  carManagement(){\n    this.router.navigate(['car', 'list', this.dealerId]);\n  }\n\n  profileManagement(){\n    this.router.navigate(['profile', 'edit']);\n  }\n}\n","module.exports = \"<nav class=\\\"uk-navbar-container uk-margin\\\" style=\\\"padding-top:1em;\\\" uk-navbar>\\n  <div class=\\\"uk-navbar-left\\\">\\n    <div class=\\\"uk-navbar-item\\\" *ngIf=\\\"button.back\\\">\\n      <a class=\\\"uk-button uk-button-default uk-button-small uk-border-rounded\\\" (click)=\\\"onClick('back')\\\"><span uk-icon=\\\"chevron-left\\\"></span>{{'back'|translate}}</a>\\n    </div>\\n    <!-- <div class=\\\"uk-navbar-item\\\" *ngIf=\\\"role.admin\\\">\\n      <a class=\\\"uk-button uk-button-default uk-border-rounded\\\"  routerLink=\\\"/dealer/list\\\">{{'dealer'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-item\\\" *ngIf=\\\"role.supervisor\\\">\\n      <a class=\\\"uk-button uk-button-default uk-border-rounded\\\" routerLink=\\\"/user/list\\\">{{'user'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-item\\\" *ngIf=\\\"role.supervisor\\\">\\n      <a class=\\\"uk-button uk-button-default uk-border-rounded\\\" routerLink=\\\"/dashboard/car\\\">{{'dashboard'|translate}}</a>\\n    </div> -->\\n  </div>\\n  <div class=\\\"uk-navbar-right\\\">\\n<!--    <div class=\\\"uk-navbar-item\\\">\\n        <div>{{'username'|translate}}: {{account.username}}</div>\\n    </div>\\n    <div class=\\\"uk-navbar-item\\\">\\n        <div>{{'position'|translate}}: {{account.role}}</div>\\n    </div>-->\\n    <div class=\\\"uk-navbar-item\\\">\\n      <a class=\\\"uk-button uk-button-default uk-button-small uk-border-rounded\\\"  (click)=\\\"onClick('logout'); logout();\\\">{{'logout'|translate}}</a>\\n    </div>\\n  </div>\\n</nav>\"","module.exports = \"\"","import { Component, OnInit, EventEmitter, Input, Output  } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthenService } from '../../services/authen/authen.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input() backPath: boolean = false;\n  @Output() onClickButton = new EventEmitter<string>();\n\n  account = {\n    username:\"\",\n    role:\"\",\n  }\n\n  role = {\n    admin: false,\n    supervisor: false,\n    technician: false,\n    analyst: false,\n  }\n\n  button = {\n    back:false,\n  }\n\n  constructor(private router : Router, private location: Location, private auth : AuthenService) { }\n\n  ngOnInit() {\n    this.button.back = this.backPath;\n    let userType = localStorage.getItem('userType');\n    let userName = localStorage.getItem('userName');\n    this.role[userType] = true;\n    this.account.username = userName;\n    this.account.role = userType;\n  }\n\n  onClick(button){\n    this.onClickButton.emit(button);\n  }\n\n  logout(){\n    this.auth.userLogout().then((res:any)=>{\n      this.router.navigate(['login']);\n      //window.location.href = window.location.protocol+\"//\"+window.location.hostname+\":\"+window.location.port+\"/tracking/#/login\";\n    }).catch(err=>{\n      this.router.navigate(['login']);\n    });\n    \n  }\n\n}\n","module.exports = \"<nav class=\\\"uk-navbar-container uk-margin\\\" style=\\\"padding-top:1em;\\\" uk-navbar>\\r\\n  <div class=\\\"uk-navbar-left\\\">\\r\\n    <div class=\\\"uk-navbar-item\\\" *ngIf=\\\"button.back\\\">\\r\\n      <a class=\\\"uk-button uk-button-default uk-button-small uk-border-rounded\\\" (click)=\\\"onClick('back')\\\"><span uk-icon=\\\"chevron-left\\\"></span>{{'back'|translate}}</a>\\r\\n    </div>\\r\\n   \\r\\n  </div>\\r\\n  <div class=\\\"uk-navbar-right\\\">\\r\\n \\r\\n    <div class=\\\"uk-navbar-item\\\">\\r\\n      新版头部，只是为了方便退出系统而已  <a class=\\\"uk-button uk-button-default uk-button-small uk-border-rounded\\\"  (click)=\\\"onClick('logout'); logout();\\\">{{'logout'|translate}}</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\"","module.exports = \"\"","import { Component, OnInit, EventEmitter, Input, Output  } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthenService } from '../../services/authen/authen.service';\n\n@Component({\n  selector: 'app-header_n',\n  templateUrl: './header_n.component.html',\n  styleUrls: ['./header_n.component.scss']\n})\nexport class Header_nComponent implements OnInit {\n  @Input() backPath: boolean = false;\n  @Output() onClickButton = new EventEmitter<string>();\n\n  account = {\n    username:\"\",\n    role:\"\",\n  }\n\n  role = {\n    admin: false,\n    supervisor: false,\n    technician: false,\n    analyst: false,\n  }\n\n  button = {\n    back:false,\n  }\n\n  constructor(private router : Router, private location: Location, private auth : AuthenService) { }\n\n  ngOnInit() {\n    this.button.back = this.backPath;\n    let userType = localStorage.getItem('userType');\n    let userName = localStorage.getItem('userName');\n    this.role[userType] = true;\n    this.account.username = userName;\n    this.account.role = userType;\n  }\n\n  onClick(button){\n    this.onClickButton.emit(button);\n  }\n\n  logout(){\n    this.auth.userLogout().then((res:any)=>{\n      this.router.navigate(['login']);\n      //window.location.href = window.location.protocol+\"//\"+window.location.hostname+\":\"+window.location.port+\"/tracking/#/login\";\n    }).catch(err=>{\n      this.router.navigate(['login']);\n    });\n    \n  }\n\n}\n","export const Configuration = {\r\n\t//server_url: \"http://139.59.234.153/tracking/services/public/api\",\r\n\tserver_url: \"http://52.231.153.79/services/public/api\",\r\n\t//server_url: \"http://tracking.test/api\",\r\n};\r\n  ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenService } from '../services/authen/authen.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private router: Router, private authService: AuthenService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.clear();\r\n                \r\n                this.router.navigate(['login']);\r\n                //window.location.href = window.location.protocol+\"//\"+window.location.hostname+\":\"+window.location.port+\"/tracking/view/#/login\";\r\n                location.reload(true);\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HeaderInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let token = localStorage.getItem('authToken');\r\n\t\trequest = request.clone({\r\n\t\t\tsetHeaders: { \r\n\t\t\t\tAuthorization: 'Bearer ' + token\r\n\t\t\t}\r\n\t\t});\r\n        return next.handle(request);\r\n    }\r\n}","module.exports = \"<div class=\\\"uk-background-muted uk-panel\\\" style=\\\"background-color: #dedfe4; background-size:cover;  height: 100vh;background-repeat: no-repeat; background-position: center right; \\\"  data-src=\\\"assets/images/bglogin.jpg\\\" uk-img>\\r\\n   \\r\\n  \\r\\n  <div class=\\\"uk-position-large uk-position-center uk-overlay  uk-overlay-new\\\">\\r\\n      <div class=\\\"uk-position-large  uk-margin-xlarge-bottom uk-position-large-new\\\">\\r\\n      <h3 class=\\\"uk-card-title uk-text-center uk-card-title-new\\\">{{'appname' |translate}}</h3>\\r\\n       \\r\\n      </div>\\r\\n    <div class=\\\"uk-card small-padding  uk-card-default uk-card-body uk-width-1-1  uk-border-rounded  uk-margin-remove \\\" style=\\\"opacity:0.9;\\\">\\r\\n      <div class=\\\"uk-alert-danger\\\" *ngIf=\\\"alert.show\\\" uk-alert>{{alert.message}}</div>\\r\\n        <div class=\\\"uk-margin-bottom\\\"></div>\\r\\n        <div class=\\\"uk-margin uk-width-1-1 uk-grid uk-grid-new uk-margin-remove  \\\"    >\\r\\n            <label  class=\\\"uk-width-2-5 small-font  uk-width-2-5-new uk-text uk-text-left uk-padding-remove uk-margin-remove\\\">{{'username' |translate}}</label>\\r\\n            <input class=\\\"uk-input uk-input-new  uk-width-3-5  uk-fb-input\\\"    name=\\\"username\\\"  type=\\\"text\\\"   [(ngModel)]=\\\"form.username\\\" (keyup.enter)=\\\"login()\\\">\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"uk-margin-xlarge-bottom small-margin uk-margin-xlarge-bottom-new\\\"></div>\\r\\n        <div class=\\\"uk-margin uk-width-1-1 uk-grid uk-grid-new uk-margin-remove \\\"   >\\r\\n            <label  class=\\\"uk-width-2-5 small-font uk-width-2-5-new  uk-text-left   uk-padding-remove uk-margin-remove\\\">{{'password' |translate}}</label>\\r\\n            <input class=\\\"uk-input uk-input-new uk-width-3-5  uk-fb-input\\\"   name=\\\"password\\\"  type=\\\"password\\\"   [(ngModel)]=\\\"form.password\\\" (keyup.enter)=\\\"login()\\\">\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"uk-margin-large-bottom small-margin-bottom\\\"></div>\\r\\n        <div class=\\\"uk-margin-top uk-text-center \\\">\\r\\n        <button (click)=\\\"changeLang()\\\" class=\\\"uk-button uk-button-new uk-button-link\\\">{{ changemessage }}</button>\\r\\n      </div>\\r\\n    \\r\\n  \\r\\n    <!-- <div class=\\\"uk-margin-top\\\">\\r\\n      <button (click)=\\\"changeLang()\\\" class=\\\"uk-button uk-button-link\\\">{{ changemessage }}</button>\\r\\n    </div> -->\\r\\n      <!-- <form class=\\\" uk-overlay-default\\\">\\r\\n          <div class=\\\"uk-alert-danger\\\" *ngIf=\\\"alert.show\\\" uk-alert>{{alert.message}}</div>\\r\\n        <div class=\\\"uk-margin\\\">\\r\\n          <input class=\\\"uk-input\\\" name=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"{{'username' |translate}}\\\" [(ngModel)]=\\\"form.username\\\" (keyup.enter)=\\\"login()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"uk-margin\\\">\\r\\n          <input class=\\\"uk-input\\\" name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"{{'password' |translate}}\\\" [(ngModel)]=\\\"form.password\\\" (keyup.enter)=\\\"login()\\\">\\r\\n        </div>\\r\\n      </form> -->\\r\\n      <!-- <div class=\\\"uk-margin\\\">\\r\\n        <button class=\\\"uk-button uk-button-primary uk-width-1-1\\\" (click)=\\\"login()\\\">\\r\\n          {{'login'|translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"uk-margin-top\\\">\\r\\n        <button (click)=\\\"changeLang()\\\" class=\\\"uk-button uk-button-link\\\">{{ changemessage }}</button>\\r\\n      </div> -->\\r\\n    </div>\\r\\n    <div class=\\\"uk-margin-large-bottom\\\"></div>\\r\\n    \\r\\n    <div class=\\\"uk-margin login-btn\\\">\\r\\n        <button class=\\\"uk-button login-btn-inner uk-button-primary uk-width-1-1\\\" (click)=\\\"login()\\\" style=\\\"background-color: #4259a9;\\\">\\r\\n          {{'login'|translate}}\\r\\n        </button>\\r\\n  \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n</div>\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\"><span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span></div>\\r\\n\"","module.exports = \".uk-fb-input {\\n  background-color: #d4d5d6; }\\n\\n.uk-width-2-5-new {\\n  width: 34%;\\n  color: #000000;\\n  font-size: 16px; }\\n\\n.uk-card-title-new {\\n  font-size: 26px; }\\n\\n.uk-overlay-new {\\n  padding: 0; }\\n\\n.uk-position-large-new {\\n  margin: 0 0 64px 0; }\\n\\n.uk-input-new {\\n  width: 66%;\\n  height: 26px;\\n  padding-left: 10px; }\\n\\n.uk-grid-new {\\n  height: 26px;\\n  align-items: center; }\\n\\n.uk-margin-xlarge-bottom {\\n  margin-bottom: 60px !important; }\\n\\n.uk-button-new {\\n  text-decoration: underline; }\\n\\n.login-btn {\\n  width: 75%;\\n  margin: 0 auto; }\\n\\n.login-btn-inner {\\n  background: rgba(66, 90, 169, 0.9) !important;\\n  border-radius: 6px !important;\\n  margin-top: 8px; }\\n\\n@media screen and (max-width: 370px) {\\n  .small-padding {\\n    padding: 10px 12px 20px 12px !important; }\\n  .small-font {\\n    font-size: 14px; }\\n  .small-margin {\\n    margin-bottom: 35px !important; }\\n  .small-margin-bottom {\\n    margin-bottom: 25px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenService } from '../../../services/authen/authen.service';\r\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\r\n// declare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loading = false;\r\n  language = this.translate.currentLang;\r\n  nextlang = '';\r\n  changemessage = '';\r\n \r\n  changeLang() {\r\n    this.translate.use(this.nextlang);\r\n    this.language = this.nextlang;\r\n    this.langmassage();\r\n  }\r\n     \r\n  langmassage(){\r\n    if(this.language == 'en'){\r\n      this.nextlang = 'zh';\r\n      this.changemessage='切换为中文';\r\n    }else{\r\n      this.nextlang = 'en';\r\n      this.changemessage='Show in English';\r\n    }\r\n  }\r\n\r\n  alert = {\r\n    show: false,\r\n    message : \"\",\r\n  }\r\n\r\n  form = {\r\n    username : '',\r\n    password: '',\r\n  }\r\n\r\n  constructor(private router : Router, private auth : AuthenService, public translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.langmassage();\r\n  }\r\n\r\n  login(){\r\n    this.alert.show=false;\r\n    this.loading = true;\r\n    this.auth.userLogin(this.form.username, this.form.password).then((res:any)=>{\r\n        this.loading = false;\r\n        console.log(res.user);\r\n        if(res.user.user_role_id != \"\"){\r\n          localStorage.setItem('userType', res.user.user_role_id);\r\n          localStorage.setItem('userName', res.user.username);\r\n          localStorage.setItem('userId', res.user.id);\r\n          localStorage.setItem('dealerId', res.user.dealer_id);\r\n          this.router.navigate(['menu']);\r\n         // this.router.navigate(['menu']);\r\n         this.router.navigate(['dashboard', 'car', res.user.dealer_id]);\r\n        }\r\n    }).catch(err=>{\r\n      this.alert.show = true;\r\n      this.alert.message = this.translate.instant('Username or Password Incorrect');\r\n      this.loading = false;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<app-header>\\n</app-header>\\n<div class=\\\"uk-container\\\">\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n        <div class=\\\"uk-navbar-left\\\">\\n            <a class=\\\"uk-navbar-item uk-logo\\\">{{'edit'|translate}} {{'beacon'|translate}}</a>\\n        </div>\\n        <div class=\\\"uk-navbar-right\\\">\\n        </div>\\n    </nav>\\n    <form class=\\\"uk-form-stacked\\\">\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">*{{'uuid'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"uuid\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"beacon.uuid\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">*{{'name'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"name\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"beacon.name\\\">\\n            </div>\\n        </div>\\n    </form>\\n    <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"editBeacon()\\\">{{'edit'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelBeacon()\\\">{{'cancel'|translate}}</button>\\n    </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BeaconService } from '../services/beacon.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-beacon-edit',\n  templateUrl: './beacon-edit.component.html',\n  styleUrls: ['./beacon-edit.component.scss']\n})\nexport class BeaconEditComponent implements OnInit {\n\n  dealerId = '';\n  beaconId = '';\n  loading = false;\n\n  confirmModal = {\n    elementId:\"beacon-edit-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to update User?\"),\n    state:\"\",\n  }\n  \n  beacon = {\n    uuid: '',\n    name:'',\n  }\n\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private beaconService: BeaconService, private translate: TranslateService) { \n    this.beaconId = activeRoute.snapshot.params['beaconId'];\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadBeacon();\n  }\n\n  loadBeacon(){\n    this.beaconService.get(this.beaconId).then((res:any)=>{\n      this.loading=false;\n      this.beacon = res.data.beacon;\n    }).catch((err:any)=>{\n      this.loading=false;\n      UIkit.notification({\n        message: err,\n        status: 'warning',\n        timeout: 1000\n      })\n    })\n  }\n\n  editBeacon(){\n    if(this.beacon.uuid == \"\"){\n      UIkit.notification({\n        message: this.translate.instant(\"Beacon UUID cannot emptry\"),\n        status: 'warning',\n        timeout: 1000\n      })\n      return;\n    }\n    if(this.beacon.name == \"\"){\n      UIkit.notification({\n        message: this.translate.instant(\"Beacon Name cannot emptry\"),\n        status: 'warning',\n        timeout: 1000\n      })\n      return;\n    }\n    this.beacon.uuid = this.beacon.uuid.toLowerCase();\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    this.confirmModal.detail = this.translate.instant(\"Do you confirm to update\")+\" \"+ this.beacon.name +\" \"+this.translate.instant(\"Beacon\")+\"?\";\n    UIkit.modal(_elementId).show();\n  }\n\n  cancelBeacon(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['beacon', 'list', this.dealerId]);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.loading=true;\n      this.beaconService.edit(this.beacon).then((res:any)=>{\n        this.loading=false;\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.router.navigate(['beacon', 'list', this.dealerId]);\n      }).catch((err:any)=>{\n        UIkit.modal(_elementId).hide();\n        this.loading=false;\n        UIkit.notification({\n          message: err,\n          status: 'warning',\n          timeout: 1000\n        })\n      })\n\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'beacon'|translate}} {{'configuration'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n    </div>\\n  </nav>\\n  <fieldset class=\\\"uk-fieldset uk-background-muted uk-padding-small\\\">\\n\\t<div class=\\\"uk-margin\\\">\\n        <input class=\\\"uk-input\\\" type=\\\"text\\\" placeholder=\\\"*{{'name'|translate}}\\\" [(ngModel)]=\\\"beacon.name\\\">\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <input class=\\\"uk-input\\\" type=\\\"text\\\" placeholder=\\\"*{{'uuid'|translate}}\\\" [(ngModel)]=\\\"beacon.uuid\\\">\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <button class=\\\"uk-button uk-button-primary uk-border-rounded\\\" (click)=\\\"registerBeacon()\\\">{{'register'|translate}} {{'beacon'|translate}}</button>\\n\\t</div>\\n  </fieldset>\\n\\n  <div class=\\\"uk-card uk-card-default uk-margin\\\" style=\\\"border:1px solid #ddd;\\\"  *ngFor=\\\"let bc of beacons; let i = index\\\">\\n    <div class=\\\"uk-card-header uk-background-muted\\\">\\n\\t\\t<div class=\\\"uk-width-expand\\\">\\n\\t\\t\\t<h3 class=\\\"uk-card-title uk-margin-remove-bottom\\\">{{bc.name}}</h3>\\n\\t\\t\\t<p class=\\\"uk-text-meta uk-margin-remove-top\\\">{{'id' |translate}}: {{bc.id}}</p>\\n\\t\\t\\t<!-- <p>{{'uuid' |translate}}:  {{bc.uuid}}</p> -->\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"uk-card-footer\\\">\\n          <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded\\\" (click)=\\\"editBeacon(bc.id)\\\">{{'edit'|translate}}</button>\\n          <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded uk-margin-left\\\" (click)=\\\"deleteBeacon(bc.id, bc.name)\\\">{{'delete'|translate}}</button>\\n\\t</div>\\n  </div>  \\n\\n  <div class=\\\" uk-margin\\\">\\n    <ul class=\\\"uk-pagination uk-flex-center\\\" uk-margin>\\n      <li *ngIf=\\\"pageController.pageIndex != 1\\\">\\n        <a (click)=\\\"changePageonClick(false,-1)\\\">\\n          <span uk-pagination-previous></span>\\n        </a>\\n      </li>\\n      <li *ngIf=\\\"pageController.pageIndex > 4\\\" class=\\\"uk-disabled\\\">\\n        <span>...</span>\\n      </li>\\n      <li *ngFor=\\\"let index of pageController.pageArray\\\" [class.uk-active]=\\\"index==pageController.pageIndex\\\">\\n        <a (click)=\\\"changePageonClick(true,index)\\\">{{index}}</a>\\n      </li>\\n      <!-- <li class=\\\"uk-active\\\"><span>4</span></li> -->\\n      <li *ngIf=\\\"pageController.pageNumber - pageController.pageIndex > 3\\\" class=\\\"uk-disabled\\\">\\n        <span>...</span>\\n      </li>\\n      <li *ngIf=\\\"pageController.pageIndex != pageController.pageNumber\\\">\\n        <a (click)=\\\"changePageonClick(false,1)\\\">\\n          <span uk-pagination-next></span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport { BeaconService } from '../services/beacon.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-beacon-list',\n  templateUrl: './beacon-list.component.html',\n  styleUrls: ['./beacon-list.component.scss']\n})\nexport class BeaconListComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n\n  confirmModal = {\n    elementId:\"beacon-list-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to update information?\"),\n    state:\"\",\n  }\n\n  pageController = {\n    itemPerPage: 10,\n    itemNumber: 0,\n    pageNumber: 0,\n    pageIndex: 1,\n    pageArray: [],\n  };\n\n  beacon = {\n    name:\"\",\n    uuid:\"\",\n  }\n\n  beacons = [];\n\n//mockup\ndeleteIndex=0;\n//mockup\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private beaconService: BeaconService, private translate: TranslateService) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadBeacon();\n  }\n\n  loadBeacon(){\n    this.loading = true;\n    this.beaconService.list(this.dealerId, (this.pageController.pageIndex - 1) * this.pageController.itemPerPage, this.pageController.itemPerPage).then((res:any)=>{\n      this.pageController.itemNumber = res.data.count;\n      this.pageController.pageNumber = Math.ceil(this.pageController.itemNumber / this.pageController.itemPerPage);\n      this.pageController.pageArray = [];\n\n      ///make pagination\n      this.pageController.pageArray.push(this.pageController.pageIndex);\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex - count - 1 > 0 ){\n          this.pageController.pageArray.unshift(this.pageController.pageIndex - count - 1);\n        }\n      }\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex + count < this.pageController.pageNumber){\n          this.pageController.pageArray.push(this.pageController.pageIndex + count + 1);\n        }\n      }\n      this.beacons = res.data.beacon;\n      this.loading = false;\n    }).catch((err:any)=>{\n      UIkit.notification({\n        message: this.translate.instant('Cannot load Beacon'),\n        status: 'warning',\n        timeout: 1000\n      });\n      this.loading = false;\n    });\n  }\n\n  changePageonClick(option, index){\n    if(option){\n      this.pageController.pageIndex = index;\n    }else{\n      this.pageController.pageIndex += index;\n    }\n    this.loadBeacon();\n  }\n\n  registerBeacon(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(this.beacon.name !='' && this.beacon.uuid  !=''){\n      this.confirmModal.detail=this.translate.instant(\"Do you confirm to register\")+\" \" + this.beacon.name + \" \"+this.translate.instant(\"beacon\")+\"?\";\n      this.confirmModal.state=\"add\";\n      UIkit.modal(_elementId).show();\n    } else {\n      if(this.beacon.name ==''){\n        UIkit.notification({\n          message: this.translate.instant('name')+\" \"+this.translate.instant('cannot emtry!!!'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n      if(this.beacon.uuid ==''){\n        UIkit.notification({\n          message: this.translate.instant('uuid')+\" \"+this.translate.instant('cannot emtry!!!'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n    }\n  }\n\n  editBeacon(beaconId){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['beacon', 'edit', this.dealerId, beaconId]);\n  }\n  \n  deleteBeacon(index ,name){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    this.deleteIndex = index;\n    this.confirmModal.detail=this.translate.instant(\"Do you confirm to delete\")+\" \"+name+\" \"+this.translate.instant(\"beacon\")+\"?\";\n    this.confirmModal.state=\"delete\";\n    UIkit.modal(_elementId).show();\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    \n    if(event){\n      this.loading = true;\n      if(this.confirmModal.state == \"add\"){\n        if(this.beacon.uuid == \"\"){\n          UIkit.notification({\n            message: this.translate.instant(\"Beacon UUID cannot emptry\"),\n            status: 'warning',\n            timeout: 1000\n          })\n          return;\n        }\n        if(this.beacon.name == \"\"){\n          UIkit.notification({\n            message: this.translate.instant(\"Beacon Name cannot emptry\"),\n            status: 'warning',\n            timeout: 1000\n          })\n          return;\n        }\n        this.beacon.uuid = this.beacon.uuid.toLowerCase();\n        this.beaconService.create(this.dealerId, this.beacon).then((res:any)=>{\n          this.beacon.name ='';\n        this.beacon.uuid ='';\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          this.loadBeacon();\n        }).catch((err:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          UIkit.notification({\n            message: this.translate.instant('Cannot create Beacon!!!'),\n            status: 'warning',\n            timeout: 1000\n          });\n        })\n      } else if(this.confirmModal.state == \"delete\"){\n        this.beaconService.delete(this.deleteIndex).then((res:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          this.loadBeacon();\n        }).catch((err:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          UIkit.notification({\n            message: this.translate.instant('Cannot delete Beacon!!!'),\n            status: 'warning',\n            timeout: 1000\n          });\n        })\n        UIkit.modal(_elementId).hide();\n        this.loading = false;\n      }\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n  onHeaderClick(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event == 'back'){\n      UIkit.modal(_elementId).$destroy(true);\n      this.router.navigate(['menu']);\n    }\n  }\n}\n","module.exports = \"<app-header>\\n</app-header>\\n<div class=\\\"uk-container\\\">\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n        <div class=\\\"uk-navbar-left\\\">\\n            <a class=\\\"uk-navbar-item uk-logo\\\" >{{'register beacon'|translate}}</a>\\n        </div>\\n        <div class=\\\"uk-navbar-right\\\">\\n            <div class=\\\"uk-navbar-item\\\">\\n                <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"registerBeacon()\\\">{{'register'|translate}}</button>\\n                <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelBeacon()\\\">{{'cancel'|translate}}</button>\\n            </div>\\n        </div>\\n    </nav>\\n    <form class=\\\"uk-form-stacked\\\">\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">*{{'id'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"id\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.id\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'name'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"name\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.name\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">*{{'uuid'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"uuid\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.uuid\\\">\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\\n<div id=\\\"modal-confirm\\\" uk-modal>\\n    <div class=\\\"uk-modal-dialog uk-modal-body\\\">\\n        <p>{{'register beacon'|translate}}?</p>\\n        <p class=\\\"uk-text-right\\\">\\n            <button class=\\\"uk-button uk-button-primary uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"modalConfirm()\\\">{{'confirm'|translate}}</button>\\n            <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"modalCancel()\\\">{{'cancel'|translate}}</button>\\n        </p>\\n    </div>\\n</div>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-beacon-register',\n  templateUrl: './beacon-register.component.html',\n  styleUrls: ['./beacon-register.component.scss']\n})\nexport class BeaconRegisterComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n\n  form = {\n    id: '',\n    uuid: '',\n    name:'',\n  }\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    UIkit.util.on('#modal-confirm', 'shown', function () {\n  });\n  }\n\n  registerBeacon(){\n    UIkit.modal('#modal-confirm').show();\n  }\n\n  cancelBeacon(){\n    this.router.navigate(['beacon', 'list', this.dealerId ]);\n    UIkit.modal('#modal-confirm').$destroy(true);\n  }\n\n  modalConfirm(){\n    UIkit.util.on('#modal-confirm', 'hidden', function () {\n      UIkit.modal('#modal-confirm').$destroy(true);\n    });\n    UIkit.modal('#modal-confirm').hide();\n    this.router.navigate(['beacon', 'list', this.dealerId ]);\n  }\n\n  modalCancel(){\n    UIkit.modal('#modal-confirm').hide();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeaconService {\n\n  constructor(private http: HttpClient){\n  }\n\n  get(id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/beacon/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  list(dealer_id,offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/beacon/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        limit: limit,\n        offset: offset,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  create(dealer_id, beacon){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/beacon/create\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        name: beacon.name,\n        uuid: beacon.uuid,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  edit(beacon){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/beacon/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n\n      this.http.post(apiURL,beacon,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  delete(beacon_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/beacon/delete\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: beacon_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n}\n","module.exports = \"<div class=\\\"uk-container register-wrap\\\" style=\\\"padding-top:1.5em;\\\"  >\\r\\n        <div class=\\\"uk-margin-top\\\" uk-grid>\\r\\n          <div class=\\\"uk-width-1-3 uk-text-center uk-text-emphasis\\\"  (click)=\\\"cancelCar()\\\">{{'cancel'|translate}}</div>\\r\\n          \\r\\n          <div class=\\\"uk-width-1-3\\\"></div>\\r\\n          <div class=\\\"uk-width-1-3 uk-text-center\\\">\\r\\n            <button class=\\\"uk-button-primary save-btn\\\" (click)=\\\"editCar()\\\">{{'save'|translate}}</button>\\r\\n          </div>\\r\\n       \\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"uk-width-1-1 register-padding uk-text-emphasis uk-margin-large-top uk-text-large\\\"\\r\\n        >\\r\\n        {{'edit'|translate}} {{'car'|translate}} \\r\\n        </div>\\r\\n        <div class=\\\"uk-margin-top\\\" uk-grid>\\r\\n          <div class=\\\"uk-width-1-2 uk-padding-right\\\">\\r\\n            <input class=\\\"uk-search-input grayBg input-padding-left uk-text-emphasis\\\" type=\\\"text\\\" name=\\\"licensePlate\\\" id=\\\"licensePlate\\\" type=\\\"text\\\" [(ngModel)]=\\\"car.license_plate\\\" placeholder=\\\"*{{'license plate'|translate}}\\\" />\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"uk-form-controls uk-width-1-2\\\">\\r\\n            \\r\\n            <select  class=\\\"uk-select uk-form-small grayBg uk-text-emphasis\\\" id=\\\"beacon\\\" name=\\\"beacon\\\"  [(ngModel)]=\\\"car.beacon_name\\\"  >\\r\\n                <option class=\\\"uk-form-small grayBg uk-text-emphasis\\\" *ngFor=\\\"let beacon of beacons\\\" value=\\\"{{beacon.name}}\\\">{{beacon.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n           \\r\\n        </div>\\r\\n       \\r\\n      </div>\\r\\n      \\r\\n      <app-confirm-modal\\r\\n        [elementId]=\\\"confirmModal.elementId\\\"\\r\\n        [detail]=\\\"confirmModal.detail\\\"\\r\\n        (onClick)=\\\"onClickConfirmModal($event)\\\"\\r\\n      ></app-confirm-modal>\\r\\n      \\r\\n      <div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n        <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n      </div>\\r\\n<!--       \\r\\n \\r\\n<div class=\\\"uk-container\\\">\\r\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\r\\n        <div class=\\\"uk-navbar-left\\\">\\r\\n            <a class=\\\"uk-navbar-item uk-logo\\\">{{'car'|translate}} {{'edit'|translate}}</a>\\r\\n        </div>\\r\\n        <div class=\\\"uk-navbar-right\\\">\\r\\n        </div>\\r\\n    </nav>\\r\\n    <form class=\\\"uk-form-stacked\\\">\\r\\n        <div class=\\\"uk-margin\\\">\\r\\n            <label class=\\\"uk-form-label\\\" for=\\\"licensePlate\\\">*{{'license plate'|translate}}</label>\\r\\n            <div class=\\\"uk-form-controls\\\">\\r\\n                <input class=\\\"uk-input\\\" name=\\\"licensePlate\\\" id=\\\"licensePlate\\\" type=\\\"text\\\" [(ngModel)]=\\\"car.license_plate\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"uk-margin\\\">\\r\\n            <label class=\\\"uk-form-label\\\" for=\\\"beacont\\\">*{{'beacon'|translate}}{{'name'|translate}}</label>\\r\\n            <div class=\\\"uk-form-controls\\\">\\r\\n               \\r\\n\\t\\t\\t\\t<select class=\\\"uk-select\\\"  name=\\\"beacon\\\" id=\\\"beacon\\\" [(ngModel)]=\\\"car.beacon_name\\\">\\r\\n                        <option *ngFor=\\\"let beacon of beacons\\\" value=\\\"{{beacon.name}}\\\">{{beacon.name}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\r\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"editCar()\\\">{{'edit'|translate}}</button>\\r\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelCar()\\\">{{'cancel'|translate}}</button>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\r\\n\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n</div> -->\"","module.exports = \".register-wrap {\\n  height: 100%;\\n  background: #f2f2f3; }\\n\\n.save-btn {\\n  width: 80%;\\n  height: 100%;\\n  background: #405ab2;\\n  border-radius: 6px; }\\n\\n.register-padding {\\n  padding-left: 10px; }\\n\\n.grayBg {\\n  background: #d9d9da; }\\n\\n.input-padding-left {\\n  padding: 2px 0 2px 6px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CarService } from '../services/car.service';\r\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-car-edit',\r\n  templateUrl: './car-edit.component.html',\r\n  styleUrls: ['./car-edit.component.scss']\r\n})\r\nexport class CarEditComponent implements OnInit {\r\n\r\n  dealerId = '';\r\n  carId = '';\r\n  loading = false;\r\n\r\n  confirmModal = {\r\n    elementId:\"car-edit-confirm-modal\",\r\n    detail:this.translate.instant(\"Do you confirm to update information?\"),\r\n    state:\"\",\r\n  }\r\n  def_beacon_name='*'+this.translate.instant(\"Select Beacon\");\r\n  car = {\r\n    license_plate: '',\r\n    brand: '',\r\n    model: '',\r\n    color: '',\r\n    beacon_name:('*'+this.translate.instant(\"Select Beacon\")),\r\n    dealer_id:'',\r\n    beacon: [],\r\n    timeline: [],\r\n  }\r\n  beacons = [];\r\n  role = {\r\n    admin: false,\r\n    supervisor: false,\r\n    technician: false,\r\n    analyst: false,\r\n  }\r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private carService: CarService, private translate: TranslateService) { \r\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\r\n    this.car.dealer_id = activeRoute.snapshot.params['dealerId'];\r\n    this.carId = activeRoute.snapshot.params['carId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    let userType = localStorage.getItem('userType');\r\n    this.role[userType] = true;\r\n    this.loadCar();\r\n  }\r\n\r\n  loadCar(){\r\n    this.loading=true;\r\n    this.carService.beaconlist(this.dealerId,0,1000)\r\n    .then((res:any)=>{\r\n      let de_car={\r\n        　　name:this.car.beacon_name\r\n        };\r\n      \r\n      this.beacons = res.data.beacon;\r\n      this.beacons.unshift(de_car);\r\n      console.log('aaa');\r\n        console.log(this.beacons);\r\n    })\r\n    .catch((err:any)=>{\r\n      UIkit.notification({\r\n        message: this.translate.instant('Cannot load Beacon'),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n    });\r\n    this.carService.get(this.carId).then((res:any)=>{\r\n      this.car = res.data.car;\r\n      this.car.beacon_name = res.data.car.beacon.name;\r\n      this.car.beacon = [];\r\n      this.car.timeline = [];\r\n      this.loading=false;\r\n    }).catch((err:any)=>{\r\n      this.loading=false;\r\n      UIkit.notification({\r\n        message: this.translate.instant('Cannot load Car'),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      })\r\n    })\r\n  }\r\n\r\n  editCar(){\r\n\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(this.car.license_plate == \"\"){\r\n      UIkit.modal(_elementId).hide();\r\n      this.loading = false;\r\n      UIkit.notification({\r\n        message: this.translate.instant(\"license plate cannot empty\"),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      return;\r\n    }\r\n    if(this.car.brand == \"\"){\r\n      UIkit.modal(_elementId).hide();\r\n      this.loading = false;\r\n      UIkit.notification({\r\n        message: this.translate.instant(\"brand cannot empty\"),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      return;\r\n    }\r\n    if(this.car.model == \"\"){\r\n      UIkit.modal(_elementId).hide();\r\n      this.loading = false;\r\n      UIkit.notification({\r\n        message: this.translate.instant(\"Model cannot empty\"),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      return;\r\n    }\r\n    if(this.car.color == \"\"){\r\n      UIkit.modal(_elementId).hide();\r\n      this.loading = false;\r\n      UIkit.notification({\r\n        message: this.translate.instant(\"Color cannot empty\"),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      return;\r\n    }\r\n    if(this.car.beacon_name == \"\"){\r\n      UIkit.modal(_elementId).hide();\r\n      this.loading = false;\r\n      UIkit.notification({\r\n        message: this.translate.instant(\"Beacon Name cannot empty\"),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      return;\r\n    }\r\n    this.confirmModal.detail = this.translate.instant(\"Do you confirm to update car information?\");\r\n    UIkit.modal(_elementId).show();\r\n  }\r\n\r\n  cancelCar(){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    UIkit.modal(_elementId).$destroy(true);\r\n    this.router.navigate(['car', 'list', this.dealerId]);\r\n  }\r\n\r\n  onClickConfirmModal(event){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(event){\r\n      this.loading = true;\r\n\r\n      this.carService.edit(this.car).then((res:any)=>{\r\n        UIkit.modal(_elementId).hide();\r\n        this.loading = false;\r\n        UIkit.util.on(_elementId, 'hidden', function () {\r\n          UIkit.modal(_elementId).$destroy(true);\r\n        });\r\n        UIkit.modal(_elementId).hide();\r\n        this.router.navigate(['car', 'list', this.dealerId]);\r\n      }).catch((err:any)=>{\r\n        UIkit.modal(_elementId).hide();\r\n        this.loading = false;\r\n        UIkit.notification({\r\n          message: err,\r\n          status: 'warning',\r\n          timeout: 1000\r\n        });\r\n      })\r\n     \r\n    }else{\r\n      UIkit.modal(_elementId).hide();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"uk-container container-bg\\\" style=\\\"padding-top:1.5em;\\\"   >\\r\\n  <nav\\r\\n    class=\\\"uk-navbar-container uk-margin\\\"\\r\\n    uk-navbar\\r\\n    style=\\\" background:none;\\\"\\r\\n  >\\r\\n    <div class=\\\"uk-navbar-left\\\">\\r\\n      <a class=\\\"uk-navbar-item uk-logo\\\"\\r\\n        >{{ \\\"car\\\" | translate }} {{ \\\"management\\\" | translate }}</a\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"uk-navbar-right\\\">\\r\\n      <button\\r\\n        class=\\\"uk-button uk-button-small uk-button-primary uk-border-rounded bluebg\\\"\\r\\n        (click)=\\\"registerCar()\\\"\\r\\n      >\\r\\n        {{ \\\"register\\\" | translate }} {{ \\\"car\\\" | translate }}\\r\\n      </button>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <div class=\\\"uk-contain\\\"  >\\r\\n\\r\\n\\r\\n  <!-- <table class=\\\"uk-table uk-table-divider table-style thead-style uk-padding-remove-bottom uk-margin-remove-bottom\\\">\\r\\n    <thead class=\\\"thead-style\\\">\\r\\n      <tr>\\r\\n        <th class=\\\"uk-text-emphasis uk-width-1-2\\\">License plate</th>\\r\\n        <th class=\\\"uk-text-emphasis uk-width-1-2\\\">Beacon Name</th>\\r\\n        <th class=\\\"uk-text-emphasis uk-width-1-2\\\">Beacon Name</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n  </table> -->\\r\\n  <table class=\\\"uk-table uk-table-divider table-style thead-style uk-table-middle uk-margin-remove-top\\\" style=\\\"box-shadow: 0 0 30px 0 rgba(0, 0, 0, 0.15);\\\">\\r\\n    <thead class=\\\"thead-style\\\"  style=\\\"background-color:#f7f7f7; \\\" >\\r\\n      <tr>\\r\\n        <th class=\\\"uk-text-emphasis uk-width-1-3\\\">{{'license plate'|translate}}</th>\\r\\n\\t\\t\\t\\t<th class=\\\"uk-text-emphasis uk-width-1-3\\\">{{'beacon'|translate}} {{'name'|translate}}</th>\\r\\n\\t\\t\\t\\t<th class=\\\"uk-text-emphasis uk-width-1-3\\\"></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody class=\\\"addLine\\\">\\r\\n      <tr *ngFor=\\\"let car of cars\\\" style=\\\"border-color: #ffffff;\\\" >\\r\\n        <td>{{car.license_plate}}</td>\\r\\n        <td>{{car.beacon.name}}</td>\\r\\n        <td>\\r\\n          <button class=\\\"uk-button uk-button-default uk-button-small uk-border-rounded\\\" style=\\\"background-color:#f7f7f7;border:1px solid #e0dede;\\\" type=\\\"button\\\"   (click)=\\\"editCar(car.id)\\\">\\r\\n              {{'edit'|translate}}\\r\\n          </button>\\r\\n          <button class=\\\"uk-button uk-button-default uk-button-small   uk-border-rounded\\\" style=\\\" background-color:#f7f7f7;border:1px solid #e0dede; margin-top: 3px;\\\" type=\\\"button\\\" (click)=\\\"deregisterCar(car.id, car.license_plate, car.beacon.name)\\\" >\\r\\n              {{'deregister'|translate}}\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr> \\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n  <div class=\\\" uk-margin\\\">\\r\\n    <ul class=\\\"uk-pagination uk-flex-center\\\" uk-margin>\\r\\n      <li *ngIf=\\\"pageController.pageIndex != 1\\\">\\r\\n        <a (click)=\\\"changePageonClick(false, -1)\\\">\\r\\n          <span uk-pagination-previous></span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"pageController.pageIndex > 4\\\" class=\\\"uk-disabled\\\">\\r\\n        <span>...</span>\\r\\n      </li>\\r\\n      <li\\r\\n        *ngFor=\\\"let index of pageController.pageArray\\\"\\r\\n        [class.uk-active]=\\\"index == pageController.pageIndex\\\"\\r\\n      >\\r\\n        <a (click)=\\\"changePageonClick(true, index)\\\">{{ index }}</a>\\r\\n      </li>\\r\\n      <!-- <li class=\\\"uk-active\\\"><span>4</span></li> -->\\r\\n      <li\\r\\n        *ngIf=\\\"pageController.pageNumber - pageController.pageIndex > 3\\\"\\r\\n        class=\\\"uk-disabled\\\"\\r\\n      >\\r\\n        <span>...</span>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"pageController.pageIndex != pageController.pageNumber\\\">\\r\\n        <a (click)=\\\"changePageonClick(false, 1)\\\">\\r\\n          <span uk-pagination-next></span>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n<!-- <fieldset class=\\\"uk-fieldset uk-background-muted uk-padding-small uk-margin\\\">\\r\\n\\t\\t<ul uk-accordion>\\r\\n\\t    <li *ngFor=\\\"let car of cars\\\">\\r\\n        <a class=\\\"uk-accordion-title\\\" href=\\\"#\\\">{{car.license_plate}}</a>\\r\\n        <div class=\\\"uk-accordion-content\\\">\\r\\n            <p>{{'beacon'|translate}} {{'name'|translate}}: {{car.beacon.name}}</p>\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"uk-button uk-button-default uk-button-small uk-border-rounded\\\" (click)=\\\"editCar(car.id)\\\">{{'edit'|translate}}</button>\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"uk-button uk-button-danger uk-button-small uk-border-rounded uk-margin-left\\\" (click)=\\\"deregisterCar(car.id, car.license_plate, car.beacon.name)\\\">{{'deregister'|translate}}</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<hr>\\r\\n    </li>\\r\\n\\t</ul>\\r\\n</fieldset> -->\\r\\n\\r\\n<!-- <div class=\\\"uk-card uk-card-default uk-margin\\\" style=\\\"border:1px solid #ddd;\\\"  *ngFor=\\\"let car of cars\\\">\\r\\n    <div class=\\\"uk-card-header uk-background-muted\\\">\\r\\n\\t\\t<div class=\\\"uk-width-expand\\\">\\r\\n\\t\\t\\t<h3 class=\\\"uk-card-title uk-margin-remove-bottom\\\">{{car.license_plate}}</h3>\\r\\n\\t\\t\\t<p>{{'brand'|translate}}: {{car.brand}}</p>\\r\\n\\t\\t\\t<p>{{'model'|translate}}: {{car.model}}</p>\\r\\n\\t\\t\\t<p>{{'color'|translate}}: {{car.color}}</p>\\r\\n\\t\\t\\t<p>{{'beacon'|translate}} {{'name'|translate}}: {{car.beacon.name}}</p>\\r\\n\\t\\t\\t<p *ngIf=\\\"car.timeline && car.timeline[0].station_id != '0'\\\">{{'station'|translate}}: {{car.timeline[0].station.name}}</p>\\r\\n\\t\\t\\t<p *ngIf=\\\"!car.timeline || (car.timeline && car.timeline[0].station_id == '0')\\\">{{'station'|translate}}: -</p>\\r\\n\\t\\t\\t<p>{{'status'|translate}}: -</p>\\r\\n\\t\\t\\t<p class=\\\"uk-text-meta uk-margin-remove-top\\\">\\r\\n\\t\\t\\t  <ng-container *ngFor=\\\"let noti of car.notification\\\">\\r\\n\\t\\t\\t\\t<p *ngIf=\\\"noti.dealer_notification_config_id != 0\\\">\\r\\n\\t\\t\\t\\t  {{noti.dealer_notification.name}}\\r\\n\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t<p *ngIf=\\\"noti.station_notification_config_id != 0\\\"> \\r\\n\\t\\t\\t\\t  {{noti.station_notification.name}}\\r\\n\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t  </ng-container>\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t</div>\\r\\n    </div>\\r\\n    <div class=\\\"uk-card-footer\\\">\\r\\n          <button class=\\\"uk-button uk-button-default uk-button-small uk-border-rounded\\\" (click)=\\\"editCar(car.id)\\\">{{'edit'|translate}}</button>\\r\\n          <button class=\\\"uk-button uk-button-danger uk-button-small uk-border-rounded uk-margin-left\\\" (click)=\\\"deregisterCar(car.id, car.license_plate, car.beacon.name)\\\">{{'deregister'|translate}}</button>\\r\\n\\t\\t</div>\\r\\n  </div>  -->\\r\\n\\r\\n<app-confirm-modal\\r\\n  [elementId]=\\\"confirmModal.elementId\\\"\\r\\n  [detail]=\\\"confirmModal.detail\\\"\\r\\n  (onClick)=\\\"onClickConfirmModal($event)\\\"\\r\\n></app-confirm-modal>\\r\\n\\r\\n \\r\\n<div id=\\\"modal-deregister\\\" uk-modal>\\r\\n  <div class=\\\"uk-modal-dialog uk-modal-body\\\">\\r\\n    <h2 class=\\\"uk-modal-title\\\">\\r\\n          {{'Are you confirm to'|translate}} {{'deregister car'|translate}}: {{modalDeregister.title}} {{'?'}}\\r\\n     </h2>\\r\\n   \\r\\n    <p class=\\\"uk-text-right\\\">\\r\\n      <button class=\\\"uk-button uk-button-primary uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"deregister()\\\">{{'deregister'|translate}}</button>\\r\\n      <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"cancelDeregister()\\\">{{'cancel'|translate}}</button>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n</div>\\r\\n \"","module.exports = \".bluebg {\\n  background: #405AB2; }\\n\\n.container-bg {\\n  height: 100%;\\n  background: #e9e9ea; }\\n\\n.table-style {\\n  border-radius: 6px !important;\\n  background: #f5f5f5 !important;\\n  overflow: hidden !important; }\\n\\n.thead-style {\\n  background: #fff;\\n  border-radius: 6px !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CarService } from '../services/car.service';\r\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-car-list',\r\n  templateUrl: './car-list.component.html',\r\n  styleUrls: ['./car-list.component.scss']\r\n})\r\nexport class CarListComponent implements OnInit {\r\n\r\n  dealerId = '';\r\n  loading = false;\r\n\r\n  confirmModal = {\r\n    elementId:\"car-list-confirm-modal\",\r\n    detail:\"\",\r\n    state:\"\",\r\n  }\r\n\r\n  pageController = {\r\n    itemPerPage: 10,\r\n    itemNumber: 0,\r\n    pageNumber: 0,\r\n    pageIndex: 1,\r\n    pageArray: [],\r\n  };\r\n\r\n  car = {\r\n    license_plate:'',\r\n    brand:'',\r\n    model:'',\r\n    color:'',\r\n    beacon_name:'',\r\n    dealer_id: ','\r\n  };\r\n\r\n  cars = [];\r\n  beacons = [];\r\n\r\n  modalDeregister = {\r\n    id:'',\r\n    title:'',\r\n    beaconName: '',\r\n  \r\n    form:{\r\n      beaconId:'',\r\n    }\r\n  }\r\n\r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private carService: CarService, private translate: TranslateService) { \r\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\r\n    this.car.dealer_id = activeRoute.snapshot.params['dealerId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCar();\r\n  }\r\n\r\n  loadCar(){\r\n    this.loading = true;\r\n    this.carService.beaconlist(this.dealerId,0,1000)\r\n      .then((res:any)=>{\r\n        this.beacons = res.data.beacon;\r\n      })\r\n      .catch((err:any)=>{\r\n        UIkit.notification({\r\n          message: this.translate.instant('Cannot load Beacon'),\r\n          status: 'warning',\r\n          timeout: 1000\r\n        });\r\n      });\r\n\r\n    this.carService.list(this.dealerId, (this.pageController.pageIndex - 1) * this.pageController.itemPerPage, this.pageController.itemPerPage)\r\n      .then((res:any)=>{\r\n        this.pageController.itemNumber = res.data.count;\r\n        this.pageController.pageNumber = Math.ceil(this.pageController.itemNumber / this.pageController.itemPerPage);\r\n        this.pageController.pageArray = [];\r\n\r\n        ///make pagination\r\n        this.pageController.pageArray.push(this.pageController.pageIndex);\r\n        for(let count = 0 ; count < 3 ; count++){\r\n          if(this.pageController.pageIndex - count - 1 > 0 ){\r\n            this.pageController.pageArray.unshift(this.pageController.pageIndex - count - 1);\r\n          }\r\n        }\r\n        for(let count = 0 ; count < 3 ; count++){\r\n          if(this.pageController.pageIndex + count < this.pageController.pageNumber){\r\n            this.pageController.pageArray.push(this.pageController.pageIndex + count + 1);\r\n          }\r\n        }\r\n        this.cars = res.data.car;\r\n        this.loading = false;\r\n\r\n      }).catch((err:any)=>{\r\n        UIkit.notification({\r\n          message: this.translate.instant('Cannot load Car'),\r\n          status: 'warning',\r\n          timeout: 1000\r\n        });\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  changePageonClick(option, index){\r\n    if(option){\r\n      this.pageController.pageIndex = index;\r\n    }else{\r\n      this.pageController.pageIndex += index;\r\n    }\r\n    this.loadCar();\r\n  }\r\n\r\n  registerCar(){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    UIkit.modal('#modal-deregister').$destroy(true);\r\n    UIkit.modal(_elementId).$destroy(true);\r\n    this.router.navigate(['car', 'register', this.dealerId]);\r\n    // let _elementId = \"#\"+this.confirmModal.elementId;\r\n    // if(this.car.license_plate !='' && this.car.brand  !=''&& this.car.model  !=''&& this.car.color  !=''&& this.car.beacon_name  !=''){\r\n    //   this.confirmModal.detail=this.translate.instant(\"Do you confirm to register\")+\" \" + this.car.license_plate + \" \"+this.translate.instant(\"car\")+\"?\";\r\n    //   this.confirmModal.state=\"add\";\r\n    //   UIkit.modal(_elementId).show();\r\n    // } else { \r\n    //   UIkit.notification({\r\n    //   message: this.translate.instant('* Cannot emptry!!!'),\r\n    //   status: 'warning',\r\n    //   timeout: 1000\r\n    // });\r\n    // }\r\n  }\r\n\r\n  editCar(carId){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    UIkit.modal('#modal-deregister').$destroy(true);\r\n    UIkit.modal(_elementId).$destroy(true);\r\n    this.router.navigate(['car', 'edit', this.dealerId, carId]);\r\n  }\r\n\r\n  deregisterCar(id, licensePlate, beaconName){\r\n    this.modalDeregister.id = id;\r\n    this.modalDeregister.title = licensePlate;\r\n    this.modalDeregister.beaconName = beaconName;\r\n    console.log(this.modalDeregister.title);\r\n    UIkit.modal('#modal-deregister').show();\r\n  }\r\n\r\n  deregister(){\r\n    if(this.modalDeregister.form.beaconId ==  this.modalDeregister.beaconName){\r\n      this.loading = true;\r\n      this.carService.deregister(this.modalDeregister.id).then((res:any)=>{\r\n        UIkit.modal('#modal-deregister').hide();\r\n        this.loading = false;\r\n        this.loadCar();\r\n      }).catch((err:any)=>{\r\n        UIkit.modal('#modal-deregister').hide();\r\n        this.loading = false;\r\n        UIkit.notification({\r\n          message: this.translate.instant('Cannot deregister Car!!!'),\r\n          status: 'warning',\r\n          timeout: 1000\r\n        });\r\n      })\r\n    }else{\r\n      this.modalDeregister.form.beaconId = \"\";\r\n      UIkit.modal('#modal-deregister').hide(); \r\n      UIkit.notification({\r\n        message: this.translate.instant('Beacon name not match'),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelDeregister(){\r\n    UIkit.modal('#modal-deregister').hide();\r\n\r\n  }\r\n\r\n  onHeaderClick(event){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(event == 'back'){\r\n      UIkit.modal('#modal-deregister').$destroy(true);\r\n      UIkit.modal(_elementId).$destroy(true);\r\n      this.router.navigate(['menu']);\r\n    }\r\n  }\r\n\r\n  onClickConfirmModal(event){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(event){\r\n     this.loading = true;\r\n      if(this.confirmModal.state == \"add\"){\r\n        this.carService.create(this.car).then((res:any)=>{\r\n          this.car.license_plate ='';\r\n          this.car.brand ='';\r\n          this.car.model ='';\r\n          this.car.color ='';\r\n          this.car.beacon_name ='';\r\n          UIkit.modal(_elementId).hide();\r\n          this.loading = false;\r\n          this.loadCar();\r\n        }).catch((err:any)=>{\r\n          UIkit.modal(_elementId).hide();\r\n          this.loading = false;\r\n          UIkit.notification({\r\n            message: err,\r\n            status: 'warning',\r\n            timeout: 1000\r\n          });\r\n        })\r\n      }\r\n    }else{\r\n      UIkit.modal(_elementId).hide();\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- 切片car-register汽车页面代码 -->\\r\\n\\r\\n<!-- <app-header>\\r\\n</app-header> -->\\r\\n<div class=\\\"uk-container register-wrap\\\"  style=\\\"padding-top:1.5em;\\\"  >\\r\\n  <div style=\\\"width:100%;\\\" class=\\\"uk-padding-small\\\"></div>\\r\\n  <div class=\\\"uk-margin-top\\\" uk-grid>\\r\\n    <div class=\\\"uk-width-1-3 uk-text-center uk-text-emphasis\\\"  (click)=\\\"cancelCar()\\\">{{'cancel'|translate}}</div>\\r\\n    \\r\\n    <div class=\\\"uk-width-1-3\\\"></div>\\r\\n    <div class=\\\"uk-width-1-3 uk-text-center\\\">\\r\\n      <button class=\\\"uk-button-primary save-btn\\\" (click)=\\\"registerCar()\\\">{{'register'|translate}}</button>\\r\\n    </div>\\r\\n \\r\\n  </div>\\r\\n  <div\\r\\n    class=\\\"uk-width-1-1 register-padding uk-text-emphasis uk-margin-large-top uk-text-large\\\"\\r\\n  >\\r\\n   {{'register'|translate}} {{'car'|translate}}\\r\\n  </div>\\r\\n  <div class=\\\"uk-margin-top\\\" uk-grid>\\r\\n    <div class=\\\"uk-width-1-2 uk-padding-right\\\">\\r\\n      <input class=\\\"uk-search-input grayBg input-padding-left uk-text-emphasis\\\" type=\\\"text\\\" name=\\\"licensePlate\\\" id=\\\"licensePlate\\\" type=\\\"text\\\" [(ngModel)]=\\\"car.license_plate\\\" placeholder=\\\"*{{'license plate'|translate}}\\\" />\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"uk-form-controls uk-width-1-2\\\">\\r\\n      \\r\\n      <select  class=\\\"uk-select uk-form-small grayBg uk-text-emphasis\\\" id=\\\"beacon\\\" name=\\\"beacon\\\"  [(ngModel)]=\\\"car.beacon_name\\\"  >\\r\\n          <option class=\\\"uk-form-small grayBg uk-text-emphasis\\\" *ngFor=\\\"let beacon of beacons\\\" value=\\\"{{beacon.name}}\\\">{{beacon.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n     \\r\\n  </div>\\r\\n \\r\\n</div>\\r\\n\\r\\n<app-confirm-modal\\r\\n  [elementId]=\\\"confirmModal.elementId\\\"\\r\\n  [detail]=\\\"confirmModal.detail\\\"\\r\\n  (onClick)=\\\"onClickConfirmModal($event)\\\"\\r\\n></app-confirm-modal>\\r\\n\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n</div>\\r\\n\"","module.exports = \".register-wrap {\\n  height: 100%;\\n  background: #f2f2f3; }\\n\\n.save-btn {\\n  width: 80%;\\n  height: 100%;\\n  background: #405ab2;\\n  border-radius: 6px; }\\n\\n.register-padding {\\n  padding-left: 10px; }\\n\\n.grayBg {\\n  background: #d9d9da; }\\n\\n.input-padding-left {\\n  padding: 2px 0 2px 6px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CarService } from '../services/car.service';\r\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-car-register',\r\n  templateUrl: './car-register.component.html',\r\n  styleUrls: ['./car-register.component.scss']\r\n})\r\nexport class CarRegisterComponent implements OnInit {\r\n  \r\n  confirmModal = {\r\n    elementId:\"car-edit-confirm-modal\",\r\n    detail:this.translate.instant(\"Do you confirm to create information?\"),\r\n    state:\"\",\r\n  }\r\n  dealerId = '';\r\n  loading = false;\r\n   def_beacon_name='*'+this.translate.instant(\"Select Beacon\");\r\n  beacons = [];\r\n  car = {\r\n    license_plate:'',\r\n    brand:'',\r\n    model:'',\r\n    color:'',\r\n    beacon_name:('*'+this.translate.instant(\"Select Beacon\")),\r\n    dealer_id: ','\r\n  };\r\n\r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private carService: CarService, private translate: TranslateService) { \r\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\r\n    this.car.dealer_id = activeRoute.snapshot.params['dealerId'];\r\n   \r\n  }\r\n  ngOnInit() {\r\n    this.loadCar()\r\n  }\r\n  loadCar(){\r\n    console.log(this.car);\r\n    this.loading = true;\r\n    this.carService.beaconlist(this.dealerId,0,1000)\r\n      .then((res:any)=>{\r\n        console.log(res.data.beacon);\r\n        let de_car={\r\n          　　name:this.car.beacon_name\r\n          };\r\n        \r\n        this.beacons = res.data.beacon;\r\n        this.beacons.unshift(de_car);\r\n     //   new Object(){name:this.translate.instant(\"Select Beacon\")\r\n      //  this.beacons.shift(},0)//serviceagent1\r\n        this.loading = false;\r\n      })\r\n      .catch((err:any)=>{\r\n        UIkit.notification({\r\n          message: this.translate.instant('Cannot load Beacon'),\r\n          status: 'warning',\r\n          timeout: 1000\r\n        });\r\n        this.loading = false;\r\n      });\r\n    // this.loading=true;\r\n    // this.carService.beaconlist(this.dealerId,0,1000)\r\n    // .then((res:any)=>{\r\n    //   this.beacons = res.data.beacon;\r\n    // })\r\n    // .catch((err:any)=>{\r\n    //   UIkit.notification({\r\n    //     message: this.translate.instant('Cannot load Beacon'),\r\n    //     status: 'warning',\r\n    //     timeout: 1000\r\n    //   });\r\n    // });\r\n    // this.carService.get(this.carId).then((res:any)=>{\r\n    //   this.car = res.data.car;\r\n    //   this.car.beacon_name = res.data.car.beacon.name;\r\n    //   this.car.beacon = [];\r\n    //   this.car.timeline = [];\r\n    //   this.loading=false;\r\n    // }).catch((err:any)=>{\r\n    //   this.loading=false;\r\n    //   UIkit.notification({\r\n    //     message: this.translate.instant('Cannot load Car'),\r\n    //     status: 'warning',\r\n    //     timeout: 1000\r\n    //   })\r\n    // })\r\n  }\r\n\r\n  registerCar(){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(this.car.license_plate == \"\"){\r\n      UIkit.modal(_elementId).hide();\r\n      this.loading = false;\r\n      UIkit.notification({\r\n        message: this.translate.instant(\"license plate cannot empty\"),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      return;\r\n    }\r\n     \r\n    if(this.car.beacon_name == \"\" || this.car.beacon_name==this.def_beacon_name){\r\n      UIkit.modal(_elementId).hide();\r\n      this.loading = false;\r\n      UIkit.notification({\r\n        message: this.translate.instant(\"Beacon Name cannot empty\"),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      return;\r\n    }\r\n    this.confirmModal.detail = this.translate.instant(\"Do you confirm to create car information?\");\r\n    UIkit.modal(_elementId).show();\r\n  }\r\n\r\n  cancelCar(){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    UIkit.modal(_elementId).$destroy(true);\r\n    this.router.navigate(['car', 'list', this.dealerId]);\r\n  }\r\n\r\n  modalConfirm(){\r\n    UIkit.util.on('#modal-confirm', 'hidden', function () {\r\n      UIkit.modal('#modal-confirm').$destroy(true);\r\n    });\r\n    UIkit.modal('#modal-confirm').hide();\r\n    this.router.navigate(['car', 'list', this.dealerId]);\r\n  }\r\n\r\n  modalCancel(){\r\n    UIkit.modal('#modal-confirm').hide();\r\n  }\r\n  onClickConfirmModal(event){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(event){\r\n      this.loading = true;\r\n\r\n      this.carService.create(this.car).then((res:any)=>{\r\n        console.log('=============');\r\n        console.log(res);\r\n        UIkit.modal(_elementId).hide();\r\n        this.loading = false;\r\n        UIkit.util.on(_elementId, 'hidden', function () {\r\n          UIkit.modal(_elementId).$destroy(true);\r\n        });\r\n        UIkit.modal(_elementId).hide();\r\n        this.router.navigate(['car', 'list', this.dealerId]);\r\n      }).catch((err:any)=>{\r\n        UIkit.modal(_elementId).hide();\r\n        this.loading = false;\r\n        UIkit.notification({\r\n          message: err,\r\n          status: 'warning',\r\n          timeout: 1000\r\n        });\r\n      })\r\n     \r\n    }else{\r\n      UIkit.modal(_elementId).hide();\r\n    }\r\n  }\r\n\r\n  // onClickConfirmModal(event){\r\n  //   let _elementId = \"#\"+this.confirmModal.elementId;\r\n  //   if(event){\r\n  //    this.loading = true;\r\n  //     if(this.confirmModal.state == \"add\"){\r\n  //       this.carService.create(this.car).then((res:any)=>{\r\n  //         this.car.license_plate ='';\r\n  //         this.car.brand ='';\r\n  //         this.car.model ='';\r\n  //         this.car.color ='';\r\n  //         this.car.beacon_name ='';\r\n  //         UIkit.modal(_elementId).hide();\r\n  //         this.loading = false;\r\n  //         this.loadCar();\r\n  //       }).catch((err:any)=>{\r\n  //         UIkit.modal(_elementId).hide();\r\n  //         this.loading = false;\r\n  //         UIkit.notification({\r\n  //           message: err,\r\n  //           status: 'warning',\r\n  //           timeout: 1000\r\n  //         });\r\n  //       })\r\n  //     }\r\n  //   }else{\r\n  //     UIkit.modal(_elementId).hide();\r\n  //   }\r\n  // }\r\n\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarService {\n\n  constructor(private http: HttpClient){\n  }\n\n  get(id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/car/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  list(dealer_id,offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/car/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n \n      let params  = {\n        dealer_id: dealer_id,\n        limit: limit,\n        offset: offset,\n        direct_sort:\"acs\",\n        title_sort:\"license_plate\"\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  create(car){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/car/create\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,car,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  edit(car){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/car/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,car,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  delete(node_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/car/delete\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: node_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  //Extend \n  deregister(car_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/car/deregister\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: car_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  beaconlist(dealer_id,offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/beacon/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        limit: limit,\n        offset: offset,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n}\n","module.exports = \"<!-- 切片car-config-notification页面代码 内容就是下面的，数据绑定好了-->\\r\\n<div class=\\\"allwrap\\\" style=\\\"padding-top:1.5em;\\\"  >\\r\\n  <!-- <div class=\\\"uk-padding-large\\\"></div> -->\\r\\n  <div class=\\\"uk-container uk-padding-small fixed-nav\\\" style=\\\" background:none;\\\">\\r\\n    <div class=\\\"fixed-nav\\\" uk-grid>\\r\\n      <div\\r\\n        class=\\\"uk-width-1-3 uk-text-center uk-text-emphasis\\\"\\r\\n        (click)=\\\"cancel()\\\"\\r\\n      >\\r\\n        {{ \\\"Cancel\\\" | translate }}\\r\\n      </div>\\r\\n      <!-- <div class=\\\"uk-width-1-4\\\"></div> -->\\r\\n      <div class=\\\"uk-width-1-3\\\"></div>\\r\\n      <div class=\\\"uk-width-1-3 uk-text-center\\\">\\r\\n        <button class=\\\"uk-button-primary save-btn\\\" (click)=\\\"save()\\\">\\r\\n          {{ \\\"Save\\\" | translate }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <button class=\\\"uk-button uk-button-primary  uk-margin-small-right\\\" (click)=\\\"cancel()\\\">{{'Cancel'|translate}}</button>\\r\\n    <button class=\\\"uk-button uk-button-primary\\\" (click)=\\\"save()\\\">{{'Save'|translate}}</button> -->\\r\\n  </div>\\r\\n  <div class=\\\"maincon\\\">\\r\\n    <div class=\\\"uk-container uk-padding\\\" style=\\\" background:none;font-size: 16px;\\\">\\r\\n        {{ \\\"Configure\\\" | translate }} {{ \\\"notification\\\" | translate }}\\r\\n        {{ \\\"condition\\\" | translate }}\\r\\n      <!-- <nav\\r\\n        class=\\\"uk-navbar-container uk-margin\\\"\\r\\n        uk-navbar\\r\\n        style=\\\" background:none;\\\"\\r\\n      >\\r\\n        <div class=\\\"uk-navbar-left .uk-padding\\\"> -->\\r\\n            <!-- {{ \\\"Configure\\\" | translate }} {{ \\\"notification\\\" | translate }}\\r\\n            {{ \\\"condition\\\" | translate }} -->\\r\\n          <!-- <a class=\\\"uk-navbar-item uk-logo config-font uk-padding-remove-left uk-padding-remove-right\\\"\\r\\n            >{{ \\\"Configure\\\" | translate }} {{ \\\"notification\\\" | translate }}\\r\\n            {{ \\\"condition\\\" | translate }}</a\\r\\n          > -->\\r\\n        <!-- </div>\\r\\n      </nav> -->\\r\\n    </div>\\r\\n    <div class=\\\"uk-container  uk-padding uk-padding-remove-top\\\">\\r\\n      <form\\r\\n        class=\\\"uk-form-stacked uk-margin-top uk-padding-small uk-margin-remove-top shadow\\\"\\r\\n        style=\\\" background-color: #fff; box-shadow: 5px 5px 5px 5px rgba(0,0,0,0.08);\\\"\\r\\n      >\\r\\n        <div class=\\\"uk-margin\\\" *ngFor=\\\"let dealer of form.dealer_noti_config\\\">\\r\\n          <label class=\\\"uk-form-label\\\" for=\\\"{{ dealer.name }}\\\"\\r\\n            >{{ dealer.name }} ({{ dealer.unit }})</label\\r\\n          >\\r\\n          <div class=\\\"uk-form-controls\\\">\\r\\n            <input\\r\\n              class=\\\"uk-input uk-form-small\\\"\\r\\n              id=\\\"{{ dealer.name }}\\\"\\r\\n              name=\\\"{{ dealer.name }}\\\"\\r\\n              type=\\\"number\\\"\\r\\n              placeholder=\\\"\\\"\\r\\n              [(ngModel)]=\\\"dealer.value\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"uk-margin\\\" *ngFor=\\\"let station of form.station_noti_config\\\">\\r\\n          <label class=\\\"uk-form-label\\\" for=\\\"{{ station.name }}\\\"\\r\\n            >{{ station.name }} {{ station.station.name }} ({{\\r\\n              station.unit\\r\\n            }})</label\\r\\n          >\\r\\n          <div class=\\\"uk-form-controls\\\">\\r\\n            <input\\r\\n              class=\\\"uk-input uk-form-small\\\"\\r\\n              id=\\\"{{ station.name }}\\\"\\r\\n              name=\\\"{{ station.name }}\\\"\\r\\n              type=\\\"number\\\"\\r\\n              placeholder=\\\"\\\"\\r\\n              [(ngModel)]=\\\"station.value\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-confirm-modal\\r\\n  [elementId]=\\\"confirmModal.elementId\\\"\\r\\n  [detail]=\\\"confirmModal.detail\\\"\\r\\n  (onClick)=\\\"onClickConfirmModal($event)\\\"\\r\\n></app-confirm-modal>\\r\\n\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n</div>\\r\\n\"","module.exports = \"body {\\n  background-color: #f2f2f3; }\\n\\n.save-btn {\\n  width: 80%;\\n  height: 100%;\\n  background: #405ab2;\\n  border-radius: 6px; }\\n\\n.shadow {\\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.1) !important; }\\n\\n.allwrap {\\n  width: 100%;\\n  height: 100%; }\\n\\n.allwrap .maincon {\\n  height: calc(100% - 54px);\\n  overflow-y: scroll; }\\n\\n.config-font {\\n  font-size: 20px; }\\n\"","import { Component, OnInit, ViewEncapsulation  } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DashboardService } from '../services/dashboard.service';\r\n \r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'app-car-config-notification',\r\n  templateUrl: './car-config-notification.component.html',\r\n  styleUrls: ['./car-config-notification.component.scss']\r\n})\r\nexport class CarConfigNotificationComponent implements OnInit {\r\n\r\n  dealerId = '';\r\n  loading = false;\r\n\r\n  confirmModal = {\r\n    elementId:\"dashboard-config-edit-confirm-modal\",\r\n    detail:\"Do you confirm to update notification condition?\",\r\n    state:\"\",\r\n  }\r\n\r\n  form = {\r\n    dealer_noti_config:[],\r\n    station_noti_config:[],\r\n  }\r\n  role = {\r\n    admin: false,\r\n    supervisor: false,\r\n    technician: false,\r\n    analyst: false,\r\n  }\r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private dashboardService: DashboardService) { \r\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    let userType = localStorage.getItem('userType');\r\n    this.role[userType] = true;\r\n    this.loadNotification();\r\n  }\r\n\r\n  loadNotification(){\r\n    this.loading = true;\r\n    this.dashboardService.notificationList(this.dealerId).then((res:any)=>{\r\n      this.form.dealer_noti_config = res.data.dealer_noti_config;\r\n      this.form.station_noti_config = res.data.station_noti_config;\r\n      this.loading = false;\r\n    }).catch((err:any)=>{\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n\r\n  save(){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    UIkit.modal(_elementId).show();\r\n  }\r\n\r\n  cancel(){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    UIkit.modal(_elementId).$destroy(true);\r\n    this.router.navigate(['dashboard', 'car', this.dealerId]);\r\n  }\r\n\r\n  onClickConfirmModal(event){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(event){\r\n      this.loading = true;\r\n      this.dashboardService.notificationEdit(this.form).then((res:any)=>{\r\n        UIkit.util.on(_elementId, 'hidden', function () {\r\n          UIkit.modal(_elementId).$destroy(true);\r\n        });\r\n        UIkit.modal(_elementId).hide();\r\n        this.loading = false;\r\n        this.router.navigate(['dashboard', 'car', this.dealerId]);\r\n      }).catch((err:any)=>{\r\n        this.loading = false;\r\n        UIkit.modal(_elementId).hide();\r\n        UIkit.notification({\r\n          message: err,\r\n          status: 'warning',\r\n          timeout: 1000\r\n        })\r\n      })\r\n\r\n\r\n    }else{\r\n      UIkit.modal(_elementId).hide();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"uk-container\\\"  style=\\\" padding-top:1.5em;\\\" >\\r\\n  <nav\\r\\n    class=\\\"uk-navbar-container  uk-margin uk-margin-remove-bottom\\\"\\r\\n    uk-navbar\\r\\n    style=\\\"background:none; \\\"\\r\\n  >\\r\\n    <div class=\\\"uk-navbar-left\\\">\\r\\n      <a class=\\\"uk-navbar-item uk-logo uk-text-emphasis\\\">{{\\\"dashboard\\\" | translate}}</a>\\r\\n    </div>\\r\\n    <div class=\\\"uk-navbar-right uk-padding uk-padding-remove-left\\\">\\r\\n      <button\\r\\n        class=\\\"uk-button notification-style uk-button-small uk-button-primary uk-border-rounded uk-text-emphasis\\\"\\r\\n        (click)=\\\"configNotification()\\\"\\r\\n      >\\r\\n        {{ \\\"notification\\\" | translate }}\\r\\n      </button>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <div class=\\\"uk-medium-large\\\">&nbsp;</div>\\r\\n  <table\\r\\n    class=\\\"uk-table  uk-table-divider uk-margin-remove-top uk-table-middle \\\"\\r\\n    style=\\\"background-color: #f5f5f5;box-shadow: 0 0 30px 0 rgba(0, 0, 0, 0.15); \\\"\\r\\n  >\\r\\n    <thead class=\\\"thead-style\\\" style=\\\"background-color:#f7f7f7; \\\">\\r\\n      <tr>\\r\\n        <th>{{ \\\"license  plate\\\" | translate }}</th>\\r\\n        <th>{{ \\\"current\\\" | translate }} {{ \\\"station\\\" | translate }}</th>\\r\\n        <th>{{ \\\"time in station\\\" | translate }}</th>\\r\\n        <th>{{ \\\"total time from arrival\\\" | translate }}</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody\\r\\n      *ngFor=\\\"let car of cars; let i = index\\\"\\r\\n      style=\\\"background-color:#f5f5f5; \\\"\\r\\n    >\\r\\n      <tr style=\\\"border-top: none;border-bottom: 1px solid #ffffff;\\\">\\r\\n        <td>{{ car.license_plate }}</td>\\r\\n        <td>{{ \\\"current\\\" | translate }} {{ \\\"station\\\" | translate }}</td>\\r\\n        <td>{{ car.stationTime }} {{ \\\"minutes\\\" | translate }}</td>\\r\\n        <td>{{ car.totalTime }} {{ \\\"minutes\\\" | translate }}</td>\\r\\n      </tr>\\r\\n      <tr style=\\\" border-top: none;border-bottom: 1px solid #ffffff;\\\">\\r\\n        <td colspan=\\\"4\\\">\\r\\n          <button\\r\\n            class=\\\"uk-button uk-button-default\\\"\\r\\n            type=\\\"button\\\"\\r\\n            (click)=\\\"timeline(car.id)\\\"\\r\\n          >\\r\\n            {{ \\\"view\\\" | translate }} {{ \\\"timeline\\\" | translate }}\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div class=\\\"uk-margin-large\\\">&nbsp;</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n<!-- <app-header  [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\r\\n<div    class=\\\"uk-container uk-margin-xlarge-bottom\\\">\\r\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\r\\n    <div class=\\\"uk-navbar-left\\\">\\r\\n      <a class=\\\"uk-navbar-item uk-logo\\\">{{'dashboard'|translate}}</a>\\r\\n    </div>\\r\\n    <div class=\\\"uk-navbar-right\\\">\\r\\n      <div class=\\\"uk-navbar-item\\\">\\r\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"configNotification()\\\">{{'config'|translate}} {{'notification'|translate}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n\\r\\n  <div class=\\\"uk-card uk-card-default uk-margin\\\" style=\\\"border:1px solid #ddd;\\\" *ngFor=\\\"let car of cars; let i = index\\\">\\r\\n    <div class=\\\"uk-card-header uk-background-muted\\\">\\r\\n\\t\\t<div class=\\\"uk-width-expand\\\">\\r\\n\\t\\t\\t<h3 class=\\\"uk-card-title uk-margin-remove-bottom\\\">{{car.license_plate}}</h3>\\r\\n\\t\\t\\t  <table class=\\\"uk-table uk-table-striped uk-margin-remove-bottom\\\">\\r\\n\\t\\t\\t\\t  <tr>\\r\\n\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t  </tr>\\r\\n\\t\\t\\t\\t  <tr>\\r\\n\\t\\t\\t\\t\\t<td>{{'current'|translate}} {{'station'|translate}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{car.currentStation}}</td>\\r\\n\\t\\t\\t\\t  </tr>\\r\\n\\t\\t\\t\\t  <tr>\\r\\n\\t\\t\\t\\t\\t<td>{{'time in station'|translate}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{car.stationTime}} {{'minutes'|translate}}</td>\\r\\n\\t\\t\\t\\t  </tr>\\r\\n\\t\\t\\t\\t  <tr>\\r\\n\\t\\t\\t\\t\\t<td>{{'total time from arrival'|translate}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{car.totalTime}} {{'minutes'|translate}}</td>\\r\\n\\t\\t\\t\\t  </tr>\\r\\n\\t\\t\\t  </table>\\r\\n\\t\\t</div>\\r\\n    </div>\\r\\n    <div class=\\\"uk-card-footer\\\">\\r\\n          <span *ngIf=\\\"car.currentStatus != ''\\\">\\r\\n            <button class=\\\"uk-button uk-button-danger uk-button-small\\\" style=\\\"width: 100px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t</button> -->\\r\\n<!-- <span uk-icon=\\\"warning\\\" style=\\\"position: relative;color:red; bottom: 2px;\\\"></span>\\r\\n          </span>\\r\\n          <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded uk-margin-left\\\" (click)=\\\"timeline(car.id)\\\">{{'view'|translate}} {{'timeline'|translate}}</button>\\r\\n\\t</div>\\r\\n  </div> \\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n</div>\\r\\n\"","module.exports = \".container-fixed {\\n  width: 100%;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  background: #ffffff; }\\n\\n.notification-style {\\n  background: #d9d9da; }\\n\\n.thead-style {\\n  height: 74px !important; }\\n\\n.thead-style tr th {\\n  padding-left: 0 !important;\\n  padding-right: 0 !important;\\n  text-align: center; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DashboardService } from '../services/dashboard.service';import { interval } from 'rxjs';\r\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-car-dashboard',\r\n  templateUrl: './car-dashboard.component.html',\r\n  styleUrls: ['./car-dashboard.component.scss']\r\n})\r\nexport class CarDashboardComponent implements OnInit, OnDestroy {\r\n\r\n  dealerId = '';\r\n  loading = false;\r\n  car = {\r\n    currentStatus: false,\r\n    license_plate: '',\r\n    brand: '',\r\n    model:'',\r\n    color: '',\r\n    currentStation: '',\r\n    stationTime: 0,\r\n    totalTime: 0,\r\n  };\r\n  cars = [];\r\n  role = {\r\n    admin: false,\r\n    supervisor: false,\r\n    technician: false,\r\n    analyst: false,\r\n  }\r\n  // secondsCounter = interval(5000);\r\n\r\n  interval = setInterval(() => {\r\n    this.refreshCar()\r\n  }, 5000);\r\n  \r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private dashboardService: DashboardService, private translate: TranslateService) { \r\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    let userType = localStorage.getItem('userType');\r\n    this.role[userType] = true;\r\n    this.loadCar();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  loadCar(){\r\n    this.loading = true;\r\n    this.dashboardService.list(this.dealerId).then((res:any)=>{\r\n      let carTmp =[];\r\n      res.data.car.forEach(item => {\r\n        if(item.dashboard.length > 0) {\r\n          /// find current station\r\n          if(item.dashboard[0].station_id != 0){\r\n            item.currentStation = item.dashboard[0].station.name;\r\n          }else{\r\n            item.currentStation = \"-\";\r\n          }\r\n          \r\n          /// find current station time\r\n          item.stationTime = 0;\r\n          item.dashboard.forEach(element => {\r\n            if(item.dashboard[0].station_id == element.station_id){\r\n              item.stationTime += element.def_time;\r\n            }\r\n          });\r\n\r\n         /// find current total time\r\n          let maxStationTime = new Date(res.data.time).getTime(); \r\n          let registerTime = new Date(item.dashboard[item.dashboard.length-1].arrival_at).getTime() ; \r\n          item.totalTime = Math.floor((maxStationTime- registerTime)/60000);\r\n\r\n          /// find status notificaiton\r\n          item.currentStatus = false;\r\n          if(item.notification.length > 0){\r\n            item.currentStatus = true;\r\n          }\r\n\r\n        }else{\r\n          item.currentStation = \"-\";\r\n          item.stationTime= 0;\r\n          item.totalTime = 0;\r\n          item.currentStatus = false;\r\n        }\r\n        carTmp.push(item);\r\n      });\r\n      this.cars = carTmp;\r\n      this.loading = false;\r\n    }).catch((err:any)=>{\r\n      console.log(err);\r\n      UIkit.notification({\r\n        message: this.translate.instant('Cannot load Car'),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  refreshCar(){\r\n    this.dashboardService.list(this.dealerId).then((res:any)=>{\r\n      let carTmp =[];\r\n      res.data.car.forEach(item => {\r\n        if(item.dashboard.length > 0) {\r\n          /// find current station\r\n          if(item.dashboard[0].station_id != 0){\r\n            item.currentStation = item.dashboard[0].station.name;\r\n          }else{\r\n            item.currentStation = \"-\";\r\n          }\r\n          \r\n          /// find current station time\r\n          item.stationTime = 0;\r\n          item.dashboard.forEach(element => {\r\n            if(item.dashboard[0].station_id == element.station_id){\r\n              item.stationTime += element.def_time;\r\n            }\r\n          });\r\n\r\n         /// find current total time\r\n          let maxStationTime = new Date(res.data.time).getTime(); \r\n          let registerTime = new Date(item.dashboard[item.dashboard.length-1].arrival_at).getTime() ; \r\n          item.totalTime = Math.floor((maxStationTime- registerTime)/60000);\r\n\r\n          /// find status notificaiton\r\n          item.currentStatus = false;\r\n          if(item.notification.length > 0){\r\n            item.currentStatus = true;\r\n          }\r\n\r\n        }else{\r\n          item.currentStation = \"-\";\r\n          item.stationTime= 0;\r\n          item.totalTime = 0;\r\n          item.currentStatus = false;\r\n        }\r\n        carTmp.push(item);\r\n      });\r\n      this.cars = carTmp;\r\n    }).catch((err:any)=>{\r\n      UIkit.notification({\r\n        message: this.translate.instant('Cannot load Car'),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n    });\r\n  }\r\n\r\n  configNotification(){\r\n    clearInterval(this.interval);\r\n    this.router.navigate(['dashboard', 'config', 'notification', this.dealerId]);\r\n  }\r\n\r\n  timeline(carId){\r\n    clearInterval(this.interval);\r\n    this.router.navigate(['dashboard', 'timeline', this.dealerId, carId]);\r\n  }\r\n\r\n  onHeaderClick(event){\r\n    clearInterval(this.interval);\r\n    if(event == 'back'){\r\n      this.router.navigate(['menu']);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"timelinewrap\\\" style=\\\"padding-top:1.5em;\\\"  >\\r\\n  <div class=\\\"uk-padding-small uk-padding-remove-bottom\\\">\\r\\n    <span class=\\\"uk-margin-small-right uk-icon\\\" uk-icon=\\\"chevron-left\\\" (click)=\\\"cancelTime()\\\"\\r\\n      ><svg\\r\\n        width=\\\"20\\\"\\r\\n        height=\\\"20\\\"\\r\\n        viewBox=\\\"0 0 20 20\\\"\\r\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n        data-svg=\\\"chevron-left\\\"\\r\\n      ></svg></span>\\r\\n  </div>\\r\\n  <div class=\\\"uk-text-emphasis timeline-samll-font uk-padding uk-text-large\\\">{{'timeline'|translate}}</div>\\r\\n  <div class=\\\"uk-container uk-padding-small uk-padding-remove-top uk-padding-remove-bottom\\\">\\r\\n    <div class=\\\"uk-card uk-card-default uk-card-body uk-width-1-2@m uk-padding-small topcontainer\\\">\\r\\n      <button class=\\\"uk-button uk-button-default uk-button-small btn-style uk-margin-small-bottom\\\">Information</button>\\r\\n      <dl class=\\\"uk-description-list uk-margin-remove-top dl-style\\\">\\r\\n        <dt class=\\\"uk-text-emphasis uk-margin-small-bottom\\\">{{'status'|translate}}</dt>\\r\\n        <dd class=\\\"uk-text-emphasis uk-margin-small-bottom\\\" *ngFor=\\\"let status of car.status\\\"  > {{status}}</dd>\\r\\n        <dd class=\\\"uk-text-emphasis uk-margin-small-bottom\\\">{{'license plate'|translate}}</dd>\\r\\n        <dd class=\\\"uk-text-emphasis uk-margin-small-bottom\\\" *ngIf=\\\"car.license_plate\\\" >{{car.license_plate}}</dd>\\r\\n        <dt class=\\\"uk-text-emphasis uk-margin-small-bottom\\\">{{'brand'|translate}}</dt>\\r\\n        <dd class=\\\"uk-text-emphasis uk-margin-small-bottom\\\" *ngIf=\\\"car.brand\\\" >{{car.brand}}</dd>\\r\\n        <dt class=\\\"uk-text-emphasis uk-margin-small-bottom\\\">{{'model'|translate}}</dt>\\r\\n        <dd class=\\\"uk-text-emphasis uk-margin-small-bottom\\\" *ngIf=\\\"car.model\\\" >{{car.model}}</dd>\\r\\n        <dt class=\\\"uk-text-emphasis uk-margin-small-bottom\\\">{{'color'|translate}}</dt>\\r\\n        <dd class=\\\"uk-text-emphasis  \\\"   *ngIf=\\\"car.color\\\">{{car.color}}</dd>\\r\\n      </dl>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n   \\r\\n\\r\\n  <div class=\\\"uk-text-emphasis timeline-samll-font uk-padding uk-text-large\\\">{{'timeline'|translate}}</div>\\r\\n  <div class=\\\"uk-container uk-padding-small uk-padding-remove-top uk-padding-remove-bottom\\\">\\r\\n    <div class=\\\"uk-card uk-card-default uk-card-body uk-width-1-2@m uk-padding-small bottomcontainer\\\">\\r\\n      <table class=\\\"uk-table uk-table-middle uk-table-divider table-style thead-style uk-table-middle uk-margin-remove-top\\\">\\r\\n        <thead class=\\\"thead-style\\\">\\r\\n          <tr>\\r\\n            <th class=\\\"uk-text-small small-font uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">{{'station'|translate}}</th>\\r\\n            <th class=\\\"uk-text-small small-font uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\"> {{'arrival time'|translate}}</th>\\r\\n            <th class=\\\"uk-text-small small-font uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">{{'departure time'|translate}}</th>\\r\\n            <th class=\\\"uk-text-small small-font uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">{{'used time'|translate}} <br/> ({{'minutes'|translate}})</th>\\r\\n            <th class=\\\"uk-text-small small-font uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">{{'status'|translate}}</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <!-- <tr *ngFor=\\\"let timeline of car.timeline\\\">\\r\\n            <th class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">Station</th>\\r\\n            <th class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\"> Arrival</th>\\r\\n            <th class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">Departure</th>\\r\\n            <th class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">Use time</th>\\r\\n            <th class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">Status</th>\\r\\n         \\r\\n          </tr> -->\\r\\n          <tr *ngFor=\\\"let timeline of car.timeline\\\" >\\r\\n            <ng-container *ngIf=\\\"timeline.station_id != 0\\\">\\r\\n              <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                {{timeline.station.name}}\\r\\n              </td>\\r\\n              <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                {{timeline.arrival_at}}\\r\\n              </td>\\r\\n              <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                {{timeline.departure_at}}\\r\\n              </td>\\r\\n              <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                {{timeline.stationTime}}\\r\\n              </td>\\r\\n              <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                <div *ngIf=\\\"timeline.status != ''\\\">\\r\\n                  <button class=\\\"uk-button uk-button-danger uk-button-small\\\" style=\\\"width: 100px;\\\">\\r\\n                    {{timeline.status}}\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"timeline.status == ''\\\">\\r\\n                    OK\\r\\n                </div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            \\r\\n            <ng-container *ngIf=\\\"timeline.station_id == 0\\\">\\r\\n                <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                  {{\\\"Register\\\"|translate}}\\r\\n                </td>\\r\\n                <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                  {{timeline.arrival_at}}\\r\\n                </td>\\r\\n                <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                  -\\r\\n                </td>\\r\\n                <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                  -\\r\\n                </td>\\r\\n                <td class=\\\"uk-text-small uk-text-emphasis uk-width-1-3 uk-padding-small uk-padding-remove-left uk-padding-remove-right uk-text-center\\\">\\r\\n                  -\\r\\n                </td>\\r\\n              </ng-container>\\r\\n          </tr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- <div *ngIf=\\\"role.service_agent\\\" >\\r\\n  切片timeline页面代码\\r\\n<app-footer></app-footer>\\r\\n</div> -->\\r\\n\\r\\n<!-- \\r\\n<app-header   [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\r\\n<div *ngIf=\\\"!role.service_agent\\\"  class=\\\"uk-container uk-margin-xlarge-bottom\\\">\\r\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\r\\n    <div class=\\\"uk-navbar-left\\\">\\r\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'timeline'|translate}}</a>\\r\\n    </div>\\r\\n    <div class=\\\"uk-navbar-right\\\">\\r\\n      <div class=\\\"uk-navbar-item\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n  <h2 class=\\\"uk-heading-line\\\"><span>{{'information'|translate}}</span></h2>\\r\\n  <dl class=\\\"uk-description-list\\\">\\r\\n      <dt>{{'status'|translate}}</dt>\\r\\n      <dd>\\r\\n        <button *ngFor=\\\"let status of car.status\\\" class=\\\"uk-button uk-button-danger uk-button-small\\\">\\r\\n          {{status}}\\r\\n        </button>\\r\\n      </dd>\\r\\n      <dt>{{'license plate'|translate}}</dt>\\r\\n      <dd>{{car.license_plate}}</dd>\\r\\n      <dt>{{'brand'|translate}}</dt>\\r\\n      <dd>{{car.brand}}</dd>\\r\\n      <dt>{{'model'|translate}}</dt>\\r\\n      <dd>{{car.model}}</dd>\\r\\n      <dt>{{'color'|translate}}</dt>\\r\\n      <dd>{{car.color}}</dd>\\r\\n  </dl>\\r\\n\\r\\n  <h2 class=\\\"uk-heading-line\\\"><span>{{'timeline'|translate}}</span></h2>\\r\\n  <div class=\\\"uk-overflow-auto\\\">\\r\\n  <table class=\\\"uk-table uk-table-striped\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th class=\\\"uk-text-nowrap\\\">{{'station'|translate}}</th>\\r\\n        <th class=\\\"uk-text-nowrap\\\">{{'arrival time'|translate}}</th>\\r\\n        <th class=\\\"uk-text-nowrap\\\">{{'departure time'|translate}}</th>\\r\\n        <th class=\\\"uk-text-nowrap\\\">{{'used time'|translate}} ({{'minutes'|translate}})</th>\\r\\n        <th class=\\\"uk-text-nowrap\\\">{{'status'|translate}}</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let timeline of car.timeline\\\" >\\r\\n        <ng-container *ngIf=\\\"timeline.station_id != 0\\\">\\r\\n          <td class=\\\"uk-text-nowrap\\\">\\r\\n            {{timeline.station.name}}\\r\\n          </td>\\r\\n          <td class=\\\"uk-text-nowrap\\\">\\r\\n            {{timeline.arrival_at}}\\r\\n          </td>\\r\\n          <td class=\\\"uk-text-nowrap\\\">\\r\\n            {{timeline.departure_at}}\\r\\n          </td>\\r\\n          <td class=\\\"uk-text-nowrap\\\">\\r\\n            {{timeline.stationTime}}\\r\\n          </td>\\r\\n          <td class=\\\"uk-text-nowrap\\\">\\r\\n            <div *ngIf=\\\"timeline.status != ''\\\">\\r\\n              <button class=\\\"uk-button uk-button-danger uk-button-small\\\" style=\\\"width: 100px;\\\">\\r\\n                {{timeline.status}}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"timeline.status == ''\\\">\\r\\n                OK\\r\\n            </div>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        \\r\\n        <ng-container *ngIf=\\\"timeline.station_id == 0\\\">\\r\\n            <td>\\r\\n              {{\\\"Register\\\"|translate}}\\r\\n            </td>\\r\\n            <td>\\r\\n              {{timeline.arrival_at}}\\r\\n            </td>\\r\\n            <td>\\r\\n              -\\r\\n            </td>\\r\\n            <td>\\r\\n              -\\r\\n            </td>\\r\\n            <td>\\r\\n              -\\r\\n            </td>\\r\\n          </ng-container>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n</div>\\r\\n\"","module.exports = \".timelinewrap {\\n  width: 100%;\\n  min-height: 100%;\\n  background: #f2f2f3; }\\n\\n.btn-style {\\n  border: none;\\n  background: #dcdcdc; }\\n\\n.topcontainer {\\n  border-radius: 6px !important;\\n  overflow: hidden;\\n  background: #f5f5f5; }\\n\\n.bottomcontainer {\\n  padding: 0 !important;\\n  border-radius: 6px !important;\\n  background: #f5f5f5;\\n  overflow: hidden; }\\n\\n.bottomcontainer thead {\\n  background: #fff;\\n  border-radius: 6px !important;\\n  overflow: hidden;\\n  box-shadow: 0 6px 60px 7px rgba(0, 0, 0, 0.1); }\\n\\n.bottomcontainer tr {\\n  display: flex !important; }\\n\\n.bottomcontainer tr td {\\n  line-height: 100% !important; }\\n\\n.bottomcontainer tbody tr {\\n  position: relative;\\n  border: none !important; }\\n\\n.bottomcontainer tbody tr:not(:last-child)::after {\\n  content: '';\\n  display: block;\\n  width: 96%;\\n  height: 2px;\\n  background: #ffffff;\\n  position: absolute;\\n  left: 2%;\\n  bottom: 0; }\\n\\n@media screen and (max-width: 370px) {\\n  .timeline-samll-font {\\n    font-size: 20px;\\n    padding-top: 20px !important;\\n    padding-bottom: 20px !important; }\\n  .thead-style th {\\n    font-size: 12px !important; }\\n  .dl-style dd {\\n    font-size: 12px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DashboardService } from '../services/dashboard.service';\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-car-timeline',\r\n  templateUrl: './car-timeline.component.html',\r\n  styleUrls: ['./car-timeline.component.scss']\r\n})\r\nexport class CarTimelineComponent implements OnInit {\r\n\r\n  dealerId = '';\r\n  carId = '';\r\n  loading = false;\r\n\r\n  car = {\r\n    license_plate: '',\r\n    brand: '',\r\n    model:'',\r\n    color: '',\r\n    status:[],\r\n    timeline:[],\r\n  };\r\n  role = {\r\n    admin: false,\r\n    supervisor: false,\r\n    technician: false,\r\n    analyst: false,\r\n  }\r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private dashboardService: DashboardService) { \r\n    this.carId = activeRoute.snapshot.params['carId'];\r\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    let userType = localStorage.getItem('userType');\r\n    this.role[userType] = true;\r\n    this.loadCar();\r\n  }\r\n\r\n  loadCar(){\r\n    this.loading = true;\r\n    this.dashboardService.timeline(this.carId).then((res:any)=>{\r\n      console.log(res.data);\r\n      this.car = res.data.car[0];\r\n      let tmpTimeline = res.data.car[0].dashboard;\r\n      tmpTimeline.forEach((cartime:any) => {\r\n        ///calcurate time\r\n       cartime.stationTime = cartime.def_time;\r\n\r\n        /// find station status\r\n        cartime.status = \"\";\r\n        res.data.car[0].notification.forEach((noti:any) => {\r\n          if(noti.station_notification_config_id != 0){\r\n            if(cartime.station != null){\r\n              if(noti.station_notification.station_id == cartime.station.id){\r\n                cartime.status = noti.station_notification.alert_message;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n      this.car.timeline = tmpTimeline;\r\n\r\n      /// find dealer status\r\n      let tmpStatus = [];\r\n      res.data.car[0].notification.forEach((noti:any) => {\r\n        if(noti.dealer_notification_config_id != 0){\r\n          tmpStatus.push(noti.dealer_notification.name);\r\n        }\r\n      });\r\n      this.car.status = tmpStatus;\r\n      this.loading = false;\r\n    }).catch((err:any)=>{\r\n      UIkit.notification({\r\n        message: err,\r\n        status: 'warning',\r\n        timeout: 1000\r\n      });\r\n      this.loading = false;\r\n    });\r\n  }\r\n  cancelTime(){\r\n    console.log('hhhhhhhhhhhhhhhhhhh');\r\n    this.router.navigate(['dashboard', 'car', this.dealerId]);\r\n  }\r\n  \r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private http: HttpClient){\n  }\n\n  timeline(car_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/dashboard/car/timeline\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': car_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  list(dealer_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/dashboard/car/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  ///Extend\n  notificationList(dealer_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/notification/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  notificationEdit(notification){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/notification/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,notification,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n      <a class=\\\"uk-navbar-item uk-logo\\\">{{'data'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n      \\n    </div>\\n  </nav>\\n\\n  <fieldset class=\\\"uk-fieldset uk-background-muted uk-padding-small\\\">\\n\\t<div class=\\\"uk-margin\\\">\\n        <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'start date'|translate}}: </label>\\n        <div class=\\\"uk-form-controls\\\">\\n          <input class=\\\"uk-input\\\" type=\\\"date\\\" [(ngModel)]=\\\"filter.start_date\\\">\\n        </div>\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'end date'|translate}}: </label>\\n        <div class=\\\"uk-form-controls\\\">\\n          <input class=\\\"uk-input\\\" type=\\\"date\\\" [(ngModel)]=\\\"filter.end_date\\\">\\n        </div>\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"onClickFilter()\\\">{{'apply'|translate}} {{'filter'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-left\\\" (click)=\\\"onClickExport()\\\">{{'download as excel'|translate}}</button>\\n\\t</div>\\n  </fieldset>\\n\\n  <div class=\\\"uk-overflow-auto\\\">\\n    <table class=\\\"uk-table uk-table-striped uk-table-small\\\">\\n      <thead>\\n        <tr>\\n          <th rowspan=\\\"2\\\">{{'date'|translate}}</th>\\n          <th colspan=\\\"4\\\">{{'car'|translate}} {{'detail'|translate}}</th>\\n          <th colspan=\\\"4\\\">{{'summary'|translate}}</th>\\n          <th colspan=\\\"4\\\" *ngFor=\\\"let station of stations\\\">{{station.name}}</th>\\n        </tr>\\n        <tr>\\n          <th class=\\\"uk-text-nowrap\\\">{{'license plate'|translate}}</th>\\n          <th class=\\\"uk-text-nowrap\\\">{{'brand'|translate}}</th>\\n          <th class=\\\"uk-text-nowrap\\\">{{'model'|translate}}</th>\\n          <th class=\\\"uk-text-nowrap\\\">{{'color'|translate}}</th>\\n          <th class=\\\"uk-text-nowrap\\\">{{'arrival'|translate}} {{'time'|translate}}</th>\\n          <th class=\\\"uk-text-nowrap\\\">{{'departure'|translate}} {{'time'|translate}}</th>\\n          <th class=\\\"uk-text-nowrap\\\">{{'total'|translate}} {{'time'|translate}}</th>\\n          <th class=\\\"uk-text-nowrap\\\">{{'status'|translate}}</th>\\n          <ng-container *ngFor=\\\"let station of stations\\\">\\n            <th class=\\\"uk-text-nowrap\\\">{{'arrival'|translate}} {{'time'|translate}}</th>\\n            <th class=\\\"uk-text-nowrap\\\">{{'departure'|translate}} {{'time'|translate}}</th>\\n            <th class=\\\"uk-text-nowrap\\\">{{'total'|translate}} {{'time'|translate}}</th>\\n            <th class=\\\"uk-text-nowrap\\\">{{'status'|translate}}</th>\\n          </ng-container>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let data of datas\\\">\\n          <td class=\\\"uk-text-nowrap\\\">{{data.created_at}}</td>\\n          <td class=\\\"uk-text-nowrap\\\">{{data.license_plate}}</td>\\n          <td class=\\\"uk-text-nowrap\\\">{{data.brand}}</td>\\n          <td class=\\\"uk-text-nowrap\\\">{{data.model}}</td>\\n          <td class=\\\"uk-text-nowrap\\\">{{data.color}}</td>\\n          <ng-container>\\n            <td class=\\\"uk-text-nowrap\\\">{{data.timeline[0].min_time}}</td>\\n            <td class=\\\"uk-text-nowrap\\\">{{data.timeline[0].max_time}}</td>\\n            <td class=\\\"uk-text-nowrap\\\">{{data.timeline[0].def_time}}</td>\\n            <td class=\\\"uk-text-nowrap\\\">\\n              <ng-container *ngFor=\\\"let timeline of data.timeline\\\">\\n                <ng-container *ngIf=\\\"timeline.station_id == 0\\\">\\n                  {{timeline.dealer_noti_name}},\\n                </ng-container>\\n              </ng-container>\\n              <ng-container *ngIf=\\\"!data.timeline[0].dealer_noti_name\\\">\\n                OK\\n              </ng-container>\\n            </td>\\n          </ng-container>\\n          <ng-container *ngFor=\\\"let timeline of data.timeline;\\\">\\n            <ng-container *ngIf=\\\"timeline.station_id != 0\\\">\\n              <td class=\\\"uk-text-nowrap\\\">{{timeline.min_time}}</td>\\n              <td class=\\\"uk-text-nowrap\\\">{{timeline.max_time}}</td>\\n              <td class=\\\"uk-text-nowrap\\\">{{timeline.def_time}}</td>\\n              <td class=\\\"uk-text-nowrap\\\">\\n                <ng-container *ngIf=\\\"timeline.station_noti_name\\\">\\n                  {{timeline.station_noti_name}}\\n                </ng-container>\\n                <ng-container *ngIf=\\\"!timeline.station_noti_name\\\">\\n                  OK\\n                </ng-container>\\n              </td>\\n            </ng-container>\\n          </ng-container>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n<div class=\\\"uk-margin\\\">\\n  <ul class=\\\"uk-pagination uk-flex-center\\\" uk-margin>\\n    <li *ngIf=\\\"pageController.pageIndex != 1\\\">\\n      <a (click)=\\\"changePageonClick(false,-1)\\\">\\n        <span uk-pagination-previous></span>\\n      </a>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex > 4\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngFor=\\\"let index of pageController.pageArray\\\" [class.uk-active]=\\\"index==pageController.pageIndex\\\">\\n      <a (click)=\\\"changePageonClick(true,index)\\\">{{index}}</a>\\n    </li>\\n    <!-- <li class=\\\"uk-active\\\"><span>4</span></li> -->\\n    <li *ngIf=\\\"pageController.pageNumber - pageController.pageIndex > 3\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex != pageController.pageNumber\\\">\\n      <a (click)=\\\"changePageonClick(false,1)\\\">\\n        <span uk-pagination-next></span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n</div>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"th, td {\\n  border: 1px solid; }\\n\\n.uk-table th {\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n.uk-table td {\\n  vertical-align: middle; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../services/data.service';\nimport {ExcelService} from '../services/excel.service';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-data-export',\n  templateUrl: './data-export.component.html',\n  styleUrls: ['./data-export.component.scss']\n})\nexport class DataExportComponent implements OnInit {\n\n  dealerId = \"\";\n  loading = false;\n\n  filter = {\n    start_date: \"2018-08-30\",\n    end_date: \"2018-08-30\",\n  };\n\n  stations = [];\n\n  pageController = {\n    itemPerPage: 10,\n    itemNumber: 0,\n    pageNumber: 0,\n    pageIndex: 1,\n    pageArray: [],\n  };\n\n  datas = [];\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private dataService: DataService, private excelService:ExcelService) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.filter.start_date = this.nowDateFormat();\n    this.filter.end_date = this.nowDateFormat();\n    this.dataService.allStation(this.dealerId).then((res:any)=>{\n      this.stations = res.data.station;\n      this.loading = false;\n    }).catch((err:any)=>{\n      this.loading = false;\n    })\n  }\n\n  onClickExport(){\n    this.loading = true;\n    this.dataService.list(this.dealerId, this.filter, 0, 100).then((res:any)=>{\n      let xlsx = [];\n      // create header\n      let rowheader = [];\n      rowheader.push(\"date\");\n      rowheader.push(\"Car License Plate\");\n      rowheader.push(\"Car Brand\");\n      rowheader.push(\"Car Model\");\n      rowheader.push(\"Car Color\");\n      rowheader.push(\"Summary Arrival Time\");\n      rowheader.push(\"Summary Deperture Time\");\n      rowheader.push(\"Summary Total Time\");\n      rowheader.push(\"Summary Status\");\n      this.stations.forEach(element => {\n        rowheader.push(element.name+\" Arrival Time\");\n        rowheader.push(element.name+\" Deperture Time\");\n        rowheader.push(element.name+\" Total Time\");\n        rowheader.push(element.name+\" Status\");\n      });\n      xlsx.push(rowheader);\n\n      let tmpCar = res.data.car;\n      tmpCar.forEach(carElement => {\n        rowheader = [];\n        rowheader.push(carElement.created_at);\n        rowheader.push(carElement.license_plate);\n        rowheader.push(carElement.brand);\n        rowheader.push(carElement.model);\n        rowheader.push(carElement.color);\n        let stationIndex = 0;\n        let count = 0;\n        while(count <  carElement.timeline.length || stationIndex < this.stations.length){\n          if(count == carElement.timeline.length){\n            count--;\n          }\n          if(stationIndex == this.stations.length){\n            stationIndex--;\n          }\n          if(carElement.timeline[count].station_id != 0){\n            if(carElement.timeline[count].station_id == this.stations[stationIndex].id){\n              rowheader.push(carElement.timeline[count].min_time);\n              rowheader.push(carElement.timeline[count].max_time);\n              rowheader.push(carElement.timeline[count].def_time);\n              if(carElement.timeline[count].station_noti_name){\n                rowheader.push(carElement.timeline[count].station_noti_name);\n              }else{\n                rowheader.push(\"OK\");\n              }\n              stationIndex++;\n              count++;\n            } else {\n              rowheader.push(\" \");\n              rowheader.push(\" \");\n              rowheader.push(\" \");\n              rowheader.push(\" \");\n              stationIndex++;\n              count++;\n            }\n          }else{\n            ///check if these is 2 zero station id\n            if(rowheader.length > 8){\n              rowheader[8] = rowheader[8]+\", \"+carElement.timeline[count].dealer_noti_name;\n            }else{\n              rowheader.push(carElement.timeline[count].min_time);\n              rowheader.push(carElement.timeline[count].max_time);\n              rowheader.push(carElement.timeline[count].def_time);\n              if(carElement.timeline[count].dealer_noti_name != null){\n                rowheader.push(carElement.timeline[count].dealer_noti_name);\n              }else{\n                rowheader.push(\"OK\");\n              }\n            }\n            count++;\n          }\n        };\n        xlsx.push(rowheader);\n      });\n      this.excelService.arrayExportAsExcelFile(xlsx, 'car');\n      this.loading = false;\n    }).catch((err:any)=>{\n      UIkit.notification({\n        message: err,\n        status: 'warning',\n        timeout: 1000\n      });\n      this.loading = false;\n    })\n  }\n\n  onClickFilter(){\n    this.pageController.pageIndex = 1;\n    this.filterCar();\n  }\n\n  filterCar(){\n    this.loading = true;\n    this.dataService.list(this.dealerId, this.filter, (this.pageController.pageIndex - 1) * this.pageController.itemPerPage, this.pageController.itemPerPage).then((res:any)=>{\n      this.pageController.itemNumber = res.data.count;\n      this.pageController.pageNumber = Math.ceil(this.pageController.itemNumber / this.pageController.itemPerPage);\n      this.pageController.pageArray = [];\n      ///make pagination\n      this.pageController.pageArray.push(this.pageController.pageIndex);\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex - count - 1 > 0 ){\n          this.pageController.pageArray.unshift(this.pageController.pageIndex - count - 1);\n        }\n      }\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex + count < this.pageController.pageNumber){\n          this.pageController.pageArray.push(this.pageController.pageIndex + count + 1);\n        }\n      }\n      let tmpCar = res.data.car;\n      tmpCar.forEach(carElement => {\n        let tmpTimeline = [];\n        let stationIndex = 0;\n        let count = 0;\n        while(count <  carElement.timeline.length || stationIndex < this.stations.length){\n          if(count == carElement.timeline.length){\n            count--;\n          }\n          if(stationIndex == this.stations.length){\n            stationIndex--;\n          }\n          if(carElement.timeline[count].station_id != 0){\n            if(carElement.timeline[count].station_id == this.stations[stationIndex].id){\n              tmpTimeline.push(carElement.timeline[count]);\n              stationIndex++;\n              count++;\n            } else {\n              tmpTimeline.push({\n                station_noti_name: \" \",\n                def_time: \"\",\n                max_time: \"\",\n                min_time: \"\",\n              });\n              stationIndex++;\n              count++;\n            }\n          }else{\n            ///check if these is 2 zero station id\n            if(tmpTimeline.length > 0){\n              tmpTimeline[0].dealer_noti_name = tmpTimeline[0].dealer_noti_name +\", \"+carElement.timeline[count].dealer_noti_name;\n            }else{\n              tmpTimeline.push(carElement.timeline[count]);\n            }\n            count++;\n          }\n        };\n        carElement.timeline = tmpTimeline;\n      });\n      this.datas = tmpCar;\n      this.loading = false;\n    }).catch((err:any)=>{\n      UIkit.notification({\n        message: err,\n        status: 'warning',\n        timeout: 1000\n      });\n      this.loading = false;\n    })\n  }\n\n  onHeaderClick(event){\n    if(event == 'back'){\n      this.router.navigate(['menu']);\n    }\n  }\n\n  nowDateFormat() {\n    var x = new Date();\n    var y = x.getFullYear().toString();\n    var m = (x.getMonth() + 1).toString();\n    var d = x.getDate().toString();\n    (d.length == 1) && (d = '0' + d);\n    (m.length == 1) && (m = '0' + m);\n    let dataNow = y +\"-\"+ m +\"-\"+ d;\n    return dataNow;\n  }\n\n  changePageonClick(option, index){\n    if(option){\n      this.pageController.pageIndex = index;\n    }else{\n      this.pageController.pageIndex += index;\n    }\n    this.filterCar();\n  }\n\n}\n\ninterface anyObject {\n  [key: string]: any\n}\n\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient){\n  }\n\n  list(dealer_id,filter,offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/data/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        limit: limit,\n        offset: offset,\n        filter: filter,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  //Extend \n  export(dealer_id,filter){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/data/export\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        filter: filter,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  allStation(dealer_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/station/all\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExcelService {\n\n  constructor() { }\n  public jsonExportAsExcelFile(json: any[], excelFileName: string): void {\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n  \n  public arrayExportAsExcelFile(arr: any[], excelFileName: string): void {\n    const worksheet: XLSX.WorkSheet = XLSX.utils.aoa_to_sheet(arr);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n\n  private saveAsExcelFile(buffer: any, fileName: string): void {\n     const data: Blob = new Blob([buffer], {type: EXCEL_TYPE});\n     FileSaver.saveAs(data, fileName + '_export_' + new  Date().getTime() + EXCEL_EXTENSION);\n  }\n}\n","module.exports = \"<app-header></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'Configure'|translate}} {{'notification'|translate}} {{'condition'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n    </div>\\n  </nav>\\n</div>\\n\\n<div class=\\\"uk-container\\\">\\n  <form class=\\\"uk-form-stacked uk-margin-top\\\">\\n\\n    <div class=\\\"uk-margin\\\" *ngFor=\\\"let dealer of form.dealer_noti_config\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"{{dealer.name}}\\\"><span [translate]=\\\"dealer.name\\\"></span> (<span [translate]=\\\"dealer.unit\\\"></span>)</label>\\n      <div class=\\\"uk-form-controls\\\">\\n        <input class=\\\"uk-input\\\" id=\\\"{{dealer.name}}\\\" name=\\\"{{dealer.name}}\\\" type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"dealer.value\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"uk-margin\\\" *ngFor=\\\"let station of form.station_noti_config\\\">\\n        <label class=\\\"uk-form-label\\\" for=\\\"{{station.name}}\\\"><span [translate]=\\\"station.name\\\"></span> {{station.station.name}} (<span [translate]=\\\"station.unit\\\"></span>)</label>\\n        <div class=\\\"uk-form-controls\\\">\\n\\t\\t  <div class=\\\"uk-form-label\\\" style=\\\"float:right;margin-top:-1.8em;\\\"></div>\\n          <input class=\\\"uk-input\\\" id=\\\"{{station.name}}\\\" name=\\\"{{station.name}}\\\" type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"station.value\\\">\\n        </div>\\n      </div>\\n\\n  </form>\\n  <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n    <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"save()\\\">{{'save'|translate}}</button>\\n    <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancel()\\\">{{'cancel'|translate}}</button>\\n  <div>    \\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DealerService } from '../services/dealer.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-dealer-config-notification',\n  templateUrl: './dealer-config-notification.component.html',\n  styleUrls: ['./dealer-config-notification.component.scss']\n})\nexport class DealerConfigNotificationComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n\n  confirmModal = {\n    elementId:\"notification-config-edit-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to update notification condition?\"),\n    state:\"\",\n  }\n\n  form = {\n    dealer_noti_config:[],\n    station_noti_config:[],\n  }\n\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private dealerService: DealerService, private translate: TranslateService) { \n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadNotification();\n  }\n\n  loadNotification(){\n    this.loading = true;\n    this.dealerService.notificationList(this.dealerId).then((res:any)=>{\n      this.form.dealer_noti_config = res.data.dealer_noti_config;\n      this.form.station_noti_config = res.data.station_noti_config;\n      this.loading = false;\n    }).catch((err:any)=>{\n      this.loading = false;\n    });\n  }\n\n\n  save(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).show();\n  }\n\n  cancel(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['dealer', 'information', this.dealerId]);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.loading = true;\n      this.dealerService.notificationEdit(this.form).then((res:any)=>{\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.loading = false;\n        this.router.navigate(['dealer', 'information', this.dealerId]);\n      }).catch((err:any)=>{\n        this.loading = false;\n        UIkit.modal(_elementId).hide();\n        UIkit.notification({\n          message: this.translate.instant('Cannot edit Notification'),\n          status: 'warning',\n          timeout: 1000\n        })\n      })\n\n\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n}\n","module.exports = \"<app-header></app-header>\\n<div class=\\\"uk-container\\\">\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n        <div class=\\\"uk-navbar-left\\\">\\n            <a class=\\\"uk-navbar-item uk-logo\\\" >{{'dealer create'|translate}}</a>\\n        </div>\\n    </nav>\\n    <form class=\\\"uk-form-stacked\\\">\\n        <div class=\\\"uk-alert-danger\\\" *ngIf=\\\"alert.show\\\" uk-alert>{{alert.message}}</div>\\n        <h4 class=\\\"uk-heading-line\\\"><span>{{'dealer'|translate}}</span></h4>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">*{{'dealer name'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"dealername\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.name\\\">\\n            </div>\\n        </div>\\n        \\n        <h4 class=\\\"uk-heading-line\\\"><span>{{'location'|translate}}</span></h4>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'address'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"phoaddressne\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.address\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'street'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"street\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.street\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'city'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"city\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.city\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'state'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"state\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.state\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'country'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"country\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.country\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'zipcode'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"zipcode\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.zipcode\\\">\\n            </div>\\n        </div>\\n        \\n        <h4 class=\\\"uk-heading-line\\\"><span>{{'contact person'|translate}}</span></h4>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'name'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"name\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_name\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'position'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"position\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_position\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'email'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"email\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_email\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'tel'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"tel\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_tel\\\">\\n            </div>\\n        </div>\\n    </form>\\n    <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"create()\\\">{{'create'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancel()\\\">{{'cancel'|translate}}</button>\\n    </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<!-- <div id=\\\"modal-confirm\\\" uk-modal>\\n    <div class=\\\"uk-modal-dialog uk-modal-body\\\">\\n        <p>{{'Do you confirm to create new Dealer'}}?</p>\\n        <p class=\\\"uk-text-right\\\">\\n            <button class=\\\"uk-button uk-button-primary uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"modalConfirm()\\\">{{'confirm'|translate}}</button>\\n            <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"modalCancel()\\\">{{'cancel'|translate}}</button>\\n        </p>\\n    </div>\\n</div> -->\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DealerService } from '../services/dealer.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-dealer-create',\n  templateUrl: './dealer-create.component.html',\n  styleUrls: ['./dealer-create.component.scss']\n})\nexport class DealerCreateComponent implements OnInit {\n\n  constructor(private router : Router, private dealerService : DealerService, private translate: TranslateService) { }\n\n  loading = false;\n\n  elementId = {\n    confirmModal:\"dealer-create-confirm-modal\",\n  }\n\n  confirmModal = {\n    elementId:\"dealer-create-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to create new Dealer?\"),\n    state:\"\",\n  }\n\n  alert = {\n    show: false,\n    message: \"\",\n  }\n\n  form = {\n    name: '',\n    address: '',\n    street: '',\n    state: '',\n    city: '',\n    country: '',\n    zipcode: '',\n    contact_name:'',\n    contact_position:'',\n    contact_email:'',\n    contact_tel:'',\n  }\n\n  ngOnInit() {\n  }\n\n  create(){\n    if(this.form.name !=''){\n\t\tlet _elementId = \"#\"+this.confirmModal.elementId;\n\t\tUIkit.modal(_elementId).show();\n    } else {\n      UIkit.notification({\n        message: this.translate.instant('Dealer name cannot emtry!!!'),\n        status: 'warning',\n        timeout: 1000\n      });\n\t}\n  }\n\n  cancel(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['dealer', 'list']);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.alert.show = false;\n      this.loading = true;\n      this.dealerService.create(this.form).then((res:any)=>{\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.loading = false;\n        this.router.navigate(['dealer', 'list']);\n      }).catch((err:any)=>{\n        this.loading = false;\n        UIkit.modal(_elementId).hide();\n        console.log(err);\n        this.alert.show = true;\n        this.alert.message = err;\n      })\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n}\n","module.exports = \"<app-header>\\n</app-header>\\n<div class=\\\"uk-container\\\">\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n        <div class=\\\"uk-navbar-left\\\">\\n            <a class=\\\"uk-navbar-item uk-logo\\\" >{{'dealer edit'|translate}}</a>\\n        </div>\\n        <div class=\\\"uk-navbar-right\\\">\\n        </div>\\n    </nav>\\n    <form class=\\\"uk-form-stacked\\\">\\n        <div class=\\\"uk-alert-danger\\\" *ngIf=\\\"alert.show\\\" uk-alert>{{alert.message}}</div>\\n        <h4 class=\\\"uk-heading-line\\\">\\n            <span>{{'dealer'|translate}}</span>\\n        </h4>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">*{{'dealer name'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"dealername\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.name\\\">\\n            </div>\\n        </div>\\n\\n        <h4 class=\\\"uk-heading-line\\\">\\n            <span>{{'location'|translate}}</span>\\n        </h4>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'address'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"phoaddressne\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.address\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'street'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"street\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.street\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'city'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"city\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.city\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'state'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"state\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.state\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'country'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"country\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.country\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'zipcode'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"zipcode\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.zipcode\\\">\\n            </div>\\n        </div>\\n\\n        <h4 class=\\\"uk-heading-line\\\">\\n            <span>{{'contact person'|translate}}</span>\\n        </h4>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'name'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"name\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_name\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'position'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"position\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_position\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'email'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"email\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_email\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-text\\\">{{'tel'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"tel\\\" id=\\\"form-stacked-text\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.contact_tel\\\">\\n            </div>\\n        </div>\\n    </form>\\n    <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"edit()\\\">{{'edit'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancel()\\\">{{'cancel'|translate}}</button>\\n    </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DealerService } from '../services/dealer.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-dealer-edit',\n  templateUrl: './dealer-edit.component.html',\n  styleUrls: ['./dealer-edit.component.scss']\n})\nexport class DealerEditComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n\n  confirmModal = {\n    elementId:\"dealer-edit-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to update information?\"),\n    state:\"\",\n  }\n  \n  form = {\n    name: '',\n    address: '',\n    street: '',\n    state: '',\n    city: '',\n    country: '',\n    zipcode: '',\n    contact_name:'',\n    contact_position:'',\n    contact_email:'',\n    contact_tel:'',\n  }\n\n  alert = {\n    show: false,\n    message: \"\",\n  }\n\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private dealerService: DealerService, private translate: TranslateService) { \n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadDealer();\n  }\n\n  loadDealer(){\n    this.loading = true;\n    this.dealerService.get(this.dealerId).then((res:any)=>{\n      this.form = res.data.dealer;\n      this.loading = false;\n    }).catch((err:any)=>{\n      this.loading = false;\n    });\n  }\n\n  edit(){\n    if(this.form.name !=''){\n\t\tlet _elementId = \"#\"+this.confirmModal.elementId;\n\t\tUIkit.modal(_elementId).show();\n    } else {\n      UIkit.notification({\n        message: this.translate.instant('Dealer name cannot emtry!!!'),\n        status: 'warning',\n        timeout: 1000\n      });\n\t}\n  }\n\n  cancel(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['dealer', 'information', this.dealerId]);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.alert.show = false;\n      this.loading = true;\n      this.dealerService.edit(this.form).then((res:any)=>{\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.loading = false;\n        this.router.navigate(['dealer', 'information', this.dealerId]);\n      }).catch((err:any)=>{\n        this.loading = false;\n        UIkit.modal(_elementId).hide();\n        this.alert.show = true;\n        this.alert.message = err;\n      })\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'dealer information'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n\\t\\t<button class=\\\"uk-button uk-button-mute uk-margin-right uk-button-small\\\" type=\\\"button\\\"><span uk-icon=\\\"more\\\"></span></button>\\n\\t\\t<div uk-dropdown=\\\"pos: bottom-right\\\">\\n\\t\\t\\t<ul class=\\\"uk-nav uk-dropdown-nav\\\">\\n\\t\\t\\t\\t<li class=\\\" uk-margin\\\" (click)=\\\"editDealer()\\\">{{'edit'|translate}} {{ 'dealer'|translate}}</li>\\n\\t\\t\\t\\t<li class=\\\"uk-nav-divider\\\"></li>\\n\\t\\t\\t\\t<li class=\\\" uk-margin\\\" (click)=\\\"configStation()\\\">{{'config'|translate}} {{'station'|translate}}</li>\\n\\t\\t\\t\\t<li class=\\\" uk-margin\\\" (click)=\\\"configNode()\\\">{{'config'|translate}} {{'blenode'|translate}}</li>\\n\\t\\t\\t\\t<li class=\\\" uk-margin\\\" (click)=\\\"configBeacon()\\\">{{'config'|translate}} {{'beacon'|translate}} </li>\\n\\t\\t\\t\\t<li class=\\\" uk-margin\\\" (click)=\\\"configNotification()\\\">{{'config'|translate}} {{'notification'|translate}}</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n    </div>\\n  </nav>\\n\\n  <h2 class=\\\"uk-heading-line\\\"><span>{{'information'|translate}}</span></h2>\\n  <dl class=\\\"uk-description-list\\\">\\n      <dt>{{'dealer name'|translate}}</dt>\\n      <dd>{{dealer.name}}</dd>\\n      <dt>{{'address'|translate}}</dt>\\n      <dd>{{dealer.address}} {{dealer.street}} {{dealer.state}} {{dealer.city}} {{dealer.country}} {{dealer.zipcode}}</dd>\\n  </dl>\\n\\n  <h2 class=\\\"uk-heading-line\\\"><span>{{'contact'|translate}} {{'person'|translate}}</span></h2>\\n  <dl class=\\\"uk-description-list\\\">\\n      <dt>{{'name'|translate}}</dt>\\n      <dd>{{dealer.contact_name}}</dd>\\n      <dt>{{'position'|translate}}</dt>\\n      <dd>{{dealer.contact_position}}</dd>\\n      <dt>{{'email'|translate}}</dt>\\n      <dd>{{dealer.contact_email}}</dd>\\n      <dt>{{'tel'|translate}}</dt>\\n      <dd>{{dealer.contact_tel}}</dd>\\n  </dl>\\n  <h2 class=\\\"uk-heading-line\\\"><span>{{'stations'|translate}}</span></h2>\\n  <div class=\\\"uk-overflow-auto\\\">\\n\\t  <table class=\\\"uk-table uk-table-striped\\\">\\n\\t\\t<thead>\\n\\t\\t  <tr>\\n\\t\\t\\t<th>{{'id'|translate}}</th>\\n\\t\\t\\t<th>{{'name'|translate}}</th>\\n\\t\\t\\t<th>{{'status'|translate}}</th>\\n\\t\\t  </tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t  <tr *ngFor=\\\"let station of dealer.station; let i = index\\\">\\n\\t\\t\\t<td>{{station.id}}</td>\\n\\t\\t\\t<td class=\\\"uk-text-nowrap\\\">{{station.name}}</td>\\n\\t\\t\\t<td class=\\\"uk-text-nowrap\\\" [translate]=\\\"station.status\\\"></td>\\n\\t\\t  </tr>\\n\\t\\t</tbody>\\n\\t  </table>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\"><span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span></div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport { DealerService } from '../services/dealer.service';\n\n@Component({\n  selector: 'app-dealer-information',\n  templateUrl: './dealer-information.component.html',\n  styleUrls: ['./dealer-information.component.scss']\n})\nexport class DealerInformationComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n  dealer = {\n    name:'',\n    address:'',\n    city:'',\n    street:'',\n    state:'',\n    country:'',\n    zipcode:'',\n    contact_name:'',\n    contact_position:'',\n    contact_email:'',\n    contact_tel:'',\n    station:[],\n  };\n\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private dealerService: DealerService) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadDealer();\n  }\n\n  loadDealer(){\n    this.loading = true;\n    this.dealerService.get(this.dealerId).then((res:any)=>{\n      this.dealer = res.data.dealer;\n      this.loading = false;\n    }).catch((err:any)=>{\n      this.loading = false;\n    });\n  }\n\n  editDealer(){\n    this.router.navigate(['dealer', 'edit', this.dealerId]);\n  }\n\n  configStation(){\n    this.router.navigate(['station', 'config', this.dealerId]);\n  }\n\n  configNode(){\n    this.router.navigate(['node', 'config', this.dealerId]);\n  }\n\n  configNotification(){\n    this.router.navigate(['dealer', 'config', 'notification', this.dealerId]);\n  }\n\n  configBeacon(){\n    this.router.navigate(['dealer', 'config', 'beacon', this.dealerId]);\n  }\n\n  onHeaderClick(event){\n    if(event == 'back'){\n      this.router.navigate(['dealer', 'list']);\n    }\n  }\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'dealer list'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n      <div class=\\\"uk-navbar-item\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"create()\\\">{{'create dealer'|translate}}</button>\\n      </div>\\n    </div>\\n  </nav>\\n\\n  \\n<div class=\\\"uk-card uk-card-default uk-margin\\\" style=\\\"border:1px solid #ddd;\\\" *ngFor=\\\"let dealer of dealers; let i = index\\\">\\n    <div class=\\\"uk-card-header uk-background-muted\\\">\\n\\t\\t<div class=\\\"uk-width-expand\\\">\\n\\t\\t\\t<h3 class=\\\"uk-card-title uk-margin-remove-bottom\\\">{{dealer.name}}</h3>\\n\\t\\t<p class=\\\"uk-text-meta uk-margin-remove-top\\\">{{'id' |translate}}: {{dealer.id}}</p>\\n\\t\\t<p>{{'address' |translate}}: {{dealer.address}} {{dealer.street}} {{dealer.state}} {{dealer.city}} {{dealer.country}}</p>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"uk-card-footer\\\">\\n\\t\\t<div class=\\\"uk-label\\\" [translate]=\\\"dealer.status\\\"></div>\\n\\t\\t<button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded uk-margin-left\\\" (click)=\\\"view(dealer.id)\\\">{{'enter'|translate}}</button>\\n\\t</div>\\n</div>\\n<div class=\\\" uk-margin\\\">\\n  <ul class=\\\"uk-pagination uk-flex-center\\\" uk-margin>\\n      <li *ngIf=\\\"pageController.pageIndex != 1\\\"><a (click)=\\\"changePageonClick(false,-1)\\\"><span uk-pagination-previous></span></a></li>\\n      <li *ngIf=\\\"pageController.pageIndex > 4\\\" class=\\\"uk-disabled\\\"><span>...</span></li>\\n      <li *ngFor=\\\"let index of pageController.pageArray\\\" [class.uk-active]=\\\"index==pageController.pageIndex\\\"><a (click)=\\\"changePageonClick(true,index)\\\">{{index}}</a></li>\\n      <!-- <li class=\\\"uk-active\\\"><span>4</span></li> -->\\n      <li *ngIf=\\\"pageController.pageNumber - pageController.pageIndex > 3\\\" class=\\\"uk-disabled\\\"><span>...</span></li>\\n      <li *ngIf=\\\"pageController.pageIndex != pageController.pageNumber\\\"><a (click)=\\\"changePageonClick(false,1)\\\"><span uk-pagination-next></span></a></li>\\n  </ul>\\n</div>\\n</div>\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\"><span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span></div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { DealerService } from '../services/dealer.service';\n\n@Component({\n  selector: 'app-dealer-list',\n  templateUrl: './dealer-list.component.html',\n  styleUrls: ['./dealer-list.component.scss']\n})\nexport class DealerListComponent implements OnInit {\n  \n  pageController = {\n    itemPerPage: 10,\n    itemNumber: 0,\n    pageNumber: 0,\n    pageIndex: 1,\n    pageArray: [],\n  };\n\n  loading = false;\n  dealers = [];\n\n  constructor(private router : Router, private dealerService : DealerService) { }\n\n  ngOnInit() {\n    this.loadDealer();\n  }\n\n  loadDealer(){\n    this.loading = true;\n    this.dealerService.list((this.pageController.pageIndex - 1) * this.pageController.itemPerPage, this.pageController.itemPerPage).then((res:any)=>{\n      this.pageController.itemNumber = res.data.count;\n      this.pageController.pageNumber = Math.ceil(this.pageController.itemNumber / this.pageController.itemPerPage);\n      this.pageController.pageArray = [];\n\n      ///make pagination\n      this.pageController.pageArray.push(this.pageController.pageIndex);\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex - count - 1 > 0 ){\n          this.pageController.pageArray.unshift(this.pageController.pageIndex - count - 1);\n        }\n      }\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex + count < this.pageController.pageNumber){\n          this.pageController.pageArray.push(this.pageController.pageIndex + count + 1);\n        }\n      }\n      this.dealers = res.data.dealer;\n      this.loading = false;\n    }).catch((err:any)=>{\n      this.loading = false;\n    });\n  }\n\n  changePageonClick(option, index){\n    if(option){\n      this.pageController.pageIndex = index;\n    }else{\n      this.pageController.pageIndex += index;\n    }\n    this.loadDealer();\n  }\n\n  create(){\n    this.router.navigate(['dealer', 'create']);\n  }\n\n  view(hid){\n    this.router.navigate(['dealer', 'information', hid]);\n  }\n\n  onHeaderClick(event){\n    if(event == 'back'){\n      this.router.navigate(['menu']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DealerService {\n\n  constructor(private http: HttpClient){\n  }\n\n  get(id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/dealer/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  list(offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/dealer/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        limit: limit,\n        offset: offset,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  create(dealer){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/dealer/create\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      // let params  = {\n      //   limit: limit,\n      //   offset: offset,\n      // };\n      this.http.post(apiURL,dealer,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  edit(dealer){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/dealer/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      // let params  = {\n      //   limit: limit,\n      //   offset: offset,\n      // };\n      this.http.post(apiURL,dealer,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  ///Extend\n  notificationList(dealer_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/notification/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  notificationEdit(notification){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/notification/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,notification,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n}\n","module.exports = \"<div *ngIf=\\\"role.service_agent\\\" >\\n  <app-header_n ></app-header_n>\\n  <app-footer></app-footer>\\n</div>\\n<app-header *ngIf=\\\"!role.service_agent\\\"></app-header>\\n<div *ngIf=\\\"!role.service_agent\\\" class=\\\"uk-container\\\" >\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'Menu'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n      <div class=\\\"uk-navbar-item\\\">\\n          <button (click)=\\\"changeLang()\\\" class=\\\"uk-button uk-button-link\\\">{{ changemessage }}</button>\\n      </div>\\n    </div>\\n  </nav>\\n  <div class=\\\"uk-child-width-1-4@l uk-child-width-1-3@m uk-child-width-1-2@s\\\" uk-grid>\\n    <div *ngIf=\\\"role.admin\\\" >\\n        <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"dealerManagement()\\\">{{'dealer'|translate}} {{'management'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.admin\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"beaconManagement()\\\">{{'beacon'|translate}} {{'management'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.supervisor\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"carManagement()\\\">{{'car'|translate}} {{'management'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.supervisor\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"beaconManagement()\\\">{{'beacon'|translate}} {{'management'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.supervisor\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"userManagement()\\\">{{'user'|translate}} {{'management'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.supervisor\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"dashboard()\\\">{{'dashboard'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.analyst\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"exportData()\\\">{{'export'|translate}} {{'data'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.technician\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"dashboard()\\\">{{'dashboard'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.technician\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"carManagement()\\\">{{'car'|translate}} {{'management'|translate}}</button>\\n    </div>\\n\\n    <!-- <div *ngIf=\\\"role.service_agent\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"carManagement()\\\">{{'car'|translate}} {{'management'|translate}}</button>\\n    </div>\\n    <div *ngIf=\\\"role.service_agent\\\" >\\n      <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"dashboard()\\\">{{'dashboard'|translate}}</button>\\n    </div> -->\\n\\n    <div>\\n        <button class=\\\"uk-button uk-button-default uk-button-large uk-border-rounded uk-width-1-1 uk-margin-small-bottom uk-text-center\\\" (click)=\\\"profileManagement()\\\">{{'profile'|translate}} {{'management'|translate}}</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  dealerId = '';\n  language = this.translate.currentLang;\n  nextlang = '';\n  changemessage = '';\n \n  changeLang() {\n    this.translate.use(this.nextlang);\n    this.language = this.nextlang;\n    this.langmassage();\n  }\n     \n  langmassage(){\n    if(this.language == 'en'){\n      this.nextlang = 'zh';\n      this.changemessage='切换为中文';\n    }else{\n      this.nextlang = 'en';\n      this.changemessage='Show in English';\n    }\n  }\n  \n  role = {\n    admin: false,\n    supervisor: false,\n    technician: false,\n    analyst: false,\n  }\n\n  constructor(private router:Router, public translate: TranslateService) { }\n\n  ngOnInit() {\n    \n    this.dealerId = localStorage.getItem('dealerId');\n    let userType = localStorage.getItem('userType');\n    this.role[userType] = true;\n    console.log(this.role);\n    this.langmassage();\n  }\n\n  dealerManagement(){\n    this.router.navigate(['dealer', 'list']);\n  }\n\n  userManagement(){\n    this.router.navigate(['user', 'list', this.dealerId]);\n  }\n\n  dashboard(){\n    this.router.navigate(['dashboard', 'car', this.dealerId]);\n  }\n\n  exportData(){\n    this.router.navigate(['data', 'export', this.dealerId]);\n  }\n  \n  beaconManagement(){\n    this.router.navigate(['beacon', 'list', this.dealerId]);\n  }\n\n  carManagement(){\n    this.router.navigate(['car', 'list', this.dealerId]);\n  }\n\n  profileManagement(){\n    this.router.navigate(['profile', 'edit']);\n  }\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'blenode'|translate}} {{'configuration'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n    </div>\\n  </nav>\\n\\n  <fieldset class=\\\"uk-fieldset uk-background-muted uk-padding-small\\\">\\n\\t<div class=\\\"uk-margin\\\">\\n        <input class=\\\"uk-input\\\" type=\\\"text\\\" placeholder=\\\"*{{'dev'|translate}} {{'eui'|translate}}\\\" [(ngModel)]=\\\"node.dev_eui\\\">\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <input class=\\\"uk-input\\\" type=\\\"text\\\" placeholder=\\\"*{{'blenode'|translate}} {{'name'|translate}}\\\" [(ngModel)]=\\\"node.name\\\">\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n          <select class=\\\"uk-select\\\" id=\\\"form-stacked-select\\\" [(ngModel)]=\\\"node.station_id\\\">\\n            <option value=\\\"0\\\" selected>*{{'please Select Station' |translate}}</option>\\n            <option value=\\\"{{station.id}}\\\" *ngFor=\\\"let station of stations\\\">{{station.name}}</option>\\n          </select>\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <button class=\\\"uk-button uk-button-primary uk-border-rounded\\\" (click)=\\\"addNode()\\\">{{'add'|translate}} {{'node'|translate}}</button>\\n\\t</div>\\n  </fieldset>\\n\\n  <div class=\\\"uk-card uk-card-default uk-margin\\\" style=\\\"border:1px solid #ddd;\\\"  *ngFor=\\\"let node of nodes; let i = index\\\">\\n    <div class=\\\"uk-card-header uk-background-muted\\\">\\n\\t\\t<div class=\\\"uk-width-expand\\\">\\n\\t\\t\\t<h3 class=\\\"uk-card-title uk-margin-remove-bottom\\\">{{node.name}}\\n\\t\\t\\t\\t<span class=\\\"uk-label\\\">{{node.station.name}}</span>\\n\\t\\t\\t</h3>\\n\\t\\t\\t<p class=\\\"uk-text-meta uk-margin-remove-top\\\">{{'id' |translate}}:  {{node.id}}</p>\\n\\t\\t\\t<p>{{'dev'|translate}} {{'eui'|translate}}:  {{node.dev_eui}}</p>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"uk-card-footer\\\">\\n        <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded\\\" (click)=\\\"editNode(node.id)\\\">{{'edit'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded uk-margin-left\\\" (click)=\\\"deleteNode(node.id, node.name)\\\">{{'delete'|translate}}</button>\\n\\t</div>\\n  </div>  \\n\\n<div class=\\\" uk-margin\\\">\\n  <ul class=\\\"uk-pagination uk-flex-center\\\" uk-margin>\\n    <li *ngIf=\\\"pageController.pageIndex != 1\\\">\\n      <a (click)=\\\"changePageonClick(false,-1)\\\">\\n        <span uk-pagination-previous></span>\\n      </a>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex > 4\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngFor=\\\"let index of pageController.pageArray\\\" [class.uk-active]=\\\"index==pageController.pageIndex\\\">\\n      <a (click)=\\\"changePageonClick(true,index)\\\">{{index}}</a>\\n    </li>\\n    <!-- <li class=\\\"uk-active\\\"><span>4</span></li> -->\\n    <li *ngIf=\\\"pageController.pageNumber - pageController.pageIndex > 3\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex != pageController.pageNumber\\\">\\n      <a (click)=\\\"changePageonClick(false,1)\\\">\\n        <span uk-pagination-next></span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport { NodeService } from '../services/node.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-node-config',\n  templateUrl: './node-config.component.html',\n  styleUrls: ['./node-config.component.scss']\n})\nexport class NodeConfigComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n  devEUI = '';\n  nodeName = '';\n  stations = [];\n\n  pageController = {\n    itemPerPage: 10,\n    itemNumber: 0,\n    pageNumber: 0,\n    pageIndex: 1,\n    pageArray: [],\n  };\n  \n  nodes = [];\n\n  node = {\n    \"name\":'',\n    \"dev_eui\":'',\n    \"station_id\": 0,\n  };\n\n  confirmModal = {\n    elementId:\"node-config-confirm-modal\",\n    detail:\"\",\n    state:\"\",\n  }\n  \n//mockup\ndeleteIndex=0;\n//mockup\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private nodeService: NodeService, private translate: TranslateService) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadNode();\n  }\n\n  loadNode(){\n    this.loading = true;\n    this.nodeService.list(this.dealerId, (this.pageController.pageIndex - 1) * this.pageController.itemPerPage, this.pageController.itemPerPage).then((res:any)=>{\n      this.pageController.itemNumber = res.data.count;\n      this.pageController.pageNumber = Math.ceil(this.pageController.itemNumber / this.pageController.itemPerPage);\n      this.pageController.pageArray = [];\n\n      ///make pagination\n      this.pageController.pageArray.push(this.pageController.pageIndex);\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex - count - 1 > 0 ){\n          this.pageController.pageArray.unshift(this.pageController.pageIndex - count - 1);\n        }\n      }\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex + count < this.pageController.pageNumber){\n          this.pageController.pageArray.push(this.pageController.pageIndex + count + 1);\n        }\n      }\n      this.nodes = res.data.blenode;\n\n      this.nodeService.allStation(this.dealerId).then((res:any)=>{\n        this.stations = res.data.station;\n        this.loading = false;\n      }).catch((err:any)=>{\n        this.loading = false;\n      });\n    }).catch((err:any)=>{\n      this.loading = false;\n    });\n  }\n\n  changePageonClick(option, index){\n    if(option){\n      this.pageController.pageIndex = index;\n    }else{\n      this.pageController.pageIndex += index;\n    }\n    this.loadNode();\n  }\n\n  addNode(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(this.node.dev_eui !='' && this.node.name !='' && this.node.station_id != 0){\n      this.confirmModal.detail=this.translate.instant(\"Do you confirm to add\")+\" \"+this.node.name +\" \"+this.translate.instant(\"blenode\")+\"?\";\n      this.confirmModal.state=\"add\";\n      UIkit.modal(_elementId).show();\n    } else {\n      if(this.node.dev_eui ==''){\n        UIkit.notification({\n          message: this.translate.instant('devEUI cannot emtry!!!'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n      if(this.node.name ==''){\n        UIkit.notification({\n          message: this.translate.instant('Node name cannot emtry!!!'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n      if(this.node.station_id == 0){\n        UIkit.notification({\n          message: this.translate.instant('Please select station'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n    }\n  }\n\n  editNode(nodeId){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['node', 'edit', this.dealerId, nodeId]);\n  }\n\n  deleteNode(index, name){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    this.deleteIndex = index;\n    this.confirmModal.detail=this.translate.instant(\"Do you confirm to delete\")+\" \"+name+\" \"+this.translate.instant(\"blenode\")+\"?\";\n    this.confirmModal.state=\"delete\";\n    UIkit.modal(_elementId).show();\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.loading = true;\n      if(this.confirmModal.state == \"add\"){\n        this.nodeService.create(this.dealerId, this.node).then((res:any)=>{\n          this.node.dev_eui ='';\n          this.node.name ='';\n          this.node.station_id = 0;\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          this.loadNode();\n        }).catch((err:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          UIkit.notification({\n            message: err,\n            status: 'warning',\n            timeout: 1000\n          });\n        })\n      }else if(this.confirmModal.state == \"delete\"){\n        this.nodeService.delete(this.deleteIndex).then((res:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          this.loadNode();\n        }).catch((err:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading = false;\n          UIkit.notification({\n            message: err,\n            status: 'warning',\n            timeout: 1000\n          });\n        })\n        UIkit.modal(_elementId).hide();\n        this.loading = false;\n      }\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n  onHeaderClick(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event == 'back'){\n      UIkit.modal(_elementId).$destroy(true);\n      this.router.navigate(['dealer', 'information', this.dealerId]);\n    }\n  }\n\n}\n","module.exports = \"<app-header></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n      <a class=\\\"uk-navbar-item uk-logo\\\">{{'blenode'|translate}} {{'edit'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n    </div>\\n  </nav>\\n  <form class=\\\"uk-form-stacked\\\">\\n    <div class=\\\"uk-margin\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"deveui\\\">*{{'dev'|translate}}{{'eui'|translate}}</label>\\n      <div class=\\\"uk-form-controls\\\">\\n        <input class=\\\"uk-input\\\" name=\\\"deveui\\\" id=\\\"deveui\\\" type=\\\"text\\\" [(ngModel)]=\\\"node.dev_eui\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"uk-margin\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"name\\\">*{{'blenode'|translate}} {{'name'|translate}}</label>\\n      <div class=\\\"uk-form-controls\\\">\\n        <input class=\\\"uk-input\\\" name=\\\"name\\\" id=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"node.name\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"uk-margin\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"station\\\">*{{'station'|translate}}</label>\\n      <div class=\\\"uk-form-controls\\\">\\n\\n        <select class=\\\"uk-select\\\" id=\\\"station\\\" name=\\\"station\\\" [(ngModel)]=\\\"node.station_id\\\" >\\n            <option value=\\\"{{station.id}}\\\" *ngFor=\\\"let station of stations\\\">{{station.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n  </form>\\n  <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n    <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"editStation()\\\">{{'edit'|translate}}</button>\\n    <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelStation()\\\">{{'cancel'|translate}}</button>\\n  </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NodeService } from '../services/node.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-node-edit',\n  templateUrl: './node-edit.component.html',\n  styleUrls: ['./node-edit.component.scss']\n})\nexport class NodeEditComponent implements OnInit {\n\n  dealerId = '';\n  nodeId = '';\n  loading = false;\n\n  confirmModal = {\n    elementId:\"node-edit-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to update BLENode?\"),\n    state:\"\",\n  }\n\n  node = {\n    dev_eui: '',\n    name: '',\n    station_id: '',\n  }\n\n  stations = [];\n\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private nodeService: NodeService, private translate: TranslateService) { \n    this.nodeId = activeRoute.snapshot.params['nodeId'];\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadStation();\n  }\n\n  loadStation(){\n    this.loading=true;\n    this.nodeService.get(this.nodeId).then((res:any)=>{\n      this.nodeService.allStation(this.dealerId).then((res:any)=>{\n        this.stations = res.data.station;\n        this.loading=false;\n      }).catch((err:any)=>{\n        UIkit.notification({\n          message: err,\n          status: 'warning',\n          timeout: 1000\n        })\n        this.loading=false;\n      })\n      this.node = res.data.blenode;\n    }).catch((err:any)=>{\n      this.loading=false;\n      UIkit.notification({\n        message: err,\n        status: 'warning',\n        timeout: 1000\n      })\n    })\n  }\n\n  editStation(){\n    if(this.node.dev_eui == \"\"){\n      UIkit.notification({\n        message: this.translate.instant(\"Dev EUI cannot emptry\"),\n        status: 'warning',\n        timeout: 1000\n      })\n      return;\n    }\n    if(this.node.name == \"\"){\n      UIkit.notification({\n        message: this.translate.instant(\"Name cannot emptry\"),\n        status: 'warning',\n        timeout: 1000\n      })\n      return;\n    }\n    this.node.dev_eui = this.node.dev_eui.toUpperCase();\n\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).show();\n  }\n\n  cancelStation(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['node', 'config', this.dealerId]);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.loading=true;\n      this.nodeService.edit(this.node, this.dealerId).then((res:any)=>{\n        this.loading=false;\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.router.navigate(['node', 'config', this.dealerId]);\n      }).catch((err:any)=>{\n        UIkit.modal(_elementId).hide();\n        this.loading=false;\n        UIkit.notification({\n          message: err,\n          status: 'warning',\n          timeout: 1000\n        })\n      })\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodeService {\n\n  constructor(private http: HttpClient){\n  }\n\n  get(id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/blenode/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  list(dealer_id,offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/blenode/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        limit: limit,\n        offset: offset,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  create(dealer_id, blenode){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/blenode/create\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        name: blenode.name,\n        dev_eui: blenode.dev_eui,\n        station_id: blenode.station_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  edit(blenode, dealer_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/blenode/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: blenode.id,\n        name: blenode.name,\n        station_id: blenode.station_id,\n        dealer_id: dealer_id,\n        dev_eui: blenode.dev_eui,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  delete(node_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/blenode/delete\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: node_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  /// Extend\n  allStation(dealer_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/station/all\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n}\n","module.exports = \"<div class=\\\"uk-container uk-block-wrap\\\"  style=\\\"padding-top:1.5em;\\\"  >\\r\\n  <div style=\\\"width:100%;\\\" class=\\\"uk-padding-small\\\"></div>\\r\\n  <div class=\\\"uk-margin-large-bottom\\\" uk-grid>\\r\\n    <div class=\\\"uk-width-4-5 uk-text-large uk-text-emphasis\\\">\\r\\n        {{'profile'|translate}} {{'management'|translate}}\\r\\n        \\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"uk-width-1-5 uk-width-padding uk-text-center uk-text-middle en uk-text-primary language\\\"\\r\\n    >\\r\\n    <span (click)=\\\"changeLang()\\\">EN</span><span style=\\\"padding-left:3px;padding-right:3px;\\\">|</span><span (click)=\\\"changeLang()\\\">中</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"uk-margin-top\\\">&nbsp;</div>\\r\\n  <div\\r\\n    class=\\\"uk-card uk-card-default uk-card-body uk-width-1-2@m uk-margin-top uk-margin-remove-top middleBg\\\"\\r\\n  >\\r\\n  <div class=\\\"uk-margin-top\\\">&nbsp;</div>\\r\\n    <div uk-grid>\\r\\n      <div class=\\\"uk-width-1-2 uk-text-emphasis\\\">{{'username'|translate}}</div>\\r\\n      <div class=\\\"uk-width-1-2 uk-padding-remove\\\">\\r\\n        <input\\r\\n          class=\\\"uk-search-input uk-text-emphasis pad4\\\" style=\\\"background-color:#fff;\\\"\\r\\n     type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\"  [(ngModel)]=\\\"user.username\\\" disabled\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n    <div uk-grid class=\\\"uk-margin-large-bottom\\\">\\r\\n      <div class=\\\"uk-width-1-2 uk-text-emphasis\\\">{{'position'|translate}}</div>\\r\\n      <div class=\\\"uk-width-1-2 uk-padding-remove\\\">\\r\\n        <input\\r\\n          class=\\\"uk-search-input uk-text-emphasis pad4\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [(ngModel)]=\\\"user.user_role_name\\\" disabled  style=\\\"background-color:#fff;\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"uk-margin-top\\\">&nbsp;</div>\\r\\n    <div class=\\\"uk-container uk-text-center uk-margin-top\\\">\\r\\n      <button class=\\\"uk-button uk-button-primary uk-width-4-5 uk-margin-top   btn-bg\\\" (click)=\\\"pwdprofile()\\\">{{'password'|translate}}\\r\\n      </button>\\r\\n      <button class=\\\"uk-button uk-button-primary uk-width-4-5 uk-margin-top btn-bg\\\" (click)=\\\"logout()\\\">\\r\\n        {{'logout'|translate}}\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"uk-margin-large-bottom\\\">&nbsp;</div>\\r\\n  <!-- <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\r\\n    <div class=\\\"uk-navbar-left\\\">\\r\\n      <a class=\\\"uk-navbar-item uk-logo\\\"\\r\\n        >{{ \\\"car\\\" | translate }} {{ \\\"management\\\" | translate }}</a\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"uk-navbar-right\\\">\\r\\n      <button\\r\\n        class=\\\"uk-button uk-button-small uk-button-primary uk-border-rounded\\\"\\r\\n        (click)=\\\"registerCar()\\\"\\r\\n      >\\r\\n        {{ \\\"register\\\" | translate }} {{ \\\"car\\\" | translate }}\\r\\n      </button>\\r\\n    </div>\\r\\n  </nav> -->\\r\\n  <!-- <div class=\\\"uk-container\\\"> -->\\r\\n  <!-- <div uk-grid>\\r\\n    <div class=\\\"uk-width-3-4 uk-text-large\\\">Profile Management</div>\\r\\n    <div class=\\\"uk-width-1-4\\\">\\r\\n        <span>En|中</span>\\r\\n    </div>\\r\\n  </div> -->\\r\\n  <!-- <div class=\\\"uk-flex ul-flex-new uk-flex-wrap-space-between\\\">\\r\\n    <div class=\\\"left uk-text-large\\\">Profile Management</div>\\r\\n    <div class=\\\"right uk-flex-right uk-text-small\\\">En|中</div>\\r\\n  </div>\\r\\n  <div class=\\\"uk-card uk-card-default uk-card-large uk-card-body\\\">sefsd</div> -->\\r\\n  <!-- </div> -->\\r\\n  <!-- \\r\\nprofile manager 切片代码\\r\\n<app-header>\\r\\n  </app-header>\\r\\n  <div class=\\\"uk-container\\\">\\r\\n      <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\r\\n          <div class=\\\"uk-navbar-left\\\">\\r\\n              <a class=\\\"uk-navbar-item uk-logo\\\">{{'profile'|translate}} {{'edit'|translate}}</a>\\r\\n          </div>\\r\\n          <div class=\\\"uk-navbar-right\\\">\\r\\n          </div>\\r\\n      </nav>\\r\\n      <form class=\\\"uk-form-stacked\\\">\\r\\n          <div class=\\\"uk-margin\\\">\\r\\n              <label class=\\\"uk-form-label\\\" for=\\\"username\\\">*{{'username'|translate}}</label>\\r\\n              <div class=\\\"uk-form-controls\\\">\\r\\n                  <input class=\\\"uk-input\\\" name=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" disabled>\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n          \\r\\n          <div class=\\\"uk-margin\\\">\\r\\n              <label class=\\\"uk-form-label\\\" for=\\\"position\\\">*{{'position'|translate}}</label>\\r\\n              <div class=\\\"uk-form-controls\\\">\\r\\n                  <select class=\\\"uk-select\\\" id=\\\"position\\\" name=\\\"position\\\" [(ngModel)]=\\\"user.user_role_id\\\" disabled>\\r\\n                      <option value=\\\"admin\\\">Admin</option>\\r\\n                      <option value=\\\"supervisor\\\">Supervisor</option>\\r\\n                      <option value=\\\"analyst\\\">Analyst</option>\\r\\n                      <option value=\\\"technician\\\">Technician</option>\\r\\n                  </select>\\r\\n              </div>\\r\\n          </div>\\r\\n           \\r\\n      </form>\\r\\n      <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\r\\n          <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"pwdprofile()\\\">{{'password'|translate}}</button>\\r\\n          <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"logout()\\\">{{'logout'|translate}}</button>\\r\\n      </div>\\r\\n  </div>\\r\\n   -->\\r\\n  <app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\r\\n \\r\\n  <div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n      <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n  </div> \\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","module.exports = \".uk-block-wrap {\\n  width: 100%;\\n  height: 100%;\\n  background: #f2f2f3;\\n  box-sizing: border-box;\\n  padding-top: 16px !important; }\\n\\n.uk-width-padding {\\n  padding: 0; }\\n\\n.en {\\n  line-height: 36px;\\n  background: #fff; }\\n\\n.middleBg {\\n  box-shadow: 0 0 30px 0 rgba(0, 0, 0, 0.15);\\n  border-radius: 6px;\\n  background: #f5f5f5; }\\n\\n.btn-bg {\\n  background: #405AB2;\\n  border-radius: 6px; }\\n\\n.pad4 {\\n  padding-left: 4px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\r\nimport { AuthenService } from '../../../services/authen/authen.service';\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-profile-edit',\r\n  templateUrl: './profile-edit.component.html',\r\n  styleUrls: ['./profile-edit.component.scss']\r\n})\r\nexport class ProfileEditComponent implements OnInit {\r\n\r\n  loading = false;\r\n  userId = '';\r\n  confirmModal = {\r\n    elementId:\"profile-edit-confirm-modal\",\r\n    detail:this.translate.instant(\"Do you confirm to update Profile?\"),\r\n    state:\"\",\r\n  }\r\n\r\n  user = {\r\n    id: '',\r\n    username: '',\r\n    fullname: '',\r\n    password: '',\r\n    passwordReply: '',\r\n    position: '',\r\n    email: '',\r\n    user_role_id:'',\r\n    tel: '',\r\n    user_role_name:\"\"\r\n  }\r\n  language = this.translate.currentLang;\r\n  nextlang = '';\r\n  changemessage = '';\r\n \r\n  changeLang() {\r\n   \r\n    this.translate.use(this.nextlang);\r\n    this.language = this.nextlang;\r\n    console.log('fb:'+this.nextlang);\r\n     this.langmassage();\r\n     console.log('fb:'+this.nextlang);\r\n  }\r\n  langmassage(){\r\n    if(this.language == 'en'){\r\n      this.nextlang = 'zh';\r\n    }else{\r\n      this.nextlang = 'en';\r\n    }\r\n  } \r\n  \r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private profileService: ProfileService, private translate: TranslateService, private auth : AuthenService) { \r\n  \r\n    this.userId = localStorage.getItem('userId');\r\n    this.langmassage();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadProfile();\r\n  }\r\n\r\n  loadProfile(){\r\n    this.profileService.get(this.userId).then((res:any)=>{\r\n      this.user = res.data.user;\r\n      \r\n      switch(this.user.user_role_id){\r\n           case 'admin':\r\n            this.user.user_role_name=\"Admin\";\r\n           break;\r\n           case 'supervisor':\r\n           this.user.user_role_name=\"Supervisor\";\r\n          break;\r\n          case 'analyst':\r\n          this.user.user_role_name=\"Analyst\";\r\n         break;\r\n         case 'technician':\r\n         this.user.user_role_name=\"Technician\";\r\n        break;\r\n        case 'service_agent':\r\n        this.user.user_role_name=\"ServiceAgent\";\r\n       break;\r\n      }\r\n      console.log(this.user);\r\n    }).catch((err:any)=>{\r\n      UIkit.notification({\r\n        message: this.translate.instant('Cannot load Profile'),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      })\r\n    })\r\n  }\r\n\r\n  pwdprofile(){\r\n    this.router.navigate(['profile', 'pwd']);\r\n  }\r\n  logout(){\r\n    this.auth.userLogout().then((res:any)=>{\r\n      this.router.navigate(['login']);\r\n      //window.location.href = window.location.protocol+\"//\"+window.location.hostname+\":\"+window.location.port+\"/tracking/#/login\";\r\n    }).catch(err=>{\r\n      this.router.navigate(['login']);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<!-- profile-pwd 密码设置切片代码 -->\\r\\n<!-- <app-header>\\r\\n  </app-header> -->\\r\\n<div class=\\\"uk-container register-wrap\\\" style=\\\"padding-top:1.5em;\\\"   >\\r\\n  <!-- <div style=\\\"width:100%;\\\" class=\\\"uk-padding\\\"></div> -->\\r\\n  <div class=\\\"uk-padding-small uk-padding-remove-left uk-padding-remove-right\\\" uk-grid>\\r\\n    <div class=\\\"uk-width-1-3 uk-text-left uk-text-emphasis\\\" (click)=\\\"cancelProfile()\\\">{{'cancel'|translate}}</div>\\r\\n    <!-- <div class=\\\"uk-width-1-4\\\"></div> -->\\r\\n    <div class=\\\"uk-width-1-3\\\"></div>\\r\\n    <div class=\\\"uk-width-1-3 uk-text-center\\\">\\r\\n      <button class=\\\"uk-button-primary save-btn\\\" (click)=\\\"editProfile()\\\">{{'save'|translate}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"uk-width-1-1 register-padding uk-text-emphasis uk-margin-small-top uk-text-large\\\">\\r\\n    {{'Set Password'|translate}}\\r\\n  </div>\\r\\n  <div class=\\\"uk-margin-top\\\"></div>\\r\\n  <div class=\\\"uk-card uk-card-default uk-card-body uk-width-1-2@m middleBg\\\">\\r\\n    <div class=\\\"uk-margin-top\\\">&nbsp;</div>\\r\\n    <div uk-grid>\\r\\n      <div class=\\\"uk-width-1-2 uk-text-emphasis left\\\" for=\\\"username\\\">*{{'username'|translate}}</div>\\r\\n      <div class=\\\"uk-width-1-2 uk-padding-remove\\\">\\r\\n        <input class=\\\"uk-search-input uk-text-emphasis pad4\\\" style=\\\"background-color:#fff;\\\" type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\"\\r\\n          [(ngModel)]=\\\"user.username\\\" disabled />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div uk-grid class=\\\"uk-margin-large-bottom\\\">\\r\\n      <div class=\\\"uk-width-1-2 uk-text-emphasis left\\\" for=\\\"password\\\">{{'new'|translate}} {{'password'|translate}}</div>\\r\\n      <div class=\\\"uk-width-1-2 uk-padding-remove\\\">\\r\\n        <input class=\\\"uk-search-input uk-text-emphasis pad4\\\" type=\\\"text\\\" name=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"user.password\\\" placeholder=\\\"{{'new'|translate}} {{'password'|translate}}\\\">\\r\\n          \\r\\n      </div>\\r\\n    </div>\\r\\n    <div uk-grid class=\\\"uk-margin-large-bottom\\\">\\r\\n      <div class=\\\"uk-width-1-2 uk-text-emphasis left\\\">*{{'Confirm'|translate}}</div>\\r\\n      <div class=\\\"uk-width-1-2 uk-padding-remove\\\">\\r\\n        <input class=\\\"uk-search-input uk-text-emphasis pad4\\\" type=\\\"text\\\" name=\\\"password-reply\\\" id=\\\"password-reply\\\" type=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"user.passwordReply\\\"  placeholder=\\\"{{'reply'|translate}}  {{'password'|translate}}\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"uk-margin-top\\\">&nbsp;</div>\\r\\n    <div class=\\\"uk-margin-top\\\">&nbsp;</div>\\r\\n    <div class=\\\"uk-margin-top\\\">&nbsp;</div>\\r\\n  </div>\\r\\n  <!-- <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\r\\n          <div class=\\\"uk-navbar-left\\\">\\r\\n              <a class=\\\"uk-navbar-item uk-logo\\\">{{'profile'|translate}} {{'edit'|translate}}</a>\\r\\n          </div>\\r\\n          <div class=\\\"uk-navbar-right\\\">\\r\\n          </div>\\r\\n      </nav>\\r\\n      <form class=\\\"uk-form-stacked\\\">\\r\\n          <div class=\\\"uk-margin\\\">\\r\\n              <label class=\\\"uk-form-label\\\" for=\\\"username\\\">*{{'username'|translate}}</label>\\r\\n              <div class=\\\"uk-form-controls\\\">\\r\\n                  <input class=\\\"uk-input\\\" name=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" disabled>\\r\\n              </div>\\r\\n          </div>\\r\\n \\r\\n          <div class=\\\"uk-margin\\\">\\r\\n              <label class=\\\"uk-form-label\\\" for=\\\"position\\\">*{{'position'|translate}}</label>\\r\\n              <div class=\\\"uk-form-controls\\\">\\r\\n                  <select class=\\\"uk-select\\\"  id=\\\"position\\\" name=\\\"position\\\" [(ngModel)]=\\\"user.user_role_id\\\" disabled>\\r\\n                      <option value=\\\"admin\\\">Admin</option>\\r\\n                      <option value=\\\"supervisor\\\">Supervisor</option>\\r\\n                      <option value=\\\"analyst\\\">Analyst</option>\\r\\n                      <option value=\\\"technician\\\">Technician</option>\\r\\n                  </select>\\r\\n              </div>\\r\\n          </div>\\r\\n          \\r\\n          <hr>\\r\\n          <div class=\\\"uk-margin\\\">\\r\\n            <label class=\\\"uk-form-label\\\" for=\\\"password\\\">{{'new'|translate}} {{'password'|translate}}</label>\\r\\n            <div class=\\\"uk-form-controls\\\">\\r\\n                <input class=\\\"uk-input\\\" name=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"uk-margin\\\">\\r\\n            <label class=\\\"uk-form-label\\\" for=\\\"password-reply\\\"> {{'reply'|translate}} {{'new'|translate}} {{'password'|translate}}</label>\\r\\n            <div class=\\\"uk-form-controls\\\">\\r\\n                <input class=\\\"uk-input\\\" name=\\\"password-reply\\\" id=\\\"password-reply\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.passwordReply\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\r\\n          <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"editProfile()\\\">{{'edit'|translate}}</button>\\r\\n          <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelProfile()\\\">{{'cancel'|translate}}</button>\\r\\n      </div> -->\\r\\n</div>\\r\\n\\r\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\r\\n\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\r\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\r\\n</div>\\r\\n\"","module.exports = \".register-wrap {\\n  min-height: 100%;\\n  background: #f2f2f3;\\n  padding-top: 0 !important; }\\n\\n.save-btn {\\n  width: 80%;\\n  height: 100%;\\n  background: #405ab2;\\n  border-radius: 6px; }\\n\\n.uk-width-padding {\\n  padding: 0; }\\n\\n.en {\\n  line-height: 36px;\\n  background: #fff; }\\n\\n.middleBg {\\n  box-shadow: 0 0 30px 0 rgba(0, 0, 0, 0.15);\\n  border-radius: 6px;\\n  background: #f5f5f5; }\\n\\n.pad4 {\\n  padding-left: 4px; }\\n\\n@media screen and (max-width: 320px) {\\n  .middleBg {\\n    padding: 15px !important; }\\n  .middleBg .left {\\n    padding-left: 24px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-profile-pwd',\r\n  templateUrl: './profile-pwd.component.html',\r\n  styleUrls: ['./profile-pwd.component.scss']\r\n})\r\nexport class ProfilePwdComponent implements OnInit {\r\n\r\n  loading = false;\r\n  userId = '';\r\n  confirmModal = {\r\n    elementId:\"profile-pwd-confirm-modal\",\r\n    detail:this.translate.instant(\"Do you confirm to update Profile?\"),\r\n    state:\"\",\r\n  }\r\n\r\n  user = {\r\n    id: '',\r\n    username: '',\r\n    fullname: '',\r\n    password: '',\r\n    passwordReply: '',\r\n    position: '',\r\n    email: '',\r\n    user_role_id:'',\r\n    tel: '',\r\n  }\r\n\r\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private profileService: ProfileService, private translate: TranslateService) { \r\n  \r\n    this.userId = localStorage.getItem('userId');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadProfile();\r\n  }\r\n\r\n  loadProfile(){\r\n    this.profileService.get(this.userId).then((res:any)=>{\r\n      this.user = res.data.user;\r\n    }).catch((err:any)=>{\r\n      UIkit.notification({\r\n        message: this.translate.instant('Cannot load Profile'),\r\n        status: 'warning',\r\n        timeout: 1000\r\n      })\r\n    })\r\n  }\r\n\r\n  editProfile(){    \r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(this.user.password == \"\"){\r\n      UIkit.modal(_elementId).show();\r\n    }else{\r\n      if(this.user.password == this.user.passwordReply){\r\n        UIkit.modal(_elementId).show();\r\n      }else{\r\n        UIkit.notification({\r\n          message: this.translate.instant('password and re-password not match'),\r\n          status: 'warning',\r\n          timeout: 1000\r\n        })\r\n      }\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  cancelProfile(){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    UIkit.modal(_elementId).$destroy(true);\r\n    this.router.navigate(['profile', 'edit']);// this.router.navigate(['menu']);\r\n  }\r\n\r\n  onClickConfirmModal(event){\r\n    let _elementId = \"#\"+this.confirmModal.elementId;\r\n    if(event){\r\n      this.loading=true;\r\n      this.profileService.edit(this.user).then((res:any)=>{\r\n        this.loading=false;\r\n        UIkit.util.on(_elementId, 'hidden', function () {\r\n          UIkit.modal(_elementId).$destroy(true);\r\n        });\r\n        UIkit.modal(_elementId).hide();\r\n      //  this.router.navigate(['menu']);\r\n        this.router.navigate(['profile', 'edit']);\r\n      }).catch((err:any)=>{\r\n        UIkit.modal(_elementId).hide();\r\n        this.loading=false;\r\n        UIkit.notification({\r\n          message: this.translate.instant('Cannot edit Profile'),\r\n          status: 'warning',\r\n          timeout: 1000\r\n        })\r\n      })\r\n\r\n    }else{\r\n      UIkit.modal(_elementId).hide();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http: HttpClient){\n  }\n\n  get(id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n\n  edit(user){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      // let params  = {\n      //   limit: limit,\n      //   offset: offset,\n      // };\n      this.http.post(apiURL,user,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  ///Extend\n  notificationList(dealer_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/notification/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  notificationEdit(notification){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/notification/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,notification,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StationService {\n\n  constructor(private http: HttpClient){\n  }\n\n  get(id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/station/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  list(dealer_id,offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/station/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        limit: limit,\n        offset: offset,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  create(dealer_id, station){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/station/create\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        name: station.name,\n        detail: station.detail,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  edit(station){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/station/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: station.id,\n        name: station.name,\n        detail: station.detail,\n        dealer_id: station.dealer_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  delete(station_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/station/delete\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: station_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n      <a class=\\\"uk-navbar-item uk-logo\\\">{{'station'|translate}} {{'configuration'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n    </div>\\n  </nav>\\n\\n  <fieldset class=\\\"uk-fieldset uk-background-muted uk-padding-small\\\">\\n\\t<div class=\\\"uk-margin\\\">\\n        <input class=\\\"uk-input\\\" type=\\\"text\\\" placeholder=\\\"*{{'station'|translate}} {{'name'|translate}}\\\" [(ngModel)]=\\\"station.name\\\">\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <input class=\\\"uk-input\\\" type=\\\"text\\\" placeholder=\\\"{{'detail'|translate}}\\\" [(ngModel)]=\\\"station.detail\\\">\\n\\t</div>\\n\\t<div class=\\\"uk-margin\\\">\\n        <button class=\\\"uk-button uk-button-primary uk-border-rounded\\\" (click)=\\\"createStation()\\\">{{'create'|translate}} {{'station'|translate}}</button>\\n\\t</div>\\n  </fieldset>\\n\\n<div class=\\\"uk-card uk-card-default uk-margin\\\" style=\\\"border:1px solid #ddd;\\\" *ngFor=\\\"let station of stations; let i = index\\\">\\n    <div class=\\\"uk-card-header uk-background-muted\\\">\\n\\t\\t<div class=\\\"uk-width-expand\\\">\\n\\t\\t\\t<h3 class=\\\"uk-card-title uk-margin-remove-bottom\\\">{{station.name}}</h3>\\n\\t\\t\\t<p class=\\\"uk-text-meta uk-margin-remove-top\\\">{{'id' |translate}}: {{station.id}}</p>\\n\\t\\t\\t<p>{{'detail' |translate}}: {{station.detail}}</p>\\n\\t\\t\\t<p *ngFor=\\\"let node of station.nodes;\\\">\\n\\t\\t\\t\\t{{node}}\\n\\t\\t\\t</p>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"uk-card-footer\\\">\\n        <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded\\\" (click)=\\\"editStation(station.id)\\\">{{'edit'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded uk-margin-left\\\" (click)=\\\"deleteStation(station.id, station.name)\\\">{{'delete'|translate}}</button>\\n\\t</div>\\n</div>  \\n  \\n<div class=\\\" uk-margin\\\">\\n  <ul class=\\\"uk-pagination uk-flex-center\\\" uk-margin>\\n    <li *ngIf=\\\"pageController.pageIndex != 1\\\">\\n      <a (click)=\\\"changePageonClick(false,-1)\\\">\\n        <span uk-pagination-previous></span>\\n      </a>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex > 4\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngFor=\\\"let index of pageController.pageArray\\\" [class.uk-active]=\\\"index==pageController.pageIndex\\\">\\n      <a (click)=\\\"changePageonClick(true,index)\\\">{{index}}</a>\\n    </li>\\n    <!-- <li class=\\\"uk-active\\\"><span>4</span></li> -->\\n    <li *ngIf=\\\"pageController.pageNumber - pageController.pageIndex > 3\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex != pageController.pageNumber\\\">\\n      <a (click)=\\\"changePageonClick(false,1)\\\">\\n        <span uk-pagination-next></span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>  \\n\\n</div>\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<!-- <div id=\\\"modal-confirm\\\" uk-modal>\\n  <div class=\\\"uk-modal-dialog uk-modal-body\\\">\\n    <p>{{'save configuration'}}?</p>\\n    <p class=\\\"uk-text-right\\\">\\n      <button class=\\\"uk-button uk-button-primary uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"modalConfirm()\\\">{{'confirm'|translate}}</button>\\n      <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" type=\\\"button\\\" (click)=\\\"modalCancel()\\\">{{'cancel'|translate}}</button>\\n    </p>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n  <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport { StationService } from '../services/station.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-station-config',\n  templateUrl: './station-config.component.html',\n  styleUrls: ['./station-config.component.scss']\n})\nexport class StationConfigComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n\n  station = {\n    name:\"\",\n    detail:\"\",\n  }\n\n  pageController = {\n    itemPerPage: 10,\n    itemNumber: 0,\n    pageNumber: 0,\n    pageIndex: 1,\n    pageArray: [],\n  };\n\n  stations = [];\n\n  confirmModal = {\n    elementId:\"station-config-confirm-modal\",\n    detail:\"\",\n    state:\"\",\n  }\n\n  //mockup\n  deleteIndex = 0;\n  //moclup\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private stationService: StationService, private translate: TranslateService) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadStation();\n  }\n\n  loadStation(){\n    this.loading = true;\n    this.stationService.list(this.dealerId, (this.pageController.pageIndex - 1) * this.pageController.itemPerPage, this.pageController.itemPerPage).then((res:any)=>{\n      this.pageController.itemNumber = res.data.count;\n      this.pageController.pageNumber = Math.ceil(this.pageController.itemNumber / this.pageController.itemPerPage);\n      this.pageController.pageArray = [];\n\n      ///make pagination\n      this.pageController.pageArray.push(this.pageController.pageIndex);\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex - count - 1 > 0 ){\n          this.pageController.pageArray.unshift(this.pageController.pageIndex - count - 1);\n        }\n      }\n      for(let count = 0 ; count < 3 ; count++){\n        if(this.pageController.pageIndex + count < this.pageController.pageNumber){\n          this.pageController.pageArray.push(this.pageController.pageIndex + count + 1);\n        }\n      }\n      this.stations = res.data.station;\n      this.loading = false;\n    }).catch((err:any)=>{\n      this.loading = false;\n    });\n  }\n\n  changePageonClick(option, index){\n    if(option){\n      this.pageController.pageIndex = index;\n    }else{\n      this.pageController.pageIndex += index;\n    }\n    this.loadStation();\n  }\n\n  createStation(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(this.station.name !=''){\n      this.confirmModal.detail=this.translate.instant(\"Do you confirm to create\")+ \" \"+ this.station.name +\" \"+ this.translate.instant(\"station\") + \"?\";\n      this.confirmModal.state=\"create\";\n      UIkit.modal(_elementId).show();\n    } else {\n      UIkit.notification({\n        message: this.translate.instant('Station name cannot emtry!!!'),\n        status: 'warning',\n        timeout: 1000\n      });\n    }\n  }\n\n  editStation(stationId){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['station', 'edit', this.dealerId, stationId]);\n  }\n\n  deleteStation(id, name){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    this.deleteIndex = id;\n    this.confirmModal.detail=this.translate.instant(\"Do you confirm to delete\")+\" \"+ name +\" \"+this.translate.instant(\"station\")+\"?\";\n    this.confirmModal.state=\"delete\";\n    UIkit.modal(_elementId).show();\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      if(this.confirmModal.state == \"create\"){\n        this.loading=true;\n        this.stationService.create(this.dealerId, this.station).then((res:any)=>{\n          this.station.name ='';\n          this.station.detail ='';\n          UIkit.modal(_elementId).hide();\n          this.loading=false;\n          this.loadStation();\n        }).catch((err:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading=false;\n          UIkit.notification({\n            message: err,\n            status: 'warning',\n            timeout: 1000\n          })\n        })\n      }else if(this.confirmModal.state == \"delete\"){\n        this.loading=true;\n        this.stationService.delete(this.deleteIndex).then((res:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading=false;\n          this.loadStation();\n        }).catch((err:any)=>{\n          UIkit.modal(_elementId).hide();\n          this.loading=false;\n          UIkit.notification({\n            message: err,\n            status: 'warning',\n            timeout: 1000\n          })\n        })\n      }\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n  onHeaderClick(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event == 'back'){\n      UIkit.modal(_elementId).$destroy(true);\n      this.router.navigate(['dealer', 'information', this.dealerId]);\n    }\n  }\n\n}\n","module.exports = \"<app-header>\\n</app-header>\\n<div class=\\\"uk-container\\\">\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n        <div class=\\\"uk-navbar-left\\\">\\n            <a class=\\\"uk-navbar-item uk-logo\\\">{{'station'|translate}} {{'edit'|translate}}</a>\\n        </div>\\n        <div class=\\\"uk-navbar-right\\\">\\n        </div>\\n    </nav>\\n    <form class=\\\"uk-form-stacked\\\">\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"name\\\">*{{'station'|translate}} {{'name'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"station.name\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"detail\\\">*{{'detail'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"detail\\\" type=\\\"text\\\" [(ngModel)]=\\\"station.detail\\\">\\n            </div>\\n        </div>\\n    </form>\\n    <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"editStation()\\\">{{'edit'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelStation()\\\">{{'cancel'|translate}}</button>\\n    </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StationService } from '../services/station.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-station-edit',\n  templateUrl: './station-edit.component.html',\n  styleUrls: ['./station-edit.component.scss']\n})\nexport class StationEditComponent implements OnInit {\n\n  dealerId = '';\n  stationId = '';\n  loading = false;\n\n  confirmModal = {\n    elementId:\"station-edit-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to update Station?\"),\n    state:\"\",\n  };\n\n  station = {\n    name: '',\n    detail: '',\n  };\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private stationService: StationService, private translate: TranslateService) {\n    this.stationId = activeRoute.snapshot.params['stationId'];\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadStation();\n  }\n\n  loadStation(){\n    this.loading=true;\n    this.stationService.get(this.stationId).then((res:any)=>{\n      this.station = res.data.station;\n      this.loading=false;\n    }).catch((err:any)=>{\n      this.loading=false;\n      UIkit.notification({\n        message: this.translate.instant('Cannot load Station'),\n        status: 'warning',\n        timeout: 1000\n      })\n    })\n  }\n\n  editStation(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).show();\n  }\n\n  cancelStation(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['station', 'config', this.dealerId]);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.loading=true;\n      this.stationService.edit(this.station).then((res:any)=>{\n        UIkit.modal(_elementId).hide();\n        this.loading=false;\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.router.navigate(['station', 'config', this.dealerId]);\n      }).catch((err:any)=>{\n        UIkit.modal(_elementId).hide();\n        this.loading=false;\n        UIkit.notification({\n          message: this.translate.instant('Cannot edit station'),\n          status: 'warning',\n          timeout: 1000\n        })\n      })\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient){\n  }\n\n  get(id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        'id': id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  list(dealer_id,offset,limit){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/list\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        dealer_id: dealer_id,\n        limit: limit,\n        offset: offset,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  create(user){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/create\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,user,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  edit(user){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/edit\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,user,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  delete(station_id){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/delete\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        id: station_id,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  //Extend\n  roleList(){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/user/role\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n}\n","module.exports = \"<app-header>\\n</app-header>\\n<div class=\\\"uk-container\\\">\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n        <div class=\\\"uk-navbar-left\\\">\\n            <a class=\\\"uk-navbar-item uk-logo\\\">{{'user'|translate}} {{'create'|translate}}</a>\\n        </div>\\n        <div class=\\\"uk-navbar-right\\\">\\n        </div>\\n    </nav>\\n    <form class=\\\"uk-form-stacked\\\">\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"username\\\">*{{'username'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"password\\\">*{{'password'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\">\\n            </div>\\n        </div>\\n        <!-- <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"fullname\\\">{{'fullname'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"fullname\\\" id=\\\"fullname\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.fullname\\\">\\n            </div>\\n        </div> -->\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"position\\\">*{{'position'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <select class=\\\"uk-select\\\" id=\\\"position\\\" name=\\\"position\\\" [(ngModel)]=\\\"user.user_role_id\\\">\\n                    <option value=\\\"0\\\" selected>{{'Please select user role'|translate}}</option>\\n                    <option value=\\\"supervisor\\\">{{'Supervisor'|translate}}</option>\\n                    <option value=\\\"analyst\\\">{{'Analyst'|translate}}</option>\\n                    <option value=\\\"technician\\\">{{'Technician'|translate}}</option>\\n                </select>\\n            </div>\\n        </div>\\n        <!-- <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"email\\\">{{'email'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"tel\\\">{{'tel'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"tel\\\" id=\\\"tel\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.tel\\\">\\n            </div>\\n        </div> -->\\n    </form>\\n    <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"createUser()\\\">{{'create'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelUser()\\\">{{'cancel'|translate}}</button>\\n    </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n\n  user = {\n    username: '',\n    fullname: '',\n    password: '',\n    user_role_id: 0,\n    email: '',\n    tel: '',\n    dealer_id: '',\n  }\n\n  roles = [];\n\n  confirmModal = {\n    elementId:\"user-create-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to create new User?\"),\n    state:\"\",\n  }\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private userService: UserService, private translate: TranslateService) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n    this.user.dealer_id = this.dealerId;\n  }\n\n  ngOnInit() {\n    this.loadUser();\n  }\n\n  loadUser(){\n    this.loading = true;\n    this.userService.roleList().then((res:any)=>{\n      this.roles = res.data.role;\n      this.loading = false;\n    }).catch((err:any)=>{\n      UIkit.notification({\n        message: this.translate.instant('Cannot load user role'),\n        status: 'warning',\n        timeout: 1000\n      });\n      this.loading = false;\n    })\n  }\n\n  createUser(){\n    if(this.user.username != \"\" && this.user.password != \"\" && this.user.user_role_id != 0){\n      let _elementId = \"#\"+this.confirmModal.elementId;\n      UIkit.modal(_elementId).show();\n    } else {\n      if(this.user.username == \"\"){\n        UIkit.notification({\n          message: this.translate.instant('Username cannot empty!!!'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n      if(this.user.password == \"\"){\n        UIkit.notification({\n          message: this.translate.instant('Password cannot empty!!!'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n      if(this.user.user_role_id == 0){\n        UIkit.notification({\n          message: this.translate.instant('Please select position'),\n          status: 'warning',\n          timeout: 1000\n        });\n      }\n    }\n    \n  }\n\n  cancelUser(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['user', 'list', this.dealerId]);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.loading=true;\n      this.userService.create(this.user).then((res:any)=>{\n        this.loading=false;\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.router.navigate(['user', 'list', this.dealerId]);\n      }).catch((err:any)=>{\n        UIkit.modal(_elementId).hide();\n        this.loading=false;\n        UIkit.notification({\n          message: err,\n          status: 'warning',\n          timeout: 1000\n        })\n      })\n\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n    <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n        <div class=\\\"uk-navbar-left\\\">\\n            <a class=\\\"uk-navbar-item uk-logo\\\">{{'user edit'|translate}}</a>\\n        </div>\\n        <div class=\\\"uk-navbar-right\\\">\\n        </div>\\n    </nav>\\n    <form class=\\\"uk-form-stacked\\\">\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"username\\\">*{{'username'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"fullname\\\">{{'fullname'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"fullname\\\" id=\\\"fullname\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.fullname\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"position\\\">*{{'position'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <select class=\\\"uk-select\\\" id=\\\"position\\\" name=\\\"position\\\" [(ngModel)]=\\\"user.user_role_id\\\" disabled>\\n                        <option value=\\\"0\\\" selected>Please select user role</option>\\n                        <option value=\\\"supervisor\\\">Supervisor</option>\\n                        <option value=\\\"analyst\\\">Analyst</option>\\n                        <option value=\\\"technician\\\">Technician</option>\\n                </select>\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"email\\\">{{'email'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"tel\\\">{{'tel'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"tel\\\" id=\\\"tel\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.tel\\\">\\n            </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"password\\\">{{'new'|translate}} {{'password'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"uk-margin\\\">\\n            <label class=\\\"uk-form-label\\\" for=\\\"password-reply\\\"> {{'reply'|translate}} {{'new'|translate}} {{'password'|translate}}</label>\\n            <div class=\\\"uk-form-controls\\\">\\n                <input class=\\\"uk-input\\\" name=\\\"password-reply\\\" id=\\\"password-reply\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.passwordReply\\\">\\n            </div>\\n        </div>\\n    </form>\\n    <div class=\\\"uk-container uk-text-right uk-margin-large-bottom\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"editUser()\\\">{{'edit'|translate}}</button>\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded uk-margin-small-left\\\" (click)=\\\"cancelUser()\\\">{{'cancel'|translate}}</button>\\n    </div>\\n</div>\\n\\n<app-confirm-modal [elementId]=\\\"confirmModal.elementId\\\" [detail]=\\\"confirmModal.detail\\\" (onClick)=\\\"onClickConfirmModal($event)\\\"></app-confirm-modal>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport {TranslateService, TranslationChangeEvent} from '@ngx-translate/core';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  \n  dealerId = '';\n  userId = '';\n  loading = false;\n\n  confirmModal = {\n    elementId:\"user-edit-confirm-modal\",\n    detail:this.translate.instant(\"Do you confirm to update User?\"),\n    state:\"\",\n  }\n\n  user = {\n    id: '',\n    passwordReply: '',\n    username: '',\n    fullname: '',\n    password: '',\n    user_role_id: '',\n    email: '',\n    tel: '',\n    dealer_id: '',\n  }\n\n  constructor(private router : Router, private activeRoute : ActivatedRoute, private userService: UserService, private translate: TranslateService) { \n    this.userId = activeRoute.snapshot.params['userId'];\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadUser();\n  }\n\n  loadUser(){\n    this.userService.get(this.userId).then((res:any)=>{\n      this.user = res.data.user;\n    }).catch((err:any)=>{\n      UIkit.notification({\n        message: this.translate.instant('Cannot load Profile'),\n        status: 'warning',\n        timeout: 1000\n      })\n    })\n  }\n\n  editUser(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(this.user.password == \"\"){\n      UIkit.modal(_elementId).show();\n    }else{\n      if(this.user.password == this.user.passwordReply){\n        UIkit.modal(_elementId).show();\n      }else{\n        UIkit.notification({\n          message: this.translate.instant('password and re-password not match'),\n          status: 'warning',\n          timeout: 1000\n        })\n      }\n    }\n  }\n\n  cancelUser(){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    UIkit.modal(_elementId).$destroy(true);\n    this.router.navigate(['user', 'list', this.dealerId]);\n  }\n\n  onClickConfirmModal(event){\n    let _elementId = \"#\"+this.confirmModal.elementId;\n    if(event){\n      this.loading=true;\n      this.userService.edit(this.user).then((res:any)=>{\n        this.loading=false;\n        UIkit.util.on(_elementId, 'hidden', function () {\n          UIkit.modal(_elementId).$destroy(true);\n        });\n        UIkit.modal(_elementId).hide();\n        this.router.navigate(['user', 'list', this.dealerId]);\n      }).catch((err:any)=>{\n        UIkit.modal(_elementId).hide();\n        this.loading=false;\n        UIkit.notification({\n          message: err,\n          status: 'warning',\n          timeout: 1000\n        })\n      })\n    }else{\n      UIkit.modal(_elementId).hide();\n    }\n  }\n\n  onHeaderClick(event){\n    if(event == 'back'){\n      this.router.navigate(['menu']);\n    }\n  }\n}\n","module.exports = \"<app-header [backPath]=\\\"true\\\" (onClickButton)=\\\"onHeaderClick($event)\\\"></app-header>\\n<div class=\\\"uk-container\\\">\\n  <nav class=\\\"uk-navbar-container uk-margin\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left\\\">\\n\\n      <a class=\\\"uk-navbar-item uk-logo\\\" >{{'user'|translate}} {{'list'|translate}}</a>\\n    </div>\\n    <div class=\\\"uk-navbar-right\\\">\\n      <div class=\\\"uk-navbar-item\\\">\\n        <button class=\\\"uk-button uk-button-default uk-border-rounded\\\" (click)=\\\"createUser()\\\">{{'create'|translate}} {{'user'|translate}}</button>\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"uk-card uk-card-default uk-margin\\\" style=\\\"border:1px solid #ddd;\\\"  *ngFor=\\\"let user of users; let i = index\\\">\\n    <div class=\\\"uk-card-header uk-background-muted\\\">\\n\\t\\t<div class=\\\"uk-width-expand\\\">\\n\\t\\t  <table class=\\\"uk-table uk-table-striped\\\">\\n\\t\\t\\t  <tr>\\n\\t\\t\\t\\t<!-- <td class=\\\"uk-text-nowrap\\\">{{'id'|translate}}</td>\\n\\t\\t\\t\\t<td>{{user.id}}</td> -->\\n\\t\\t\\t  </tr>\\n\\t\\t\\t  <tr>\\n\\t\\t\\t\\t<td class=\\\"uk-text-nowrap\\\">{{'username'|translate}}</td>\\n\\t\\t\\t\\t<td>{{user.username}}</td>\\n\\t\\t\\t  </tr>\\n\\t\\t\\t  <tr>\\n\\t\\t\\t\\t<!-- <td class=\\\"uk-text-nowrap\\\">{{'fullname'|translate}}</td>\\n\\t\\t\\t\\t<td>{{user.fullname}}</td> -->\\n\\t\\t\\t  </tr>\\n\\t\\t\\t  <tr>\\n\\t\\t\\t\\t<td class=\\\"uk-text-nowrap\\\">{{'position'|translate}}</td>\\n\\t\\t\\t\\t<td>{{user.user_role_id}}</td>\\n\\t\\t\\t  </tr>\\n\\t\\t  </table>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"uk-card-footer\\\">\\n          <button class=\\\"uk-button uk-button-mute uk-button-small uk-border-rounded\\\" (click)=\\\"editUser(user.id)\\\">{{'edit'|translate}}</button>\\n\\t</div>\\n  </div> \\n\\n\\n<div class=\\\"uk-margin\\\">\\n  <ul class=\\\"uk-pagination uk-flex-center\\\" uk-margin>\\n    <li *ngIf=\\\"pageController.pageIndex != 1\\\">\\n      <a (click)=\\\"changePageonClick(false,-1)\\\">\\n        <span uk-pagination-previous></span>\\n      </a>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex > 4\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngFor=\\\"let index of pageController.pageArray\\\" [class.uk-active]=\\\"index==pageController.pageIndex\\\">\\n      <a (click)=\\\"changePageonClick(true,index)\\\">{{index}}</a>\\n    </li>\\n    <!-- <li class=\\\"uk-active\\\"><span>4</span></li> -->\\n    <li *ngIf=\\\"pageController.pageNumber - pageController.pageIndex > 3\\\" class=\\\"uk-disabled\\\">\\n      <span>...</span>\\n    </li>\\n    <li *ngIf=\\\"pageController.pageIndex != pageController.pageNumber\\\">\\n      <a (click)=\\\"changePageonClick(false,1)\\\">\\n        <span uk-pagination-next></span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n</div>\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\"><span class=\\\"uk-margin-small-right\\\" uk-spinner=\\\"ratio: 3\\\"></span></div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {  Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../services/user.service';\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  dealerId = '';\n  loading = false;\n  users = [];\n  \n  pageController = {\n    itemPerPage: 10,\n    itemNumber: 0,\n    pageNumber: 0,\n    pageIndex: 1,\n    pageArray: [],\n  };\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute, private userService: UserService) {\n    this.dealerId = activeRoute.snapshot.params['dealerId'];\n  }\n\n  ngOnInit() {\n    this.loadUser();\n  }\n\n  loadUser(){\n      this.loading = true;\n      this.userService.list(this.dealerId, (this.pageController.pageIndex - 1) * this.pageController.itemPerPage, this.pageController.itemPerPage).then((res:any)=>{\n        this.pageController.itemNumber = res.data.count;\n        this.pageController.pageNumber = Math.ceil(this.pageController.itemNumber / this.pageController.itemPerPage);\n        this.pageController.pageArray = [];\n  \n        ///make pagination\n        this.pageController.pageArray.push(this.pageController.pageIndex);\n        for(let count = 0 ; count < 3 ; count++){\n          if(this.pageController.pageIndex - count - 1 > 0 ){\n            this.pageController.pageArray.unshift(this.pageController.pageIndex - count - 1);\n          }\n        }\n        for(let count = 0 ; count < 3 ; count++){\n          if(this.pageController.pageIndex + count < this.pageController.pageNumber){\n            this.pageController.pageArray.push(this.pageController.pageIndex + count + 1);\n          }\n        }\n        this.users = res.data.user;\n        this.loading = false;\n      }).catch((err:any)=>{\n        UIkit.notification({\n          message: err,\n          status: 'warning',\n          timeout: 1000\n        });\n        this.loading = false;\n      });\n  }\n\n  createUser(){\n    this.router.navigate(['user', 'create', this.dealerId]);\n  }\n\n  editUser(userId){\n    this.router.navigate(['user', 'edit', this.dealerId, userId]);\n  }\n\n  onHeaderClick(event){\n    if(event == 'back'){\n      this.router.navigate(['menu']);\n    }\n  }\n\n  changePageonClick(option, index){\n    if(option){\n      this.pageController.pageIndex = index;\n    }else{\n      this.pageController.pageIndex += index;\n    }\n    this.loadUser();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Configuration } from '../../configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenService {\n\n  constructor(private http: HttpClient){\n  }\n  \n  userLogin(username, password){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/auth/login\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n        username: username,\n        password: password,\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            localStorage.setItem('authToken', res.auth.token);\n            resolve(res);\n          },\n          (msg:any) => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  userGetInfo(){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/auth/get\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            resolve(res);\n          },\n          msg => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n  \n  userLogout(){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = Configuration.server_url + \"/auth/logout\";\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  \"application/json; charset=UTF-8\",\n        })\n      };\n      let params  = {\n      };\n      this.http.post(apiURL,params,httpOptions)\n        .toPromise()\n        .then(\n          (res:any) => { // Success\n            this.clear();\n            resolve(res);\n          },\n          msg => { // Error\n            reject(msg);\n          }\n        );\n    });\n    return promise;\n  }\n\n  clear(){\n    localStorage.removeItem('userType');\n    localStorage.removeItem('userName');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('dealerId');\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}